!function(window,$){"use strict";window.awr=window.awr||{},window.awr.bootQueue=window.awr.bootQueue||[];var console=window.console;function $abstract(name){return awr.Q.$abstract.call(awr.Q,name)}function $export(path,exp,opts){opts=opts||{takeEasy:!0,appExport:!1};let q=window.awr.Q;if(q.$functionExist(q.$export))return opts.takeEasy=!q.$booleanFalse(opts.takeEasy)||opts.takeEasy,q.$export.apply(q,[path,exp,opts]);setTimeout(function(){opts.takeEasy=!q.$booleanFalse(opts.takeEasy)||opts.takeEasy,q.$export.apply(q,[path,exp,opts])},100)}function $import(obj){let q=window.awr.Q;return q.$import.call(q,obj)}function $available(ref){let q=window.awr.Q;return q.$available.call(q,ref)}function __$require__(requires,obj){let translated,q=window.awr.Q;requires=q.$arrayExist.call(q,requires)?requires:[],q.$objectExist.call(q,obj)?requires.push(obj):q.$stringExist.call(q,obj)?(translated=q.$translateToRequire.call(q,obj),q.$objectExist.call(q,translated)&&requires.push(translated)):q.$arrayExist.call(q,obj)&&q.$forEachIndex.apply(q,[obj,function(n,i){__$require__(requires,n)}])}function __$loadErrors__(name){let q=window.awr.Q;return q.$loadErrorRegistry.call(q,name)}function __$errorOut__(errors,errName,replaces){let q=window.awr.Q;q.$objectExist.call(q,errors)&&q.$stringExist.call(q,errName)&&q.$errorNotif.apply(q,[errors,errName,replaces])}function __onModuleBootTimeoutError__(err){window.console.error("initModule@KERNEL@AWR: Failed to instantiate kernel module. \n\t + Details: Init process interrupted by timeout. \n\t + Hint: Required components were not ready  before maximum wait time."),window.console.error(err)}function __callModuleMainFn__(mainFn,requires){try{"function"==typeof mainFn&&(!function(requires){return window.awr.Q.$arrayNotEmpty(requires)||window.awr.Q.$objectExist(requires)}(requires)?mainFn.call(window.awr.Q):window.awr.Q.$commonWaitAndProceedOperation(requires,function(){mainFn.call(window.awr.Q)},3e3,__onModuleBootTimeoutError__))}catch(e){console.error(e)}}function __pushToBootQueue__(init){window.awr.bootQueue.push({moduleName:"basicKernelModule@AWR",requires:["object:awr.Q","string:awr.Q.$pluginsReadyFlag"],wTime:18e4,init:init,QAsContext:!0})}!function(){var __$$requires$$__=[];__pushToBootQueue__(function(){let awr=window.awr||{},Q=awr.Q;awr.$=Q.$objectExist(awr.$)?awr.$:{},__$loadErrors__("$$core@kernel");let qLogAvailable=()=>Q&&Q.$objectExist(Q.$log)&&Q.$functionExist(Q.$log.error);function AWRCore(){}Q.$commonWaitAndProceedOperation(["object:awr.$appFormRegistry"],()=>{Q.$extendImportType("form",function(formName){return awr.$appFormRegistry=Q.$asCollection(awr.$appFormRegistry),awr.$appFormRegistry.$collect((collected,nxt)=>nxt.name===formName?nxt:collected)}),Q.$extendExportType("form",function(formName,form,opts){awr.$appFormRegistry=Q.$asCollection(awr.$appFormRegistry),(form=Q.$objectExist(form)?form:{}).name=formName,awr.$appFormRegistry.push(form)}),Q.$extendAvailableType("form",function(formName){return awr.$appFormRegistry=Q.$asCollection(awr.$appFormRegistry),awr.$appFormRegistry.$contains("name",formName)})},2e4,"Failed to provide $export interface support for forms"),AWRCore.prototype.$log=qLogAvailable()?{error:Q.$log.error,departed:Q.$log.departed,warning:Q.$log.warning}:{error:function(){console.error("Fake error module triggered")},departed:function(){console.error("Fake departed module triggered")},warning:function(){console.error("Fake warning module triggered")}},qLogAvailable()||setTimeout(function(){AWRCore.prototype.$log={error:Q.$log.error,departed:Q.$log.departed,warning:Q.$log.warning}},100),Q.$installInAWRGlobal("$$core","core",{core:new AWRCore},!0),Q.$defineConstForRegistry(awr.$$core,"$$set",awr.Q,!0),awr.$$isAppStarted=!1,awr.errorLog=awr.$$core.$log.error,awr.departedLog=awr.$$core.$log.departed,awr.warningLog=awr.$$core.$log.warning,$export("errorLog",awr.$$core.$log.error,{takeEasy:!1}),$export("departedLog",awr.$$core.$log.departed,{takeEasy:!1}),$export("warningLog",awr.$$core.$log.warning,{takeEasy:!1}),__callModuleMainFn__("function"==typeof $main?$main:null,__$$requires$$__)})}(),function(){var __$$requires$$__=[];__pushToBootQueue__(function(){let awr=window.awr||{},bootQueue=awr.bootQueue,Q=this,stats=awr.basicStats=Q.$objectExists(awr.basicStats)?awr.basicStats:{},coreEssentialsModule={moduleName:"$$coreEssentials@CORE",requires:["string:awr.Q.$pluginsReadyFlag","object:awr.$$core","object:awr.$$core.$$class","object:awr.$$core.$$scope","object:awr.$$core.$$coreTemplate","object:awr.$$core.$$appTemplate","object:awr.scopeManager"],wTime:18e4,init:function(){Q.$installInAWRGlobal("$$coreEssentials","$$essentials",{$$essentials:{$$status:"$$ready$$",$$paths:coreEssentialsModule.requires,$$componentNames:getComponentNames(coreEssentialsModule.requires)}}),stats.coreEssentialsRegisTime=(new Date).getTime()},QAsContext:!0};bootQueue.push(coreEssentialsModule);let compEssentialsModule={moduleName:"$$compEssentials@CORE",requires:["object:awr.$$coreEssentials","object:awr.serverCall","object:awr.serial"],wTime:24e4,init:function(){Q.$installInAWRGlobal("$$compEssentials","$$essentials",{$$essentials:{$$status:"$$ready$$",$$paths:compEssentialsModule.requires,$$componentNames:getComponentNames(compEssentialsModule.requires)}}),stats.compEssentialsRegisTime=(new Date).getTime()},QAsContext:!0};bootQueue.push(compEssentialsModule);let appEssentialsModule={moduleName:"$$appEssentials@CORE",requires:["object:awr.$$compEssentials","service:router","class:Observable@event","class:Model@model","object:awr.observableManager","object:awr.ux","bundle:coreTypes@AwrFactory","bundle:coreFactories@AwrFactory"],wTime:3e5,init:function(){Q.$installInAWRGlobal("$$appEssentials","$$essentials",{$$essentials:{$$status:"$$ready$$",$$paths:appEssentialsModule.requires,$$componentNames:getComponentNames(appEssentialsModule.requires)}}),stats.appEssentialsRegisTime=(new Date).getTime()},QAsContext:!0};function getComponentNames(requires){return Q.$arrayNotEmpty(requires)?Q.$map(requires,function(){let refStr,name,ref=this;if(Q.$stringExist(this)&&(refStr=Q.$isQPrimitiveVal(this)?Q.$getQPrimitiveVal(this):this,ref=Q.$translateToRequire(refStr)),Q.$objectExist(ref))return name=ref.name.split(".").reverse().join("@")}):[]}bootQueue.push(appEssentialsModule),__callModuleMainFn__("function"==typeof $main?$main:null,__$$requires$$__)})}(),function(){var __$$requires$$__=[],__$$errors$$__=null;function $errorOut(errName,replaces){return __$errorOut__(__$$errors$$__,errName,replaces)}__pushToBootQueue__(function(){let manager,awr=window.awr||{},Q=awr.Q,stats=awr.basicStats=Q.$objectExists(awr.basicStats)?awr.basicStats:{},mainRegistry={};function AwrRegistry(){}function hasBasicGetArguments(regName,itemId){return Q.$stringExist(regName)&&Q.$objectExist(mainRegistry[regName])&&Q.$stringExist(itemId)}function showBasicArgError(regName,itemId,requestName){let err=new Error;err.message=Q.$stringExist(regName)&&!Q.$stringExist(itemId)?`Bad member@registry name [${regName} ][ ${itemId} ] with request [ ${requestName} ]`:Q.$stringExist(regName)?`Registry [ ${regName} ] does not exist! : Request [ ${requestName} ]`:`Bad registry arguments for ${requestName}.`,$errorOut("illegalRegAccess",[{key:"errMsg",value:err}])}__$$errors$$__=__$loadErrors__("$$registry@kernel"),AwrRegistry.prototype.$create=function(regName){return!Q.$stringExist(regName)||Q.$objectExist(mainRegistry[regName])?($errorOut("illegalCreateReg",[{key:"errMsg",value:Q.$stringExist(regName)?"Registry ["+regName+"] already exist!":"Bad registry name ["+regName+"]"}]),!1):(Q.$definePropertyForRegistry(mainRegistry,regName,{}),!0)},AwrRegistry.prototype.$hasRegistry=function(regName){return Q.$stringExist(regName)&&Q.$objectExist(mainRegistry[regName])&&mainRegistry.hasOwnProperty(regName)},AwrRegistry.prototype.$add=function(regName,itemId,item){return hasBasicGetArguments(regName,itemId)?(Q.$definePropertyForRegistry(mainRegistry[regName],itemId,Q.$exist(item)?item:null),!0):(showBasicArgError(regName,itemId,"$@registry"),!1)},AwrRegistry.prototype.$remove=function(regName,itemId){return hasBasicGetArguments(regName,itemId)?(delete mainRegistry[regName][itemId],!0):(showBasicArgError(regName,itemId,"$remove@registry"),!1)},AwrRegistry.prototype.$get=function(regName,itemId){return hasBasicGetArguments(regName,itemId)?Q.$exist(mainRegistry[regName][itemId])?mainRegistry[regName][itemId]:null:(showBasicArgError(regName,itemId,"$get@registry"),null)},AwrRegistry.prototype.$getKeys=function(regName){return hasBasicGetArguments(regName,"skipping id check")?Q.$asCollection(Object.keys(mainRegistry[regName])):(showBasicArgError(regName,"skipping id check","$getKeys@registry"),[])},AwrRegistry.prototype.$getAll=function(regName,getFn){return hasBasicGetArguments(regName,"skipping id check")?Q.$map(Object.keys(mainRegistry[regName]),nxt=>{let nxtItem,nxtResult=!1,nxtId=Q.$isQPrimitiveVal(nxt)?Q.$getQPrimitiveVal(nxt):nxt;if(nxtItem=mainRegistry[regName][nxtId],!Q.$functionExist(getFn))return nxtItem;try{nxtResult=getFn(nxtItem,nxtId)}catch(err){nxtResult=!1,$errorOut("badGetAllFn",[{key:"regName",value:regName},{key:"errMsg",value:err}])}return Q.$booleanTrue(nxtResult)?nxtItem:void 0}):(showBasicArgError(regName,"skipping id check","$getKeys@registry"),Q.$asCollection([]))},AwrRegistry.prototype.$inRegistry=function(regName,itemId){return hasBasicGetArguments(regName,itemId)?Q.$exist(mainRegistry[regName][itemId]):(showBasicArgError(regName,itemId,"$inRegistry@registry"),!1)},AwrRegistry.prototype.$isNull=function(regName,itemId){return hasBasicGetArguments(regName,itemId)?null===mainRegistry[regName][itemId]:(showBasicArgError(regName,itemId,"$isNull@registry"),!1)},AwrRegistry.prototype.$flush=function(regName,flushFn){return hasBasicGetArguments(regName,"skip id check")?Q.$functionExist(flushFn)?void Q.$forEachIndex(Object.keys(mainRegistry[regName]),function(n,i){let nxtItem,nxtResult=!1,nxtId=Q.$isQPrimitiveVal(n)?Q.$getQPrimitiveVal(n):n;if(nxtItem=mainRegistry[regName][nxtId],Q.$exist(nxtItem))try{nxtResult=flushFn(nxtItem,nxtId)}catch(err){$errorOut("badFlushFn",[{key:"regName",value:regName},{key:"errMsg",value:err}])}Q.$exist(nxtItem)&&!Q.$booleanTrue(nxtResult)||delete mainRegistry[regName][nxtId]}):($errorOut("flushFnMissing",[{key:"regName",value:regName}]),!1):(showBasicArgError(regName,"skip id check","$flush@registry"),!1)},AwrRegistry.prototype.$size=function(regName){return hasBasicGetArguments(regName,"skip id check")?Object.keys(mainRegistry[regName]).length:(showBasicArgError(regName,"skip id check","$size@registry"),-1)},$export("object:awr.registryManager",manager=new AwrRegistry,{takeEasy:!1}),stats.registryManagerRegisTime=(new Date).getTime(),__callModuleMainFn__("function"==typeof $main?$main:null,__$$requires$$__)})}(),function(){var __$$requires$$__=[],__$$errors$$__=null;__pushToBootQueue__(function(){__$require__(__$$requires$$__,["function:awr.registerClass"]);window.awr;function $main(){let Q=this,pendingRequests=Q.$asCollection([]);class ScriptRequest{static isPendingRequest(path){return pendingRequests.$count(nxt=>nxt===getCleanLazyModulePath(path))>0}static requestLazyModule(path){return ScriptRequest.isPendingRequest(path)?Promise.reject({message:path+" is already requested and pending"}):new Promise((resolve,reject)=>{let cleanPath=getCleanLazyModulePath(path);pendingRequests.push(path),function(path,callback){let done=!1,scr=document.createElement("script");function handleLoad(event){done||(done=!0,callback(event,"ok"))}scr.onload=handleLoad,scr.onreadystatechange=function(event){let state;done||"complete"===(state=scr.readyState)&&handleLoad(event)},scr.onerror=function(event){done||(done=!0,callback(event,"error"))},scr.type="text/javascript",scr.src=path,scr.async="async",scr.defer="defer",document.body.appendChild(scr)}(getCleanLazyModulePath(path),(event,status)=>{pendingRequests=pendingRequests.$filter(nxt=>nxt!==cleanPath),"ok"===status?(event.fullPath=cleanPath,event.genericPath=function(path){if(!Q.$stringExist(path))return path;path.startsWith("/")||(path="/"+path);return path=path.endsWith(".lazy.js")?path.substring(0,path.length-8):path}(cleanPath),resolve(event)):(__$errorOut__(__$$errors$$__,"failedToLoadLazyModule",[{key:"path",value:cleanPath}]),reject(event))})})}}function getCleanLazyModulePath(path){return Q.$stringExist(path)?(path.startsWith("/")||(path="/"+path),path=path.endsWith(".lazy.js")?path:`${path}.lazy.js`):path}$export("class:ScriptRequest@AwrAgent",ScriptRequest)}__$$errors$$__=__$loadErrors__("$$scriptRequest@kernel"),__callModuleMainFn__($main,__$$requires$$__)})}(),function(){var __$$requires$$__=[];__pushToBootQueue__(function(){let awr=window.awr||{};function $main(){class BrowserDetector extends awr.Service{static get $require(){return{}}constructor(){super(BrowserDetector.$require)}$detect(){return function(){if(void 0!==window.navigator)return parseUserAgent(window.navigator.userAgent);return null}()}$detectOS(userAgentString){return detectOS(userAgentString)}$parseUserAgent(userAgentString){return parseUserAgent(userAgentString)}}$export(BrowserDetector)}function detectOS(userAgentString){let detected=buildRules([["iOS",/iP(hone|od|ad)/],["Android OS",/Android/],["BlackBerry OS",/BlackBerry|BB10/],["Windows Mobile",/IEMobile/],["Amazon OS",/Kindle/],["Windows 3.11",/Win16/],["Windows 95",/(Windows 95)|(Win95)|(Windows_95)/],["Windows 98",/(Windows 98)|(Win98)/],["Windows 2000",/(Windows NT 5.0)|(Windows 2000)/],["Windows XP",/(Windows NT 5.1)|(Windows XP)/],["Windows Server 2003",/(Windows NT 5.2)/],["Windows Vista",/(Windows NT 6.0)/],["Windows 7",/(Windows NT 6.1)/],["Windows 8",/(Windows NT 6.2)/],["Windows 8.1",/(Windows NT 6.3)/],["Windows 10",/(Windows NT 10.0)/],["Windows ME",/Windows ME/],["Open BSD",/OpenBSD/],["Sun OS",/SunOS/],["Linux",/(Linux)|(X11)/],["Mac OS",/(Mac_PowerPC)|(Macintosh)/],["QNX",/QNX/],["BeOS",/BeOS/],["OS/2",/OS\/2/],["Search Bot",/(nuhk)|(Googlebot)|(Yammybot)|(Openbot)|(Slurp)|(MSNBot)|(Ask Jeeves\/Teoma)|(ia_archiver)/]]).filter(function(os){return os.rule&&os.rule.test(userAgentString)})[0];return detected?detected.name:null}function parseUserAgent(userAgentString){let browsers=buildRules([["edge",/Edge\/([0-9\._]+)/],["yandexbrowser",/YaBrowser\/([0-9\._]+)/],["vivaldi",/Vivaldi\/([0-9\.]+)/],["kakaotalk",/KAKAOTALK\s([0-9\.]+)/],["chrome",/(?!Chrom.*OPR)Chrom(?:e|ium)\/([0-9\.]+)(:?\s|$)/],["phantomjs",/PhantomJS\/([0-9\.]+)(:?\s|$)/],["crios",/CriOS\/([0-9\.]+)(:?\s|$)/],["firefox",/Firefox\/([0-9\.]+)(?:\s|$)/],["fxios",/FxiOS\/([0-9\.]+)/],["opera",/Opera\/([0-9\.]+)(?:\s|$)/],["opera",/OPR\/([0-9\.]+)(:?\s|$)$/],["ie",/Trident\/7\.0.*rv\:([0-9\.]+).*\).*Gecko$/],["ie",/MSIE\s([0-9\.]+);.*Trident\/[4-7].0/],["ie",/MSIE\s(7\.0)/],["bb10",/BB10;\sTouch.*Version\/([0-9\.]+)/],["android",/Android\s([0-9\.]+)/],["ios",/Version\/([0-9\._]+).*Mobile.*Safari.*/],["safari",/Version\/([0-9\._]+).*Safari/]]);if(!userAgentString)return null;let detected=browsers.map(function(browser){let match=browser.rule.exec(userAgentString),version=match&&match[1].split(/[._]/).slice(0,3);return version&&version.length<3&&(version=version.concat(1===version.length?[0,0]:[0])),match&&{name:browser.name,version:version.join(".")}}).filter(Boolean)[0]||null;return detected&&(detected.os=detectOS(userAgentString)),detected}function buildRules(ruleTuples){return ruleTuples.map(function(tuple){return{name:tuple[0],rule:tuple[1]}})}__$require__(__$$requires$$__,["object:awr.factory","function:awr.factory.$registerService"]),__callModuleMainFn__($main,__$$requires$$__)})}(),function(){var __$$requires$$__=[];__pushToBootQueue__(function(){let awr=window.awr||{},$=$import("window:jQuery");function $main(){let Q=this,resizeObserverCount=0,resizeObserverCountB=0;class WindowDimensions extends awr.Service{static get $require(){return{Observable:"class:Observable@event",events:"service:eventManager"}}constructor(){super(WindowDimensions.$require);let{Observable:Observable,events:events}=this;window.addEventListener("resize",function(event){events.$emit("windowDimensions:resize",event)}),this.resizeObsr=new Observable(observer=>{let resizeObserverId=`scree-resize-observer-${++resizeObserverCountB}`;return events.$on("windowDimensions:resize",event=>{observer.next(event)},resizeObserverId),()=>{events.$off("windowDimensions:resize",resizeObserverId)}},"window-dimensions-resize-observable"),Object.defineProperty(this,"height",{get(){return this.$dimensions().height},enumerable:!0,configurable:!1}),Object.defineProperty(this,"width",{get(){return this.$dimensions().width},enumerable:!0,configurable:!1}),Object.defineProperty(this,"win",{get:()=>$(window),enumerable:!0,configurable:!1})}get $width(){return this.width}get $height(){return this.height}get $resize(){return this.resizeObsr}$dimensions(){let{win:win}=this;return{width:win.width(),height:win.height()}}$hasTouchScreen(){let{win:win}=this;return window.navigator&&window.navigator.maxTouchPoints>0}$isInLandscapeMode(){let{win:win}=this;return win.width()/win.height()>1}$hasMobileDimensions(){let{win:win}=this;return win.width()<=641||win.width()<=750&&win.height()<=641}$hasTabletDimensions(){let{win:win}=this;return win.width()>641&&win.width()<1281&&win.height()>750||win.width()>750&&win.width()<=1281}$hasDesktopDimensions(){let{win:win}=this;return $(win).width()>1281}$hasLargeScreenDimensions(){let{win:win}=this;return win.width()>=1650}$getAbsoluteOffset(element){let{win:win}=this,top=0,left=0;for(;Q.$objectExist(element);)top+=Q.$numberExist(element.offsetTop)?element.offsetTop:0,left+=Q.$numberExist(element.offsetLeft)?element.offsetLeft:0,element=element.offsetParent;return{top:top,left:left}}}$export(WindowDimensions),$export("service:browserScreen",["class:Observable@event","service:eventManager",function(Observable,events){let win=$(window);window.addEventListener("resize",function(event){events.$emit("browserScreen:resize",event)});let serviceInterface={$resize:new Observable(observer=>{let resizeObserverId=`scree-resize-observer-${++resizeObserverCount}`;return events.$on("browserScreen:resize",event=>{observer.next(event)},resizeObserverId),()=>{events.$off("browserScreen:resize",resizeObserverId)}},"browser-screen-resize-observable"),$dimensions:()=>({width:win.width(),height:win.height()}),$hasTouchScreen:()=>window.navigator&&window.navigator.maxTouchPoints>0,$isInLandscapeMode:()=>win.width()/win.height()>1,$hasMobileDimensions:()=>win.width()<=641||win.width()<=750&&win.height()<=641,$hasTabletDimensions:()=>win.width()>641&&win.width()<1281&&win.height()>750||win.width()>750&&win.width()<=1281,$hasDesktopDimensions:()=>$(win).width()>1281,$hasLargeScreenDimensions:()=>win.width()>=1650,$getAbsoluteOffset(element){let top=0,left=0;for(;Q.$objectExist(element);)top+=Q.$numberExist(element.offsetTop)?element.offsetTop:0,left+=Q.$numberExist(element.offsetLeft)?element.offsetLeft:0,element=element.offsetParent;return{top:top,left:left}}};return Object.defineProperty(serviceInterface,"$height",{get:()=>serviceInterface.$dimensions().height,enumerable:!0,configurable:!1}),Object.defineProperty(serviceInterface,"$width",{get:()=>serviceInterface.$dimensions().width,enumerable:!0,configurable:!1}),serviceInterface}])}__$require__(__$$requires$$__,["object:awr.factory","function:awr.factory.$registerService"]),__callModuleMainFn__($main,__$$requires$$__)})}(),function(){var __$$requires$$__=[];__pushToBootQueue__(function(){window.awr;function $main(){let Q=this;$export("class:AppStatsSetup@AppView",class{constructor(){}static setupBootStats(stats){Object.defineProperty(stats,"bootTime",{get(){return this.bootDone-this.enterBoot},configurable:!0}),Object.defineProperty(stats,"viewBootTime",{get(){return this.viewBootDone-this.enterViewBoot},configurable:!0}),Object.defineProperty(stats,"appActualBootTime",{get(){return Q.$numberExists(this.docInitRequest)?this.viewBootDone-this.docInitRequest:"Unknown"},configurable:!0}),Object.defineProperty(stats,"bodyScriptLoadTime",{get(){return Q.$numberExists(this.docInitRequest)&&Q.$numberExists(this.docBodyTime)?this.docBodyTime-this.docInitRequest:"Unknown"},configurable:!0}),Object.defineProperty(stats,"appStartWaitTime",{get(){return Q.$numberExists(this.docInitRequest)?this.enterBoot-this.docInitRequest:"Unknown"},configurable:!0}),Object.defineProperty(stats,"coreEssentialsRegisDelay",{get(){return Q.$numberExists(this.coreEssentialsRegisTime)?this.coreEssentialsRegisTime-this.docInitRequest:"Unknown"},configurable:!0}),Object.defineProperty(stats,"compEssentialsRegisDelay",{get(){return Q.$numberExists(this.compEssentialsRegisTime)?this.compEssentialsRegisTime-this.docInitRequest:"Unknown"},configurable:!0}),Object.defineProperty(stats,"appEssentialsRegisDelay",{get(){return Q.$numberExists(this.appEssentialsRegisTime)?this.appEssentialsRegisTime-this.docInitRequest:"Unknown"},configurable:!0}),Object.defineProperty(stats,"registryManagerRegisWaitTime",{get(){return Q.$numberExists(this.registryManagerRegisTime)?this.registryManagerRegisTime-this.docInitRequest:"Unknown"},configurable:!0}),Object.defineProperty(stats,"classManagerRegisWaitTime",{get(){return Q.$numberExists(this.classManagerRegisTime)?this.classManagerRegisTime-this.docInitRequest:"Unknown"},configurable:!0}),Object.defineProperty(stats,"eventManagerRegisWaitTime",{get(){return Q.$numberExists(this.eventManagerRegisTime)?this.eventManagerRegisTime-this.docInitRequest:"Unknown"},configurable:!0}),Object.defineProperty(stats,"scopeManagerRegisWaitTime",{get(){return Q.$numberExists(this.scopeManagerRegisTime)?this.scopeManagerRegisTime-this.docInitRequest:"Unknown"},configurable:!0}),Object.defineProperty(stats,"scopeAPIRegisWaitTime",{get(){return Q.$numberExists(this.scopeAPIRegisTime)?this.scopeAPIRegisTime-this.docInitRequest:"Unknown"},configurable:!0}),Object.defineProperty(stats,"routerRegisWaitTime",{get(){return Q.$numberExists(this.routerRegisTime)?this.routerRegisTime-this.docInitRequest:"Unknown"},configurable:!0})}static setupBootReport(stats){Object.defineProperty(stats,"bootReport",{get(){let r="";return Q.$numberExists(this.docInitRequest)&&(r+=`Document init started on ${new Date(this.docInitRequest)} \n`),Q.$numberExists(this.bodyScriptLoadTime)&&(r+=`Document synchronous resource registration completed on ${new Date(this.docInitRequest)}`),r+="\n\nRequests start and done times:\n\n",r+=`\tApp boot request:\n\t\t Started on ${new Date(this.enterBoot)}`+`\n\t\t Ready on ${new Date(this.bootDone)} \n`+`\n\tFirst app view request:\n\t\t Started on ${new Date(this.enterViewBoot)}`+`\n\t\t ready on ${new Date(this.viewBootDone)}`,r+="\n\nDelays and process time durations:\n",r+=`\n\t Boot duration: ${this.bootTime} milliseconds`,Q.$numberExists(this.bodyScriptLoadTime)&&(r+=`\n\t Synchronous resources load time: ${this.bootTime} milliseconds`),this.viewBootFailed?r+=`\n\t First app-view boot failed by an error: ${this.viewBootFailReason}`:r+=`\n\t First app-view boot: ${this.viewBootTime} milliseconds`,Q.$numberExists(this.appActualBootTime)?(r+=`\n\t Complete boot process of the app: ${this.appActualBootTime} milliseconds\n`,r+="\nRegistration delays calculated from document init:\n\n",r+=`\t RegistryManager: ${this.registryManagerRegisWaitTime} milliseconds\n`,r+=`\t ClassManager : ${this.classManagerRegisWaitTime} milliseconds\n`,r+=`\t EventManager : ${this.eventManagerRegisWaitTime} milliseconds\n`,r+=`\t ScopeAPI : ${this.scopeAPIRegisWaitTime} milliseconds\n`,r+=`\t ScopeManager : ${this.scopeManagerRegisWaitTime} milliseconds\n`,r+=`\t Router : ${this.routerRegisWaitTime} milliseconds\n`,r+=`\t CoreEssentials bundle : ${this.coreEssentialsRegisDelay} milliseconds\n`,r+=`\t CompEssentials bundle : ${this.compEssentialsRegisDelay} milliseconds\n`,r+=`\t AppEssentials bundle : ${this.appEssentialsRegisDelay} milliseconds\n`,r+=`\t AppStart request: ${this.appStartWaitTime} milliseconds\n`):r+="\nWarning: < DocStats info missing >",r}})}})}__$require__(__$$requires$$__,["function:awr.registerClass"]),__$loadErrors__("$$route@kernel"),__callModuleMainFn__($main,__$$requires$$__)})}(),function(){var __$$requires$$__=[];__pushToBootQueue__(function(){let awr=window.awr||{};__$loadErrors__("$$route@kernel"),__$require__(__$$requires$$__,["function:awr.factory.$registerObservable","object:awr.eventManager","function:awr.Observable"]);const obsName="events@AppView";function $main(){let events=$import("object:awr.eventManager"),$on=events.$on,$off=(events.$emit,events.$off),listenerIdSuffix="AppViewEvents",observerId=0;class AppViewEvents extends awr.Observable{static get $require(){return{}}static get name(){return obsName}constructor(name){super(AppViewEvents.$require)}makeSubscriber(){return observer=>{let listenerId=`l${observerId+=1}@${listenerIdSuffix}`;return $on("appView:routine-event",event=>{observer.next(event)}),()=>{$off("appView:routine-event",listenerId)}}}}$export(`observable:${obsName}`,AppViewEvents)}__callModuleMainFn__($main,__$$requires$$__)})}(),function(){var __$$requires$$__=[];__pushToBootQueue__(function(){__$require__(__$$requires$$__,["object:awr.$$core.$$class"]);const rootComName="rootComp",viewCompName="viewComp";let awr=window.awr||{};function $main(){let Q=awr.Q,$=$import("window:jQuery");$export("class:RootElementCreator@AwrAppView",class{constructor(){}static get rootComponentName(){return rootComName}static get viewComponentName(){return viewCompName}static createRootComponent({compManager:compManager,controllerName:controllerName}){compManager.$removeComponent(rootComName);class RootComp extends awr.Component{static get $require(){return{}}constructor(){super(RootComp.$require),this.template="ux/root/app.hbs",this.initControllerAsSuperScope=!0,this.controller=controllerName,this.afterControllerCall=function(){let scope=this;Q.$stringExist(scope.appName)&&$("body > div[awr-app]").attr("awr-app",scope.appName),$import("object:routeManager").$reloadCurrentState()}}}$export(RootComp)}static createViewComponent({compManager:compManager,controllerName:controllerName,template:template,scopeManager:scopeManager,superScope:superScope}){compManager.$removeComponent(viewCompName);class ViewComp extends awr.Component{static get $require(){return{}}constructor(){super(ViewComp.$require),this.template=template,this.controller=controllerName,this.beforeControllerCall=function(){let oldViewScopeId=superScope.$viewScopeId;Q.$exist(oldViewScopeId)&&scopeManager.$removeScope(oldViewScopeId),compManager.$flush()},this.afterControllerCall=function(){superScope.$viewScopeId=this.$getScopeId()}}}$export(ViewComp)}})}__callModuleMainFn__($main,__$$requires$$__)})}(),function(){var __$$requires$$__=[],__$$errors$$__=null;function $errorOut(errName,replaces){return __$errorOut__(__$$errors$$__,errName,replaces)}__pushToBootQueue__(function(){__$require__(__$$requires$$__,["object:awr.$$core.$$class","class:LegacyRoutines@legacy@AwrAppView","class:RootElementCreator@AwrAppView","object:awr.eventManager"]);let awr=window.awr||{};function $main(){let Q=awr.Q,stats=awr.basicStats,events=($import("window:jQuery"),$import("object:awr.eventManager")),$emit=(events.$on,events.$emit),legacyRoutines=(events.$off,$import("class:LegacyRoutines@legacy@AwrAppView")),elementCreator=$import("class:RootElementCreator@AwrAppView"),cleanCtrName=ctrName=>Q.$stringExists(ctrName)&&ctrName.startsWith("controller:")?ctrName.substring(11):ctrName;$export("class:StartRoutines@AwrAppView",class{constructor(){}static startUX3App(controllerName,opts,originalRootHtml){let cnf=opts||{},appContainer=Q.$findInDom("body","> div[awr-app]"),compManager=$import("object:compManager"),appHtml=originalRootHtml,data={appName:Q.$stringExist(cnf.name)?cnf.name:"UX3APP"};$available("template:ux/root/app.hbs")||$export("template:ux/root/app.hbs",ctx=>{ctx=ctx||{};let handlebars=$import("window:Handlebars");return Q.$objectExist(handlebars)?handlebars.compile(appHtml)(ctx):appHtml}),elementCreator.createRootComponent({compManager:compManager,controllerName:controllerName}),$import(`component:${elementCreator.rootComponentName}`).$compile(null,data).then(compiledHtml=>{appContainer.html(compiledHtml),Q.$booleanTrue(awr.$$isAppStarted)||(Q.$defineConstForRegistry(awr,"$$isAppStarted",!0,!0),Q.$objectExists(stats)&&(stats.bootDone=(new Date).getTime()),$emit("appView:routine-event",{name:"app-boot-ready",originalEventPublisher:"startUX3App@StartRoutines@AppView",time:new Date,uxAppType:"UX3App",controllerName:cleanCtrName(controllerName)}))},err=>{$errorOut("errorInRootCompile",[{key:"errMsg",value:err}]),$emit("appView:app-view-event",{name:"app-boot-failed",originalEventPublisher:"startUX3App@StartRoutines@AppView",time:new Date,uxAppType:"UX3App",controllerName:cleanCtrName(controllerName),error:err})})}static startUX3View(controllerName,opts){let viewContainer=Q.$findInDom("body","> div[awr-app] div#awrViewMain.main"),compManager=$import("object:awr.compManager"),scopeManager=$import("object:awr.scopeManager"),superScope=$import("object:awr.superScope"),data={},template=Q.$stringExist(opts.template)||Q.$functionExist(opts.template)?opts.template:LegacyRoutines.getPlaceholderTemplateFunction(opts);Q.$objectExist(opts.scopeArgs)?data=opts.scopeArgs:Q.$isEmpty(opts.scopeArgs)||Q.$each(opts.scopeArgs,nxt=>{Q.$objectExist(nxt)&&Q.$stringExist(nxt.key)&&(data[nxt.key]=Q.$exist(nxt.value)?nxt.value:null)}),elementCreator.createViewComponent({compManager:compManager,controllerName:controllerName,template:template,scopeManager:scopeManager,superScope:superScope}),$import(`component:${elementCreator.viewComponentName}`).$compile(superScope,data).then(compiledHtml=>{viewContainer.html(compiledHtml),Q.$objectExists(stats)&&!stats.firstViewRegisDone&&(stats.viewBootDone=(new Date).getTime(),Object.defineProperty(stats,"firstViewRegisDone",{get:()=>!0})),$emit("appView:routine-event",{name:"view-boot-ready",originalEventPublisher:"startUX3View@StartRoutines@AppView",time:new Date,uxViewType:"UX3View",controllerName:cleanCtrName(controllerName)})},err=>{$errorOut("errorInAppViewCompile",[{key:"errMsg",value:err}]),Q.$objectExists(stats)&&!stats.firstViewRegisDone&&(stats.viewBootDone=(new Date).getTime(),stats.viewBootFailed=!0,stats.viewBootFailReason=err,Object.defineProperty(stats,"firstViewRegisDone",{get:()=>!0})),$emit("appView:app-view-event",{name:"view-boot-failed",originalEventPublisher:"startUX3View@StartRoutines@AppView",time:new Date,uxViewType:"UX3View",controllerName:cleanCtrName(controllerName),error:err})})}static startTheApp(ctrFn,opts,originalRootHtml){legacyRoutines.startTheApp(ctrFn,opts,originalRootHtml)}static startTheView(ctrFn,opts){legacyRoutines.startTheView(ctrFn,opts)}})}__$$errors$$__=__$loadErrors__("$$appView@kernel"),__callModuleMainFn__($main,__$$requires$$__)})}(),function(){var __$$requires$$__=[],__$$errors$$__=null;function $errorOut(errName,replaces){return __$errorOut__(__$$errors$$__,errName,replaces)}__pushToBootQueue__(function(){let awr=window.awr||{};function $main(){let classManager,Q=this,stats=awr.basicStats=Q.$objectExists(awr.basicStats)?awr.basicStats:{},registry=$import("object:awr.registryManager");function AWRClass(){this.$$className="__NULL__"}function isAWRTypeClass(name){let cpName=Q.$stringExist(name)?Q.$firstLetterToUpperCase(name):"";return!(!Q.$stringExist(name)||!cpName.endsWith("@AWRType"))&&(cpName=cpName.replace("@AWRType",""),Q.$isUX3TypeClass(awr[cpName])||awr.$&&Q.$isUX3TypeClass(awr.$[cpName]))}registry.$create("ClassObject"),Q.$extendQInterface(AWRClass),AWRClass.prototype.isAWRClass=!0,AWRClass.prototype.setClassName=function(className){Q.$defineConstForRegistry(this,"$$className",className,!0)},AWRClass.prototype.getClassName=function(){return this.$$className},AWRClass.prototype.$registerClass=function(name,NewClass){let className;NewClass=NewClass||{name:"__NULL__"},Q.$isEmpty(NewClass)||(NewClass=Q.$reduce(NewClass,nxt=>Q.$functionExist(nxt)).$first()),Q.$stringExist(name)&&!Q.$setContainsString(["__NULL__","__NULL__@AWRClass"],name)?(name.endsWith("@AWRClass")&&(name=name.replace("@AWRClass","")),isAWRTypeClass(name)?$errorOut("classAlreadyInReg"):(name=name.substring(0,1).toUpperCase()+name.substring(1)).toLowerCase().endsWith("@awrtype")?$errorOut("nameSpaceReserved",[{key:"nameSpace",value:"AWRType"},{key:"className",value:name}]):(className=Q.$appendAWRNameSpace(name,"Class"),registry.$inRegistry("ClassObject",className)?$errorOut("classAlreadyInReg"):(NewClass=NewClass||{},registry.$add("ClassObject",className,NewClass),Q.$isUX3TypeClass(NewClass)||(NewClass.prototype.$$class=new AWRClass,NewClass.prototype.$$class.setClassName(className),NewClass.$extends=function(ParentClass){return AWRClass.prototype.$extendClass(NewClass,ParentClass)})))):$errorOut("badClassReg")},AWRClass.prototype.$extendClass=function(ChildClass,ParentClass){if(!ChildClass||!ParentClass)return void $errorOut("extendBadArgs");if(Q.$isUX3TypeClass(ChildClass))return void $errorOut("legacyExtendClassOnUX3Type",[{key:"childClass",value:ChildClass.name},{key:"parentClass",value:ParentClass.name}]);if(!(ParentClass.prototype.$$class&&ParentClass.prototype.$$class.isAWRClass&&registry.$inRegistry("ClassObject",ParentClass.prototype.$$class.getClassName())))return void $errorOut("extendSuperNotFound");if(!(ChildClass.prototype.$$class&&ChildClass.prototype.$$class.isAWRClass&&registry.$inRegistry("ClassObject",ChildClass.prototype.$$class.getClassName())))return void $errorOut("extendChildNotFound");if(ChildClass.prototype.$$super&&ChildClass.prototype.$$super.prototype.$$class&&registry.$inRegistry("ClassObject",ChildClass.prototype.$$super.prototype.$$class.getClassName()))return void $errorOut("extendSuperAlreadyDefined");let originalAwrClass=ChildClass.prototype.$$class;ChildClass.prototype=Object.create(ParentClass.prototype),ChildClass.prototype.constructor=ChildClass,ChildClass.prototype.$$super=ParentClass,ChildClass.prototype.$$class=originalAwrClass},AWRClass.prototype.$importClass=function(name){let cpName,className=name;if(Q.$stringExist(className)){if(name.endsWith("@AWRClass")&&(name=name.replace("@AWRClass","")),isAWRTypeClass(name)){if(cpName=Q.$firstLetterToUpperCase(name).replace("@AWRType",""),Q.$isUX3TypeClass(awr[cpName]))return awr[cpName];if(awr.$&&Q.$isUX3TypeClass(awr.$[cpName]))return awr.$[cpName]}if(className=Q.$appendAWRNameSpace(name,"Class"),registry.$inRegistry("ClassObject",className))return registry.$get("ClassObject",className);$errorOut("importBadClass")}else $errorOut("importBadClassName")},AWRClass.prototype.$classExist=function(name){let className=name;return Q.$stringExist(className)?(name.endsWith("@AWRClass")&&(name=name.replace("@AWRClass","")),!!isAWRTypeClass(name)||(className=Q.$appendAWRNameSpace(className,"Class"),Q.$exist(registry.$get("ClassObject",className)))):($errorOut("importBadClassName"),!1)},classManager=new AWRClass,Q.$defineConstForRegistry(awr.$$core,"$$class",classManager,!0),awr.classManager=classManager,$export("object:awr.classManager",classManager,{takeEasy:!1}),stats.classManagerRegisTime=(new Date).getTime(),awr.registerClass=awr.$$core.$$class.$registerClass,awr.importClass=awr.$$core.$$class.$importClass,awr.extendClass=awr.$$core.$$class.$extendClass,awr.classExist=awr.$$core.$$class.$classExist,Q.$extendImportType("class",function(classPath){return awr.$$core.$$class.$importClass.call(classManager,classPath)}),Q.$extendExportType("class",function(classPath,NewClass,opts){opts=Q.$objectExist(opts)?opts:{};let requires=[],proceed=()=>{awr.$$core.$$class.$registerClass.apply(classManager,[classPath,NewClass]),Q.$stringExist(opts.$extends)&&classManager.$classExist(opts.$extends)&&classManager.$extendClass(classManager.$importClass(classPath),classManager.$importClass(opts.$extends))};Q.$isUX3TypeClass(NewClass)?(Q.$each(NewClass.$require,(val,key)=>requires.push(val)),Q.$commonWaitAndProceedOperation(requires,proceed,3e3,err=>{$errorOut("classFactoryRequiresTimeout",[{key:"errMsg",value:err},{key:"factoryName",value:classPath},{key:"factoryType",value:`${NewClass.$superType.name}`}])})):proceed()}),Q.$extendAvailableType("class",function(classPath){return awr.$$core.$$class.$classExist.call(classManager,classPath)}),$export("function:awr.registerClass",awr.classManager.$registerClass,{takeEasy:!1}),$export("function:awr.importClass",awr.classManager.$importClass,{takeEasy:!1}),$export("function:awr.extendClass",awr.classManager.$extendClass,{takeEasy:!1}),$export("function:awr.classExist",awr.classManager.$classExist,{takeEasy:!1})}__$require__(__$$requires$$__,["object:awr.registryManager","object:awr.$$core"]),__$$errors$$__=__$loadErrors__("$$class@kernel"),__callModuleMainFn__($main,__$$requires$$__)})}(),function(){var __$$requires$$__=[],__$$errors$$__=null;function $errorOut(errName,replaces){return __$errorOut__(__$$errors$$__,errName,replaces)}__pushToBootQueue__(function(){__$require__(__$$requires$$__,["object:awr.registryManager","object:awr.scopeManager","object:awr.$$core.$$class","function:awr.registerClass"]);let awr=window.awr||{};function $main(){const Q=awr.Q;$import("window:jQuery");let registry=$import("object:awr.registryManager"),instanceRegName="ComponentInstanceObject",scopeManager=$import("object:awr.scopeManager");class CompUtils{constructor(){}static generateUniqueIdForComponent(compInstance){if(!Q.$objectExist(compInstance))return $errorOut("badCompForGetId"),null;let uniqueId="__NULL__@AWRComp",generateOne=function(){let oneId="CMP-"+(new Date).getTime();return Q.$objectExist(awr.serial)&&Q.$objectExist(awr.serial.basicPrime)&&(oneId="CMP-"+awr.serial.basicPrime.generateOne()),Q.$appendAWRNameSpace(oneId,"Comp")};for(;nxtId=uniqueId,registry.$inRegistry(instanceRegName,nxtId)||Q.$stringEqual(nxtId,"__NULL__@AWRComp")||Q.$stringEqual(nxtId,"__NULL__");)uniqueId=generateOne();var nxtId;return compInstance.$$compId$$=uniqueId,registry.$add(instanceRegName,uniqueId,compInstance),uniqueId}static resolveTemplatePath(context,cnf){let runTimeTempPath;context.templatePath=Q.$stringExist(cnf.template)&&$available("template:"+cnf.template)?cnf.template:null,!Q.$stringExist(context.templatePath)&&Q.$functionExist(context.template)?($export("template:"+(runTimeTempPath=CompUtils.getUniqueTempPath("fn")),context.template),$available("template:"+runTimeTempPath)&&(context.templatePath=runTimeTempPath)):!Q.$stringExist(context.templatePath)&&Q.$stringExist(context.template)&&($export("template:"+(runTimeTempPath=CompUtils.getUniqueTempPath("str")),function(ctx){return context.template}),$available("template:"+runTimeTempPath)&&(context.templatePath=runTimeTempPath))}static getControllerObject(context){let ctrlName,ctrlObject,requires=Q.$objectExist(context)&&Q.$arrayExist(context.requires)?context.requires:[],controller=Q.$objectExist(context)&&Q.$functionExist(context.controller)?context.controller:null;return!Q.$functionExist(controller)&&Q.$stringExist(context.controller)&&(ctrlObject=$import(ctrlName=(ctrlName=context.controller).startsWith("controller:")?ctrlName:`controller:${ctrlName}`),Q.$objectExist(ctrlObject)&&Q.$functionExist(ctrlObject.fn)&&(controller=ctrlObject.fn,requires=Q.$arrayExist(ctrlObject.requires)?ctrlObject.requires:[])),Q.$functionExist(controller)?{controller:controller,requires:requires}:null}static flushCompInstances(){registry.$flush(instanceRegName,function(nxtComp,nxtCompId){scopeManager.$flush();let nxtScopeId=Q.$objectExist(nxtComp.scope)?nxtComp.scope.$getScopeId():Q.$objectExist(nxtComp.injectedScope)?nxtComp.injectedScope.$getScopeId():null,nxtScope=scopeManager.$getScope(nxtScopeId);return!(Q.$exist(nxtScope)&&(Q.$booleanFalse(nxtScope.$isReady())||Q.$booleanTrue(nxtScope.$isPresent())))})}static getChildCompilePromise(context,child,childDom,parentVars){return new Promise(function(resolve,reject){child.$compile(context.scope,parentVars,child.nodeName,child.domAttributes).then(function(compiledChild){Q.$replaceDom(childDom,compiledChild),resolve(compiledChild)},function(err){$errorOut("subCompileFailed",[{key:"errMsg",value:err}]),resolve(null)})})}static getParentVars(parentContext,childContext,childDom){let vars={};return Q.$eachAttrInDom(childDom,function(value,key){let propNameInChild,cleanKey=Q.$toCamelCase(key),cleanValue=CompUtils.getCleanPropertyValue(value);Q.$setContainsString(childContext.scopeKeys,cleanKey)&&(propNameInChild=childContext.scopeKeyNames[cleanKey],vars[propNameInChild]=Q.$isQPrimitiveVal(cleanValue)?Q.$getQPrimitiveVal(cleanValue):Q.$stringEqual(cleanValue,"this")?parentContext.scope.$getOwnData():Q.$stringEqual(cleanValue,"__$$index$$__")?parentContext.scope.$getParams().$$index$$:Q.$stringExist(cleanValue)?parentContext.scope.$findProperty(cleanValue):null,Q.$exist(vars[propNameInChild])||delete vars[propNameInChild])}),vars}static getCleanPropertyValue(value){return Q.$numberExist(value)||Q.$booleanTrue(value)||Q.$booleanFalse(value)?Q.$asQPrimitive(value):Q.$stringExist(value)&&(value.startsWith('"')&&value.endsWith('"')||value.startsWith("'")&&value.endsWith("'"))?Q.$asQPrimitive(value.substring(1,value.length-1)):Q.$stringExist(value)&&value.startsWith("this.")?Q.$toCamelCase(value.replace("this.","")):Q.$stringExist(value)?Q.$toCamelCase(value):null}static getUniqueTempPath(prefix){let uniquePath="core.templates.runTime."+(prefix=Q.$stringExist(prefix)?prefix:"")+(new Date).getTime()+".hbs";for(;$available("temp:"+uniquePath);)uniquePath="core.templates.runTime."+prefix+(new Date).getTime()+".hbs";return uniquePath}}$export("class:CompUtils@AwrComp",CompUtils)}__$$errors$$__=__$loadErrors__("$$comp@kernel"),__callModuleMainFn__($main,__$$requires$$__)})}(),function(){var __$$requires$$__=[],__$$errors$$__=null;function $errorOut(errName,replaces){return __$errorOut__(__$$errors$$__,errName,replaces)}__pushToBootQueue__(function(){__$require__(__$$requires$$__,["object:awr.registryManager","object:awr.scopeManager","object:awr.coreTemplate","object:awr.$$core.$$class","function:awr.registerClass","class:CompUtils@AwrComp","class:UX3ControllerRunner@routines@AwrComp","class:LegacyControllerRunner@routines@AwrComp","class:TemplateCompiler@routines@AwrComp","class:CompSetup@routines@AwrComp"]);window.awr;function $main(){let Q=this,registry=($import("window:jQuery"),$import("object:awr.registryManager")),utils=$import("class:CompUtils@AwrComp"),ux3CtrRunner=$import("class:UX3ControllerRunner@routines@AwrComp"),legacyCtrRunner=$import("class:LegacyControllerRunner@routines@AwrComp"),templateCompiler=$import("class:TemplateCompiler@routines@AwrComp"),compSetup=$import("class:CompSetup@routines@AwrComp");function Component(cnf){this.hasConfigError=!1,compSetup.setupComponent(this,cnf),this.$$cnf$$=compSetup.takeSnapshotFromSetup(this,{isGetInstance:!0,originalControllerName:cnf.originalControllerName})}registry.$create("ComponentObject"),registry.$create("ComponentInstanceObject"),Component.prototype.$getInstance=function(){return new Component(this.$$cnf$$)},Component.prototype.$getName=function(){return this.compName},Component.prototype.$getDomName=function(){return Q.$toDashCase(this.compName)},Component.prototype.$getScope=function(){return this.scope},Component.prototype.$getScopeKeys=function(){return this.scopeKeys},Component.prototype.$getController=function(){return this.controller},Component.prototype.$getTemplate=function(){return this.template},Component.prototype.$compileWithScope=function(scope){},Component.prototype.$compile=function(parentScope,parentVars,nodeName){let runCTRPromise,ctrRun,prepareResult,comp=this,controllerFrame=utils.getControllerObject(comp);if(Q.$isUX3Type(controllerFrame.controller))ctrRun=ux3CtrRunner.run({context:comp,parentScope:parentScope,parentVars:parentVars,controllerFrame:controllerFrame});else{if(prepareResult=legacyCtrRunner.prepareComponent({context:comp,parentScope:parentScope,parentVars:parentVars}),Q.$booleanFalse(prepareResult))return $errorOut("compilePrepareFailed"),!1;ctrRun=legacyCtrRunner.run({context:comp,controllerFrame:controllerFrame})}return async function(runCTRPromise,component){let context=await runCTRPromise,compiledDomElement=await templateCompiler.compile({context:context});if(Q.$objectExist(compiledDomElement)){if(Q.$functionExist(component.afterCompile))try{component.afterCompile.call(component.scope)}catch(err){console.error(err)}return"rootComp@AWRComp"===component.compName&&$import("service:router").$reloadCurrentState(),compiledDomElement}new Error("Failed to init component!")}(runCTRPromise=new Promise((resolve,reject)=>{ctrRun.then(res=>{Q.$stringExist(nodeName)&&(res.nodeName=nodeName),resolve(res)},err=>{!function(err,comp){let ctrlName=Q.$stringExist(comp.controller)?comp.controller.replace("controller:",""):"< function >",cmpName=Q.$stringExist(comp.compName)?comp.compName.replace("@AWRComp",""):"anonymous";Q.$stringEqual(ctrlName,"$AppStartController")?ctrlName=`AppController@${ctrlName}`:Q.$stringExist(comp.$$originalControllerName)&&Q.$stringEqual(ctrlName,"$ViewController")?ctrlName=`${comp.$$originalControllerName.replace("controller:","")}@${ctrlName}`:Q.$stringEqual(ctrlName,"$ViewController")&&(ctrlName=`controller@${ctrlName}`);$errorOut("errorInController",[{key:"controllerName",value:ctrlName},{key:"errMsg",value:err},{key:"compName",value:cmpName&&cmpName.startsWith("viewComp")?"view":cmpName}])}(err,comp),reject(err)})}),comp)},$export("class:Component",Component)}__$$errors$$__=__$loadErrors__("$$comp@kernel"),__callModuleMainFn__($main,__$$requires$$__)})}(),function(){var __$$requires$$__=[],__$$errors$$__=null;function $errorOut(errName,replaces){return __$errorOut__(__$$errors$$__,errName,replaces)}__pushToBootQueue__(function(){__$require__(__$$requires$$__,["object:awr.registryManager","object:awr.scopeManager","object:awr.coreTemplate","object:awr.$$core.$$class","function:awr.registerClass","class:Component"]);let awr=window.awr||{};function $main(){let Q=this,registry=$import("object:awr.registryManager"),compRegName="ComponentObject",instanceRegName="ComponentInstanceObject",compManager=new CompManager,scopeManager=($import("object:coreTemplate"),$import("object:awr.scopeManager")),Component=$import("class:Component");function CompManager(){}function proceedWithExport(compName,confObj,opts){let ux3Context,item;return Q.$arrayExist(confObj)&&(item=Q.$reduce(confObj,nxt=>Q.$functionExist(nxt)).$first()),Q.$functionExist(item)&&Q.$isUX3Type(item)?((confObj=(ux3Context=Q.$buildUX3TypeInstance(confObj,compName)).item).name=ux3Context.name,confObj.requires=ux3Context.requires,Q.$exist(ux3Context.error)&&$errorOut("badUX3TypeCompConstructor",[{key:"compName",value:compName},{key:"errMsg",value:ux3Context.error}])):(confObj=Q.$objectExist(confObj)?confObj:{},opts=opts||{},confObj.name=compName),!!Q.$objectExist(confObj)&&compManager.$createComponent.apply(compManager,[confObj,opts])}CompManager.prototype.$createComponent=function(cnf,opts){cnf=Q.$objectExist(cnf)?cnf:{},opts=Q.$objectExist(opts)?opts:{},cnf.removeOnGet=Q.$booleanTrue(opts.removeOnGet);let newComp=new Component(cnf),errCmpName=Q.$stringExist(cnf.compName)?cnf.compName.replace("@AWRComp",""):"anonymous";return Q.$booleanTrue(newComp.hasConfigError)?($errorOut("failedToRegister",[{key:"compName",value:errCmpName}]),!1):Q.$booleanTrue(this.$componentExist(newComp.compName))?($errorOut("alreadyRegistered",[{key:"compName",value:errCmpName}]),!1):(registry.$add(compRegName,newComp.compName,newComp),!0)},CompManager.prototype.$createTemporaryComponent=function(opts){let newScope,htmlStr=(opts=opts||{}).html,parentScope=opts.parentScope,data=opts.data,compName="",dataFrame=Q.$objectExist(data)?data:Q.$asQPrimitive(data),tmpManager=$import("object:coreTemplate"),scpManager=$import("object:awr.scopeManager");for(;!Q.$stringExist(compName)||this.$componentExist(compName);)compName="tempComp"+(new Date).getTime();return newScope=scpManager.$createScope(dataFrame,parentScope),Q.$stringExist(opts.scopeType)&&newScope.$setType(opts.scopeType),Q.$exist(opts.index)&&(newScope.$getParams().$$index$$=opts.index),Q.$arrayExist(opts.set)&&(newScope.$getParams().$$set$$=opts.set),newScope.$setTemporaryFlag(),this.$createComponent({name:compName,requires:Q.$arrayExist(opts.requires)?opts.requires:[],template:Q.$stringExist(opts.template)?opts.template:function(tmpManager,contentStr){let tmpFn,tempPath="",content=Q.$stringExist(contentStr)?contentStr:"<strong>No Content</strong>";for(;!Q.$stringExist(tempPath)||tmpManager.$isPathUsed(tempPath);)tempPath="runTime/tmp"+(new Date).getTime()+".hbs";return tmpFn=function(ctx){let handlebars=$import("window:Handlebars");return Q.$objectExist(handlebars)?handlebars.compile(content)(ctx):content},tmpManager.$registerTemplate(tempPath,tmpFn),tempPath}(tmpManager,htmlStr),injectedScope:newScope,nodeName:Q.$stringExist(opts.nodeName)?opts.nodeName:"div",domAttributes:Q.$arrayExist(opts.domAttributes)?opts.domAttributes:[],scope:Q.$objectExist(opts.scope)?opts.scope:{},afterCompile:opts.afterCompile,controller:Q.$stringExist(opts.controller)?opts.controller:Q.$functionExist(opts.controller)?opts.controller:function(){}},{removeOnGet:!0}),compName},CompManager.prototype.$removeComponent=function(comp){let compName=Q.$objectExist(comp)?comp.compName:Q.$stringExist(comp)?comp:null;return Q.$stringExist(compName)&&this.$componentExist(compName)&&(compName=Q.$appendAWRNameSpace(compName,"Comp"),registry.$remove(compRegName,compName)),!1},CompManager.prototype.$componentExist=function(compName){if(!Q.$stringExist(compName))return!1;let cleanName=Q.$appendAWRNameSpace(compName,"Comp");return registry.$inRegistry(compRegName,cleanName)},CompManager.prototype.$getComponent=function(compName){if(!Q.$stringExist(compName))return null;let comp=registry.$get(compRegName,Q.$appendAWRNameSpace(compName,"Comp"));return Q.$objectExist(comp)?comp.$getInstance():null},CompManager.prototype.$getCompNames=function(){return registry.$getKeys(compRegName)},CompManager.prototype.$getRegistrySize=function(){return registry.$size(compRegName)},CompManager.prototype.$getInstanceRegistrySize=function(){return registry.$size(instanceRegName)},CompManager.prototype.$flush=function(){registry.$flush(instanceRegName,function(nxtComp,nxtCompId){scopeManager.$flush();let nxtScopeId=Q.$objectExist(nxtComp.scope)?nxtComp.scope.$getScopeId():Q.$objectExist(nxtComp.injectedScope)?nxtComp.injectedScope.$getScopeId():null,nxtScope=scopeManager.$getScope(nxtScopeId);return!(Q.$exist(nxtScope)&&(Q.$booleanFalse(nxtScope.$isReady())||Q.$booleanTrue(nxtScope.$isPresent())))})},awr.compManager=compManager,$export("object:compManager",compManager,{takeEasy:!1}),Q.$extendImportType("component",function(compName){return compManager.$getComponent.call(compManager,compName)}),Q.$extendExportType("component",function(compName,confObj,opts){let requires;return Q.$arrayExist(confObj)&&(requires=Q.$reduce(confObj,nxt=>Q.$stringExist(nxt))),Q.$isEmpty(requires)?proceedWithExport(compName,confObj,opts):(Q.$waitForComps(requires,3e3,!1,!0).then(_=>{proceedWithExport(compName,confObj,opts)},err=>{console.error(err)}),!0)}),Q.$extendAvailableType("component",function(compName){return compManager.$componentExist.call(compManager,compName)})}__$$errors$$__=__$loadErrors__("$$comp@kernel"),__callModuleMainFn__($main,__$$requires$$__)})}(),function(){var __$$requires$$__=[],__$$errors$$__=null;function $errorOut(errName,replaces){return __$errorOut__(__$$errors$$__,errName,replaces)}__pushToBootQueue__(function(){__$require__(__$$requires$$__,["object:awr.registryManager"]);window.awr;function $main(){let confManager,Q=this,registry=$import("object:awr.registryManager");const cnfRegName="ConfigObject";function ConfigObject(opts){opts=opts||{};let body={$getName:_=>opts.__$$confName$$__,$hasError:_=>Q.$booleanTrue(opts.__$$hasError$$__),$getErrorReason:_=>opts.__$$errMsg$$__,$isReady:_=>Q.$booleanFalse(opts.__$$hasError$$__),$getConfigFunction:_=>opts.__$$confFn$$__},exclude=["__$$confName$$__","__$$hasError$$__","__$$confFn$$__","__$$errMsg$$__"];return Q.$forEachProperty(opts,(val,key)=>{Q.$setContainsString(exclude,key)||(body[key]=val)}),body}function ConfigManager(){}function getDefaultCnfObj(cnfName,cnfFn){return{__$$confName$$__:cnfName,__$$hasError$$__:!1,__$$confFn$$__:cnfFn,__$$errMsg$$__:null}}registry.$create(cnfRegName),ConfigManager.prototype.$registerConfig=function(cnfName,cnfFn,opts){let requires;if(Q.$arrayExist(cnfFn)&&(requires=Q.$reduce(cnfFn,nxt=>Q.$stringExist(nxt)),cnfFn=Q.$arrayNotEmpty(cnfFn)&&Q.$functionExist(cnfFn[cnfFn.length-1])?cnfFn[cnfFn.length-1]:null),!Q.$stringExist(cnfName)||!Q.$functionExist(cnfFn))return $errorOut("badArgs"),!1;if(registry.$inRegistry(cnfRegName,cnfName))return $errorOut("alreadyExist",[{key:"confName",value:cnfName}]),!1;let obj=getDefaultCnfObj(cnfName=cnfName.substring(0,1).toLowerCase()+cnfName.substring(1),cnfFn);if(Q.$arrayNotEmpty(requires))Q.$waitForComps(requires).then(scc=>{try{Q.$isUX3Type(cnfFn)?obj=new cnfFn(cnfName):(requires=Q.$map(requires,nxt=>$import(nxt)),obj.__$$confFn$$__.apply(obj,requires))}catch(err){Q.$isUX3Type(cnfFn)&&(obj=getDefaultCnfObj(cnfName,cnfFn)),obj.__$$hasError$$__=!0,obj.__$$errMsg$$__=err,$errorOut("errorInCnf",[{key:"confName",value:cnfName},{key:"errMsg",value:err}])}registry.$add(cnfRegName,cnfName,new ConfigObject(obj))},err=>{obj.__$$hasError$$__=!0,obj.__$$errMsg$$__=err,$errorOut("errorInCnf",[{key:"confName",value:cnfName},{key:"errMsg",value:err}]),registry.$add(cnfRegName,cnfName,new ConfigObject(obj))});else{try{Q.$isUX3Type(cnfFn)?obj=new cnfFn(cnfName):obj.__$$confFn$$__.apply(obj,[])}catch(err){Q.$isUX3Type(cnfFn)&&(obj=getDefaultCnfObj(cnfName,cnfFn)),obj.__$$hasError$$__=!0,obj.__$$errMsg$$__=err,$errorOut("errorInCnf",[{key:"confName",value:cnfName},{key:"errMsg",value:err}])}registry.$add(cnfRegName,cnfName,new ConfigObject(obj))}return obj._$$hasError$$_},ConfigManager.prototype.$getConfig=function(cnfName){let cnf=registry.$get(cnfRegName,cnfName);return Q.$objectExist(cnf)?cnf:null},ConfigManager.prototype.$configAvailable=function(cnfName){let cnf=registry.$get(cnfRegName,cnfName);return Q.$objectExist(cnf)&&Q.$booleanTrue(cnf.$isReady())},$export("object:awr.configManager",confManager=new ConfigManager)}__$$errors$$__=__$loadErrors__("$$config@kernel"),__callModuleMainFn__($main,__$$requires$$__)})}(),function(){var __$$requires$$__=[];__pushToBootQueue__(function(){window.awr;function $main(){let Q=this;Q.$getClassInstance("ObservableUtils@event",[]);$export("class:BufferedObservableFactory@event",class{constructor({ObservableClass:ObservableClass}){this.ObservableClass=ObservableClass}create({observableContext:observableContext,windowBy:windowBy,onWindow:onWindow}){if(!Q.$isClassInstance(windowBy,Observable)&&!Q.$objectInstanceOf(windowBy,Observable))throw new TypeError(`$$Observable@AwrEvent: $window Error: bufferBy:${windowBy} is not an Observable!`);let origContext=observableContext;return new this.ObservableClass(observer=>{let win,winBySubscription,origSubscription,bufferArr=[],originalNext=observer.next;return observer.next=(event=>{bufferArr.push(event)}),winBySubscription=windowBy.$subscribe(x=>{win=bufferArr,bufferArr=[],Q.$functionExist(onWindow)&&onWindow({window:win,observer:observer,next:originalNext,error:observer.rawOnError,complete:observer.rawOnComplete})}),origSubscription=Q.$getClassInstance("Subscription@event",[{next:observer.next,error:err=>{Q.$functionExist(observer.rawOnError)&&observer.rawOnError(err)},complete:()=>{Q.$functionExist(observer.rawOnComplete)&&observer.rawOnComplete.call(observer,{isWindow:!1})},keepAliveOnComplete:!1},origContext.subscriber]),()=>{winBySubscription.$unsubscribe(),origSubscription.$unsubscribe()}})}})}__$require__(__$$requires$$__,["function:awr.registerClass","class:Subscription@event","class:ObservableUtils@event"]),__$loadErrors__("$$event@kernel"),__callModuleMainFn__($main,__$$requires$$__)})}(),function(){var __$$requires$$__=[];__pushToBootQueue__(function(){window.awr;function $main(){let Q=this;Q.$getClassInstance("ObservableUtils@event",[]).polyfillObservableSymbol("observable");class Observable{constructor(subscriber,name){let _self=this;if(this.bufferFactory=Q.$getClassInstance("BufferedObservableFactory@event",[{ObservableClass:Observable}]),this.transformFactory=Q.$getClassInstance("TransformedObservableFactory@event",[{ObservableClass:Observable}]),this.$$name$$=null,Object.defineProperty(this,"name",{get:()=>_self.$$name$$,set:val=>_self.$$name$$=Q.$stringExist(val)?val:_self.$$name$$,enumerable:!0,configurable:!1}),Q.$stringExist(name)&&(this.name=name),!Q.$functionExist(subscriber))throw new TypeError("$$Observable@AwrEvent: Observable initializer must be a function");this.subscriber=subscriber}$subscribe(observer,...args){return Q.$functionExist(observer)&&(observer={next:observer,error:args[0],complete:args[1]}),Q.$objectExist(observer)||(observer={}),Q.$getClassInstance("Subscription@event",[observer,this.subscriber])}[Symbol.observable](){return this}$delay(d){let now,subscriber,origContext=this;return(Q.$objectInstanceOf(d,Date)||Q.$isClassInstance(d,Date))&&(now=(new Date).getTime(),d=d.getTime()>now?d.getTime()-now:0),d=Q.$exist(d)?Number(d):d,new Observable(subscriber=(observer=>{Q.$numberExist(d)&&d>0&&setTimeout(()=>{let originalNext=observer.next;observer.next=(event=>{try{Q.$functionExist(originalNext)&&originalNext.call(observer,event),Q.$functionExist(observer.complete)&&observer.complete()}catch(e){observer.error(e)}}),Q.$functionExist(origContext.subscriber)&&origContext.subscriber.call(origContext,observer)},d)}))}$take(n){return n=Q.$numberExist(n)||Q.$stringExist(n)?Number(n):null,this.transformFactory.create({observableContext:this,onNext:opts=>{let vars=opts.privateData||{};vars.count=Q.$numberExist(vars.count)?vars.count:0,vars.count<n?(vars.count++,opts.originalNext.call(opts.observer,opts.event)):opts.observer.complete()}})}$skip(n){return n=Q.$numberExist(n)||Q.$stringExist(n)?Number(n):null,this.transformFactory.create({observableContext:this,onNext:opts=>{let vars=opts.privateData||{};vars.count=Q.$numberExist(vars.count)?vars.count:0,vars.count<n?vars.count++:opts.originalNext.call(opts.observer,opts.event)}})}$takeUntil(showKiller){let killerSub,cleanUp,originalContext=this;return new Observable(observer=>{let origSubscription;return(Q.$objectInstanceOf(showKiller,Observable)||Q.$isClassInstance(showKiller,Observable))&&(killerSub=showKiller.$subscribe(endSignal=>{observer.complete()},err=>{observer.error(err)},_=>{observer.complete()})),origSubscription=Q.$getClassInstance("Subscription@event",[{next:value=>observer.next(value),error:err=>observer.error(err),complete:observer.complete},originalContext.subscriber]),cleanUp=(()=>{origSubscription.$unsubscribe(),Q.$functionExist(killerSub.$unsubscribe)&&killerSub.$unsubscribe()})})}$skipUntil(showStarter){let starterSub,originalContext=this;return new Observable(observer=>{let origSubscription,allowedToSend=!1;return(Q.$objectInstanceOf(showStarter,Observable)||Q.$isClassInstance(showStarter,Observable))&&(starterSub=showStarter.$subscribe(startSignal=>{allowedToSend=!0})),origSubscription=Q.$getClassInstance("Subscription@event",[{next:value=>!!Q.$booleanTrue(allowedToSend)&&observer.next(value),error:err=>observer.error(err),complete:observer.complete},originalContext.subscriber]),()=>{origSubscription.$unsubscribe(),Q.$functionExist(starterSub.$unsubscribe)&&starterSub.$unsubscribe()}})}$takeWhile(predicateFn){return this.transformFactory.create({observableContext:this,onNext:opts=>{Q.$functionExist(predicateFn)?Q.$booleanTrue(predicateFn())?opts.originalNext.call(opts.observer,opts.event):opts.observer.complete():opts.observer.error("$takeWhile: Predicate function missing!")}})}$skipWhile(predicateFn){return this.transformFactory.create({observableContext:this,onNext:opts=>{Q.$functionExist(predicateFn)?Q.$booleanFalse(predicateFn())&&opts.originalNext.call(opts.observer,opts.event):opts.observer.error("$skipWhile: Predicate function missing!")}})}$first(predicateFn){return this.transformFactory.create({observableContext:this,onNext:opts=>{let condition=!Q.$functionExist(predicateFn)||Q.$functionExist(predicateFn)&&Q.$booleanTrue(predicateFn());Q.$booleanTrue(condition)&&(opts.originalNext.call(opts.observer,opts.event),opts.observer.complete())}})}$filter(filterFn){return this.transformFactory.create({observableContext:this,onNext:opts=>{let result=!Q.$functionExist(filterFn)||filterFn.call(void 0,opts.event);Q.$booleanTrue(result)&&Q.$functionExist(opts.originalNext)&&opts.originalNext.call(opts.observer,opts.event)}})}$map(mapFn){return this.transformFactory.create({observableContext:this,onNext:opts=>{let transformedValue=Q.$functionExist(mapFn)?mapFn.call(void 0,opts.event):opts.event;Q.$functionExist(opts.originalNext)&&opts.originalNext.call(opts.observer,transformedValue)}})}$flatMap(mapFn){return this.transformFactory.create({observableContext:this,onNext:opts=>{let transformedValue=Q.$functionExist(mapFn)?mapFn.call(void 0,opts.event):opts.event;transformedValue instanceof Observable?transformedValue.$subscribe(tEvent=>{Q.$functionExist(opts.originalNext)&&opts.originalNext.call(opts.observer,tEvent)}):Q.$functionExist(opts.originalNext)&&opts.originalNext.call(observer,transformedValue)}})}$buffer(bufferBy){return this.bufferFactory.create({observableContext:this,windowBy:bufferBy,onWindow:opts=>{Q.$functionExist(opts.next)&&opts.next.call(opts.observer,opts.window)}})}$window(windowBy){return this.bufferFactory.create({observableContext:this,windowBy:bufferBy,onWindow:opts=>{Observable.$of.apply(Observable,opts.window).$subscribe({next:x=>{Q.$functionExist(opts.next)&&opts.next.call(opts.observer,x)},error:err=>{Q.$functionExist(opts.error)&&opts.error.call(opts.observer,err)},complete:()=>{Q.$functionExist(opts.complete)&&opts.complete.call(opts.observer,{isWindow:!0})},keepAliveOnComplete:!0}).$unsubscribe()}})}static $interval(i){let clz=Q.$functionExist(this)?this:Observable;if(i=Q.$stringExist(i)||Q.$numberExist(i)?Number(i):null,Q.$numberExist(i)&&i>0)return new clz(observer=>{let id,value=0;return id=setInterval(_=>{try{observer.next(value)}catch(e){observer.error(e)}value++},i),()=>{clearInterval(id)}});if(!Q.$numberExist(i))throw new TypeError(`$$Observable@AwrEvent: $interval Error: ${i} is not a number!`)}static $timer(item,d){return Observable.$of(item).$delay(d)}static $range(n,m){n=Q.$stringExist(n)||Q.$numberExist(n)?Number(n):null,m=Q.$stringExist(m)||Q.$numberExist(m)?Number(m):null;let rSet=[];if(Q.$numberExist(n)&&Q.$numberExist(m)&&m>n)for(let i=0;i<m-n+1;i++)i<1?rSet.push(n):rSet.push(rSet[i-1]+1);else if(Q.$numberExist(n)&&n>0)for(let i=0;i<n+1;i++)i<1?rSet.push(0):rSet.push(rSet[i-1]+1);if(rSet.length>0)return Observable.$of.apply(Observable,rSet);throw new TypeError(`$$Observable@AwrEvent: $range Error: Bad range for n:${n} m:${m}`)}static $of(...items){return new(Q.$functionExist(this)?this:Observable)(observer=>{Q.$forEachIndex(items,(v,i)=>{observer.next(v),Q.$booleanTrue(observer.closed)}),observer.complete.call(observer)})}static $fromPromise(...items){return new(Q.$functionExist(this)?this:Observable)(observer=>{let ended=!1,doneCount=items.length;Q.$forEachIndex(items,(v,i)=>{if(!Q.$objectInstanceOf(v,Promise)&&!Q.$isClassInstance(v,Promise))throw doneCount--,new TypeError(`$$Observable@AwrEvent: $fromPromise Error: ${v} is not Promise!`);Promise.resolve(v).then(rs=>{doneCount--,observer.next(rs),Q.$booleanTrue(observer.closed)||doneCount<=0&&Q.$booleanFalse(ended)&&(ended=!0,observer.complete())},err=>{doneCount--,observer.error(err),Q.$booleanTrue(observer.closed)||doneCount<=0&&Q.$booleanFalse(ended)&&(ended=!0,observer.complete())})})})}static $from(x){let Clz=Q.$functionExist(this)?this:Observable;if(!Q.$exist(x))throw new TypeError(`from@$$observable@AwrEvent@awr: ${x}@X! Note: Argument X can not null or undefined!`);if(Q.$functionExist(x[Symbol.observable])){let observable=x[Symbol.observable].call(x);if(Object(observable)!==observable)throw new TypeError(`from@$$observable@AwrEvent@awr: ${x}  is not an object.`);return observable.constructor===Clz?observable:new Clz(observer=>observable.$subscribe(observer))}if(Q.$functionExist(x[Symbol.iterator]))return new Clz(observer=>{for(let item of x[Symbol.iterator].call(x))if(observer.next(item),Q.$booleanTrue(observer.closed))return;observer.complete()});throw new TypeError(`from@$$observable@AwrEvent@awr: ${x}  is not an observable.`)}static $merge(...items){return items=Q.$reduce(items,nxtItem=>Q.$isClassInstance(nxtItem,Observable)||Q.$objectInstanceOf(nxtItem,Observable)),new Observable(observer=>{let subs=[];return Q.$forEachIndex(items,(nxtItem,index)=>{subs.push(nxtItem.$subscribe(observer))}),()=>{Q.$forEachIndex(subs,(nxtSub,index)=>{nxtSub.$unsubscribe()})}})}}$export("class:Observable@event",Observable)}__$require__(__$$requires$$__,["function:awr.registerClass","class:Subscription@event","class:ObservableUtils@event","class:BufferedObservableFactory@event","class:TransformedObservableFactory@event"]),__$loadErrors__("$$event@kernel"),__callModuleMainFn__($main,__$$requires$$__)})}(),function(){var __$$requires$$__=[],__$$errors$$__=null;function $errorOut(errName,replaces){return __$errorOut__(__$$errors$$__,errName,replaces)}__pushToBootQueue__(function(){window.awr;function $main(){let Q=this,Observable=$import("class:Observable@event");$export("class:ObservableGenerator@event",class{constructor(){}$generate(name){return Q.$objectInstanceOf(this,Observable)?this:Q.$functionExist(this.transform)?function(name){let obs=null;try{obs=Q.$functionExist(this.transform)?this.transform():null}catch(err){return $errorOut("errorInGeneratorTransform",[{key:"observableName",value:name},{key:"errMsg",value:err},{key:"infoMsg",value:"  Bad function < transform > "}]),null}return Q.$objectExist(obs)&&Q.$objectInstanceOf(obs,Observable)?obs:($errorOut("errorInGeneratorTransform",[{key:"observableName",value:name},{key:"errMsg",value:new Error("Bad transform result")},{key:"infoMsg",value:" Transform result must be an instance of Observable@event"}]),null)}.apply(this,[name]):function(name){let subscriber=null;try{subscriber=Q.$functionExist(this.makeSubscriber)?this.makeSubscriber():null}catch(err){return $errorOut("errorInGeneratorSubscriber",[{key:"observableName",value:name},{key:"errMsg",value:err},{key:"infoMsg",value:"  Bad function < makeSubscriber > "}]),null}if(!Q.$functionExist(subscriber))return $errorOut("errorInGeneratorSubscriber",[{key:"observableName",value:name},{key:"errMsg",value:new Error("Subscriber function is missing")},{key:"infoMsg",value:" < No addition info available >"}]),null;let obs=null;try{obs=new Observable(subscriber,name)}catch(err){obs=null,$errorOut("errorInGeneratorSubscriber",[{key:"observableName",value:name},{key:"errMsg",value:err},{key:"infoMsg",value:" < No addition info available >"}])}return obs}.apply(this,[name])}})}__$require__(__$$requires$$__,["function:awr.registerClass","class:Observable@event"]),__$$errors$$__=__$loadErrors__("$$event@kernel"),__callModuleMainFn__($main,__$$requires$$__)})}(),function(){var __$$requires$$__=[];__pushToBootQueue__(function(){window.awr;function $main(){let Q=this;$export("class:ObservableUtils@event",class{constructor(){}polyfillObservableSymbol(name){Symbol[name]||Object.defineProperty(Symbol,name,{value:Symbol(name)})}subscriptionClosed(subscription){return!Q.$exist(subscription.observer)}closeSubscription(subscription){this.subscriptionClosed(subscription)||(subscription.observer2=subscription.observer,subscription.observer=null,this.cleanupSubscription(subscription))}cleanupSubscription(subscription){let cleanup=subscription.cleanup;if(cleanup){subscription.cleanup=null;try{cleanup()}catch(e){}}}cleanupFromSubscription(subscription){return x=>{subscription.$unsubscribe()}}})}__$require__(__$$requires$$__,"function:awr.registerClass"),__$loadErrors__("$$event@kernel"),__callModuleMainFn__($main,__$$requires$$__)})}(),function(){var __$$requires$$__=[];__pushToBootQueue__(function(){window.awr;const subTimestampKey="__$$subscription_timestamp$$__";function $main(){let Q=this,utils=Q.$getClassInstance("ObservableUtils@event",[]);$export("class:Subscription@event",class{constructor(observer,subscriber){this.cleanup=null,this.observer=observer,this.keepAliveOnComplete=observer.keepAliveOnComplete;try{Q.$functionExist(observer.start)&&observer.start.call(observer,this)}catch(e){}if(!utils.subscriptionClosed(this)){(observer=Q.$getClassInstance("SubscriptionObserver@event",[this])).keepAliveOnComplete=this.keepAliveOnComplete,observer.rawOnComplete=this.observer.complete,observer.rawOnError=this.observer.error,this[Symbol.for(subTimestampKey)]=(new Date).getTime();try{let cleanup=subscriber.call(void 0,observer);if(Q.$functionExist(observer.some)&&observer.some(),Q.$exist(cleanup)){if(Q.$functionExist(cleanup.unsubscribe))cleanup=utils.cleanupFromSubscription(cleanup);else if(!Q.$functionExist(cleanup))throw new TypeError(cleanup+" is not a function");this.cleanup=cleanup}}catch(e){return void observer.error(e)}utils.subscriptionClosed(this)&&utils.cleanupSubscription(this)}}get timestamp(){return this[Symbol.for(subTimestampKey)]}unsubscribe(){return utils.closeSubscription(this)}$unsubscribe(){return utils.closeSubscription(this)}get closed(){return utils.subscriptionClosed(this)}})}__$require__(__$$requires$$__,["function:awr.registerClass","class:SubscriptionObserver@event","class:ObservableUtils@event"]),__$loadErrors__("$$event@kernel"),__callModuleMainFn__($main,__$$requires$$__)})}(),function(){var __$$requires$$__=[];__pushToBootQueue__(function(){window.awr;function $main(){let Q=this,utils=Q.$getClassInstance("ObservableUtils@event",[]);function runCompleteOnObserver(observer,arg){try{Q.$functionExist(observer.complete)&&observer.complete.call(observer,arg)}catch(e){this.error(e)}}$export("class:SubscriptionObserver@event",class{constructor(subscription){this.subscription=subscription,this.rawObserver=this.subscription.observer}get closed(){return utils.subscriptionClosed(this.subscription)}next(value){let observer;if(!utils.subscriptionClosed(this.subscription)){observer=this.subscription.observer;try{if(!Q.$functionExist(observer.next))return;observer.next.call(observer,value)}catch(e){this.error(e)}}}error(value){let observer,subscription=this.subscription;if(!utils.subscriptionClosed(subscription)){observer=subscription.observer,subscription.observer=null;try{Q.$functionExist(observer.error)&&observer.error.call(observer,value)}catch(e){}utils.cleanupSubscription(subscription)}}complete(msg){let observer,subscription=this.subscription;utils.subscriptionClosed(subscription)||(!Q.$booleanTrue(subscription.observer.keepAliveOnComplete)||utils.subscriptionClosed(subscription)?(observer=subscription.observer,subscription.observer=null,runCompleteOnObserver.apply(this,[observer,msg]),utils.cleanupSubscription(subscription)):runCompleteOnObserver.apply(this,[subscription.observer,msg]))}})}__$require__(__$$requires$$__,["function:awr.registerClass","class:ObservableUtils@event"]),__$loadErrors__("$$event@kernel"),__callModuleMainFn__($main,__$$requires$$__)})}(),function(){var __$$requires$$__=[];__pushToBootQueue__(function(){window.awr;function $main(){let Q=this;Q.$getClassInstance("ObservableUtils@event",[]);$export("class:TransformedObservableFactory@event",class{constructor({ObservableClass:ObservableClass}){this.ObservableClass=ObservableClass}create({observableContext:observableContext,onNext:onNext,onError:onError,onComplete:onComplete,cleanUP:cleanUP}){let origContext=observableContext;return new this.ObservableClass(observer=>{let origSubscription,privateData={},originalNext=observer.next;return observer.next=(event=>{Q.$functionExist(onNext)&&onNext.call(observer,{privateData:privateData,observer:observer,originalNext:originalNext,event:event})}),origSubscription=Q.$getClassInstance("Subscription@event",[{next:observer.next,error:err=>{Q.$functionExist(onError)?onError.call(observer,{privateData:privateData,observer:observer,originalError:observer.rawOnError,originalNext:originalNext,err:err}):Q.$functionExist(observer.rawOnError)&&observer.rawOnError.call(observer,err)},complete:()=>{try{Q.$functionExist(onComplete)?onComplete.call(observer,{privateData:privateData,observer:observer,originalNext:originalNext,originalComplete:observer.rawOnComplete}):Q.$functionExist(observer.rawOnComplete)&&observer.rawOnComplete.call(observer)}catch(e){}},keepAliveOnComplete:!1},origContext.subscriber]),()=>{if(Q.$functionExist(cleanUP))try{cleanUP.call(observer,{observer:observer})}catch(e){}origSubscription.$unsubscribe()}})}})}__$require__(__$$requires$$__,["function:awr.registerClass","class:Subscription@event","class:ObservableUtils@event"]),__$loadErrors__("$$event@kernel"),__callModuleMainFn__($main,__$$requires$$__)})}(),function(){var __$$requires$$__=[];__pushToBootQueue__(function(){window.awr;function $main(){let Q=this;$export("object:awr.watchableConsts@event",{registryName:"WatchableObject",wIdSymbolName:"__$$watchable_id$$__",wObservableSymbolName:"__$$watchable_observable$$__",wItemRegistrySuffix:"@AWRWatchable",wStateSymbolName:"__$$watchable_state$$__",wUpdateEventName:"watchable:update",wItemHasDiedKey:"__$$watchable_died$$__",wDiedMessage:"__$$watchable_died$$__",makeWatchableSubscriptionPrefix:watchable=>Q.$exists(watchable)?`watchable@${watchable[Symbol.for("__$$watchable_id$$__")]}`:"watchable@undefined"})}__$loadErrors__("$$event@kernel"),__callModuleMainFn__($main,__$$requires$$__)})}(),function(){var __$$requires$$__=[];__pushToBootQueue__(function(){window.awr;function $main(){let Q=this,registry=$import("object:awr.registryManager"),events=$import("object:awr.eventManager"),watchableConsts=$import("object:awr.watchableConsts@event"),$emit=(events.$on,events.$emit),digestStartTime=(events.$off,null),digestInterval=null;$export("object:awr.watchableDigestManager",new class{constructor(){}get digestStartTime(){return digestStartTime}start(){var item;Q.$numberExist(digestInterval)||(clearInterval(digestInterval),Q.$each(registry.$getAll(watchableConsts.registryName),nxt=>{nxt[Symbol.for(watchableConsts.wStateSymbolName)]=JSON.stringify(nxt)}),digestInterval=setInterval(_=>{registry.$getAll(watchableConsts.registryName).$each(nxt=>{item=nxt,Q.$nonBlocking(_=>{let wState=item[Symbol.for(watchableConsts.wStateSymbolName)],newState=JSON.stringify(item);Q.$stringEqual(wState,newState)||(item[Symbol.for(watchableConsts.wStateSymbolName)]=newState,$emit(watchableConsts.wUpdateEventName,{wId:item[Symbol.for(watchableConsts.wIdSymbolName)]})),item[Symbol.for(watchableConsts.wItemHasDiedKey)]&&($emit(watchableConsts.wUpdateEventName,{wId:item[Symbol.for(watchableConsts.wIdSymbolName)],subscriptionPrefix:watchableConsts.makeWatchableSubscriptionPrefix(item),message:watchableConsts.wDiedMessage}),registry.$getKeys(watchableConsts.registryName).$each(nxtWKey=>{let nxtW=registry.$get(watchableConsts.registryName,nxtWKey);nxtW[Symbol.for(watchableConsts.wIdSymbolName)]===item[Symbol.for(watchableConsts.wIdSymbolName)]&&registry.$remove(watchableConsts.registryName,nxtWKey)}))},err=>{console.error(err)})})},100),digestStartTime=new Date)}stop(){clearInterval(digestInterval),digestInterval=null}},{takeEasy:!1})}__$require__(__$$requires$$__,["function:awr.registerClass","object:awr.registryManager","object:awr.eventManager","object:awr.watchableConsts@event"]),__$loadErrors__("$$event@kernel"),__callModuleMainFn__($main,__$$requires$$__)})}(),function(){var __$$requires$$__=[],__$$errors$$__=null;function $errorOut(errName,replaces){return __$errorOut__(__$$errors$$__,errName,replaces)}__pushToBootQueue__(function(){__$require__(__$$requires$$__,["object:awr.registryManager","object:awr.factory","function:awr.factory.$registerService"]);let awr=window.awr||{};function $main(){let evtManager,Q=this,registryName="EventManagerItem",stats=awr.basicStats=Q.$objectExists(awr.basicStats)?awr.basicStats:{},registry=$import("object:awr.registryManager");function EventManager(){}function callNextListener(event,eventName,nxtFn,nxtOnError){let hasError=!1,error=null;try{nxtFn.call(Q,event)}catch(e){hasError=!0,error=e}if(!Q.$booleanFalse(hasError))try{$errorOut("errorInEventCallback",[{key:"opName",value:"$emit"},{key:"eventName",value:eventName},{key:"errMsg",value:error}]),Q.$functionExist(nxtOnError)&&nxtOnError.call(Q,error)}catch(e){$errorOut("errorInEventCallback",[{key:"opName",value:"$emit"},{key:"eventName",value:eventName},{key:"errMsg",value:e}])}}function getWindowEventName(eventStr){if(!Q.$stringExist(eventStr))return null;let cleanName=eventStr.startsWith("window:")?eventStr.split(":")[1]:eventStr;return cleanName.startsWith(":")?cleanName.substring(1):cleanName}function getCleanName(eventStr){if(!Q.$stringExist(eventStr))return null;let cleanName=Q.$appendAWRNameSpace(eventStr,"Event");return cleanName.startsWith(":")?cleanName.substring(1):cleanName}registry.$create(registryName),EventManager.prototype.$on=function(eventStr,handler,listenerId){let onError,evtReg,onEvent=Q.$functionExist(handler)?handler:null,eventName=getCleanName(eventStr),fnFrame={},inReg=!1;return Q.$stringExist(eventName)?(Q.$objectExist(handler)&&(onError=Q.$functionExist(handler.onError)?handler.onError:null,onEvent=Q.$functionExist(handler.onEvent)?handler.onEvent:null),Q.$functionExist(onEvent)?(evtReg=registry.$get(registryName,eventName),fnFrame.__$$listenerID$$__=Q.$stringExist(listenerId)?listenerId:null,fnFrame.fn=onEvent,fnFrame.onError=onError,Q.$objectExist(listenerId)&&Q.$functionExist(listenerId.addEventListener)?listenerId.addEventListener(eventStr,onEvent):eventStr&&eventStr.startsWith("window:")?(eventName=getWindowEventName(eventStr),window.addEventListener(eventName,onEvent)):Q.$arrayExist(evtReg)?(Q.$stringExist(listenerId)&&(inReg=Q.$collect(evtReg,function(collected){collected=Q.$objectExist(collected)?collected:null;let nxtId=this.__$$listenerID$$__;return Q.$stringExist(nxtId)&&Q.$stringEqual(nxtId,listenerId)&&(collected=this),collected})),Q.$objectExist(inReg)?inReg.fn=fnFrame.fn:evtReg.push(fnFrame)):((evtReg=[]).push(fnFrame),registry.$add(registryName,eventName,evtReg)),!0):($errorOut("badEventCallback",[{key:"opName",value:"$on"}]),!1)):($errorOut("badEventName",[{key:"opName",value:"$on"}]),!1)},EventManager.prototype.$off=function(eventStr,fn,eventTarget){let evtReg,eventName=getCleanName(eventStr);if(!Q.$stringExist(eventName))return $errorOut("badEventName",[{key:"opName",value:"$off"}]),!1;evtReg=registry.$get(registryName,eventName),Q.$objectExist(eventTarget)&&Q.$functionExist(eventTarget.removeEventListener)?eventTarget.removeEventListener(eventStr,fn):eventStr&&eventStr.startsWith("window:")?(eventName=getWindowEventName(eventStr),window.removeEventListener(eventName,fn)):Q.$arrayNotEmpty(evtReg)&&(evtReg=Q.$reduce(evtReg,function(){return Q.$stringExist(fn)?this.__$$listenerID$$__!==fn:this.fn!==fn}),registry.$remove(registryName,eventName),registry.$add(registryName,eventName,evtReg))},EventManager.prototype.$emit=function(eventStr,event=null,opts){if((opts=Q.$objectExist(opts)?opts:{}).async=!Q.$booleanFalse(opts.async),Q.$objectExist(event)&&Q.$functionExist(event.dispatchEvent)&&Q.$stringExist(eventStr))return event.dispatchEvent(new window.Event(eventStr)),!0;if(eventStr&&eventStr.startsWith("window:"))return window.dispatchEvent(new Event(getWindowEventName(eventStr))),!0;let evtReg,evtReg2,eventName=getCleanName(eventStr);return Q.$stringExist(eventName)?eventName.split(":").length>=2?(event=Q.$exist(event)?event:null,Q.$objectExist(event)&&(event.eventPublisher=eventName.replace("@AWREvent","").split(":")[0],event.eventName=eventName.replace("@AWREvent","").split(":")[1]),evtReg=registry.$get(registryName,eventName),evtReg2=registry.$get(registryName,eventName.split(":")[1]),evtReg=Q.$arrayExist(evtReg)?evtReg:[],evtReg=Q.$arrayNotEmpty(evtReg2)?evtReg.concat(evtReg2):evtReg,void(Q.$arrayNotEmpty(evtReg)&&Q.$forEachIndex(evtReg,function(nxtFnFrame,nxtIndex){let nxtFn=nxtFnFrame.fn,nxtOnError=nxtFnFrame.onError;Q.$functionExist(nxtFn)&&(Q.$booleanTrue(opts.async)?setTimeout(function(){callNextListener(event,eventName,nxtFn,nxtOnError)},0):callNextListener(event,eventName,nxtFn,nxtOnError))}))):($errorOut("badEventPublisherName",[{key:"opName",value:"$emit"}]),!1):($errorOut("badEventName",[{key:"opName",value:"$emit"}]),!1)},EventManager.prototype.$flush=function(eventStr){let eventName=getCleanName(eventStr);registry.$remove(registryName,eventName)},EventManager.prototype.$getListeners=function(eventStr){let eventName=getCleanName(eventStr);return registry.$get(registryName,eventName)},$export("object:eventManager",evtManager=new EventManager,{takeEasy:!1}),stats.eventManagerRegisTime=(new Date).getTime(),$export("service:eventManager",()=>$import("object:awr.eventManager"),{})}__$$errors$$__=__$loadErrors__("$$event@kernel"),__callModuleMainFn__($main,__$$requires$$__)})}(),function(){var __$$requires$$__=[],__$$errors$$__=null;function $errorOut(errName,replaces){return __$errorOut__(__$$errors$$__,errName,replaces)}__pushToBootQueue__(function(){window.awr;const observableRegName="AwrObservable";function $main(){let Q=this,Observable=$import("class:Observable@event"),ObservableGenerator=$import("class:ObservableGenerator@event"),registry=$import("object:awr.registryManager");registry.$create(observableRegName),$export("object:awr.observableManager",{exportObservable:function(name,observable,opts){let requires,item;Q.$arrayExist(observable)?(requires=Q.$reduce(observable,nxt=>Q.$stringExist(nxt)),item=Q.$reduce(observable,nxt=>Q.$functionExist(nxt)).$first()):item=observable,Q.$commonWaitAndProceedOperation(requires,()=>{!function(name,observableItem,opts){let observableName,generator;if(Q.$stringExist(name)&&(Q.$isUX3TypeClass(observableItem)||Q.$objectExist(observableItem))&&!Q.$setContainsString(["__NULL__","__NULL__@AWRObservable"],name))if(observableName=Q.$appendAWRNameSpace(name,"Observable"),registry.$inRegistry(observableRegName,observableName))$errorOut("observableAlreadyInReg",[{key:"observableName",value:observableName}]);else{if(Q.$isUX3TypeClass(observableItem))try{generator=new observableItem,Q.$objectInstanceOf(generator,ObservableGenerator)&&(observableItem=generator.$generate(observableName))}catch(err){observableItem=null,$errorOut("badUX3TypeObservableConstructor",[{key:"observableName",value:observableName},{key:"errMsg",value:err}])}Q.$objectInstanceOf(observableItem,Observable)?(observableItem.name=name,registry.$add(observableRegName,Q.$firstLetterToLowerCase(observableName),observableItem)):$errorOut("badObservableInstance",[{key:"observableName",value:observableName}])}else $errorOut("badObservableReg")}(name,item)},3e3,err=>{$errorOut("observableConstructorDependencyTimeout",[{key:"observableName",value:name},{key:"errMsg",value:err}])})},importObservable:function(name){let observableName=name;if(Q.$stringExist(observableName)){if(observableName=Q.$appendAWRNameSpace(name,"Observable"),registry.$inRegistry(observableRegName,observableName))return registry.$get(observableRegName,observableName);$errorOut("badImportObservable",[{key:"observableName",value:observableName}])}else $errorOut("badImportObservableName")},observableAvailable:function(name){let observableName=name;if(Q.$stringExist(observableName))return observableName=Q.$appendAWRNameSpace(observableName,"Observable"),Q.$exist(registry.$get(observableRegName,observableName));$errorOut("badAvailableObservableName")}},{takeEasy:!1})}__$require__(__$$requires$$__,["object:awr.$$core","function:awr.registerClass","object:awr.registryManager","service:eventManager","class:Observable@event","class:ObservableGenerator@event"]),__$$errors$$__=__$loadErrors__("$$event@kernel"),__callModuleMainFn__($main,__$$requires$$__)})}(),function(){var __$$requires$$__=[],__$$errors$$__=null;function $errorOut(errName,replaces){return __$errorOut__(__$$errors$$__,errName,replaces)}__pushToBootQueue__(function(){__$require__(__$$requires$$__,["function:awr.registerClass","class:RegisterProceedRoutines@AwrFactory"]);let awr=window.awr||{};function $main(){let Q=this,proceedRoutines=$import("class:RegisterProceedRoutines@AwrFactory");class BasicFactoryHelper{constructor(){}static factoryTypeDefinerExists(itemName){let name=Q.$firstLetterToUpperCase(itemName);return Q.$isUX3TypeClass(awr[name])||awr.$&&Q.$isUX3TypeClass(awr.$[name])}static getFactoryTypeDefinerExists(itemName){let name=Q.$firstLetterToUpperCase(itemName);return Q.$isUX3TypeClass(awr[name])?awr[name]:awr.$&&Q.$isUX3TypeClass(awr.$[name])?awr.$[name]:null}static registerCustomFactoryDefiner(factory,{itemName:itemName,itemConf:itemConf}){Q.$objectExist(itemConf)?factory.$define(itemName,itemConf):commonBuildAndWaitRoutine({itemName:itemName,itemConf:itemConf,factoryType:"FactoryType",onProceed(name,item){proceedRoutines.proceedWithRegisterCustomDefiner(factory,itemName,item)}})}static factoryTypeExists(registry,{factoryType:factoryType,registryName:registryName,itemName:itemName}){if("FactoryType"===factoryType)return BasicFactoryHelper.factoryTypeDefinerExists(itemName);let cleanName=Q.$appendAWRNameSpace(itemName,Q.$firstLetterToUpperCase(factoryType));return itemName&&"Service"===factoryType&&itemName.endsWith("Validator")&&(cleanName=Q.$appendAWRNameSpace(itemName,"Validator")),Q.$stringExist(itemName)&&registry.$inRegistry(registryName,cleanName)}static getFactoryType(registry,{factoryType:factoryType,registryName:registryName,itemName:itemName}){if("FactoryType"===factoryType)return BasicFactoryHelper.getFactoryTypeDefinerExists(itemName);let cleanName=Q.$appendAWRNameSpace(itemName,Q.$firstLetterToUpperCase(factoryType));return itemName&&"Service"===factoryType&&itemName.endsWith("Validator")&&(cleanName=Q.$appendAWRNameSpace(itemName,"Validator")),BasicFactoryHelper.factoryTypeExists(registry,{factoryType:factoryType,registryName:registryName,itemName:itemName})?registry.$get(registryName,cleanName):null}static removeFactoryType(registry,{factoryType:factoryType,registryName:registryName,itemName:itemName}){if("FactoryType"===factoryType)return $errorOut("illegalFactoryTypeRemoveAttempt",[{key:"itemName",value:Q.$firstLetterToUpperCase(itemName)}]),!1;let cleanName=Q.$appendAWRNameSpace(itemName,Q.$firstLetterToUpperCase(factoryType));return itemName&&"Service"===factoryType&&itemName.endsWith("Validator")&&(cleanName=Q.$appendAWRNameSpace(itemName,"Validator")),!!Q.$booleanTrue(registry.$inRegistry(registryName,cleanName))&&(registry.$remove(registryName,cleanName),!0)}static registerFactoryType(factory,registry,{factoryType:factoryType,registryName:registryName,itemName:itemName,itemFnArr:itemFnArr,interfaceCheck:interfaceCheck=null,badInterfaceHint:badInterfaceHint=null}){if("FactoryType"===factoryType)return void BasicFactoryHelper.registerCustomFactoryDefiner(factory,{itemName:itemName,itemConf:itemFnArr});if("Controller"===factoryType)return void BasicFactoryHelper.registerControllerType(registry,{itemName:itemName,itemFnArr:itemFnArr,registryName:registryName});let cleanName=Q.$appendAWRNameSpace(itemName,Q.$firstLetterToUpperCase(factoryType));commonBuildAndWaitRoutine({itemName:cleanName,itemConf:itemFnArr,factoryType:factoryType,onProceed(name,item,requires){Q.$stringExist(itemName)&&Q.$functionExist(item)&&!registry.$inRegistry(registryName,cleanName)?proceedRoutines.proceedWithRegisterFactoryType(registry,{factoryFn:item,cleanName:cleanName,factoryType:factoryType,requires:requires,registryName:registryName,itemName:itemName,interfaceCheck:interfaceCheck,badInterfaceHint:badInterfaceHint}):Q.$stringExist(itemName)&&registry.$inRegistry(registryName,cleanName)?$errorOut("factoryAlreadyRegistered",[{key:"factoryName",value:cleanName},{key:"factoryType",value:factoryType}]):$errorOut("badRegFactoryArgs",[{key:"factoryName",value:cleanName},{key:"factoryType",value:factoryType}])}})}static registerControllerType(registry,{itemName:itemName,itemFnArr:itemFnArr,registryName:registryName}){let requires=null,factoryFn=null,cleanName=Q.$appendAWRNameSpace(itemName,"Controller");Q.$arrayExist(itemFnArr)?(factoryFn=Q.$reduce(itemFnArr,nxt=>Q.$functionExist(nxt)).$first(),requires=Q.$reduce(itemFnArr,nxt=>Q.$stringExist(nxt))):factoryFn=itemFnArr,requires=Q.$arrayExist(requires)?requires:[],Q.$stringExist(itemName)&&Q.$functionExist(factoryFn)&&!registry.$inRegistry(registryName,cleanName)?registry.$add(registryName,cleanName,{requires:requires,fn:factoryFn}):Q.$stringExist(itemName)&&registry.$inRegistry(registryName,itemName)?$errorOut("factoryAlreadyRegistered",[{key:"factoryName",value:cleanName},{key:"factoryType",value:"Controller"}]):$errorOut("badRegFactoryArgs",[{key:"factoryName",value:cleanName},{key:"factoryType",value:"Controller"}])}}function commonBuildAndWaitRoutine({itemName:itemName,itemConf:itemConf,factoryType:factoryType,onProceed:onProceed}){let item,specData,requires=[];Q.$objectExist(itemConf)||Q.$functionExist(itemConf)?(item=itemConf,requires=[]):Q.$isEmpty(itemConf)||(requires=Q.$reduce(itemConf,nxt=>Q.$stringExist(nxt)),item=Q.$reduce(itemConf,nxt=>Q.$functionExist(nxt)).$first()),factoryType&&"spec"===factoryType.toLowerCase()&&((specData=awr.specData=Q.$objectExist(awr.specData)?awr.specData:{}).specCount=Q.$numberExist(specData.specCount)?specData.specCount+1:1),Q.$commonWaitAndProceedOperation(requires,()=>onProceed(itemName,item,requires),3e3,err=>{$errorOut("factoryRequiresTimeout",[{key:"errMsg",value:err},{key:"factoryName",value:itemName},{key:"factoryType",value:factoryType}])})}$export("class:BasicFactoryHelper@AwrFactory",BasicFactoryHelper)}__$$errors$$__=__$loadErrors__("$$factory@kernel"),__callModuleMainFn__($main,__$$requires$$__)})}(),function(){var __$$requires$$__=[],__$$errors$$__=null;function $errorOut(errName,replaces){return __$errorOut__(__$$errors$$__,errName,replaces)}__pushToBootQueue__(function(){__$require__(__$$requires$$__,["function:awr.registerClass"]);window.awr;function $main(){let Q=this;class BasicTypeIORegistrar{constructor(){}static installTypeIORegisterRoutines(typeName,installs){return function(typeName,{onImport:onImport,onAvailable:onAvailable,onExport:onExport}){if(!Q.$stringExist(typeName))return!1;if(!(Q.$functionExist(onImport)&&Q.$functionExist(onAvailable)&&Q.$functionExist(onExport)))return!1;let loweredTypeName=Q.$firstLetterToLowerCase(typeName),cpTypeName=Q.$firstLetterToUpperCase(typeName);Q.$extendImportType(loweredTypeName,function(factoryItemName){let res=null;try{res=onImport(factoryItemName)}catch(err){$errorOut("badFactoryImportImplementor",[{key:"errMsg",value:err},{key:"factoryType",value:cpTypeName}]),res=null}return res}),Q.$extendExportType(loweredTypeName,function(factoryItemName,factoryFnArray,opts){opts=Q.$objectExist(opts)?opts:{};let res=!1;try{res=onExport(factoryItemName,factoryFnArray,opts)}catch(err){$errorOut("badFactoryExportImplementor",[{key:"errMsg",value:err},{key:"factoryType",value:cpTypeName}]),res=!1}return res}),Q.$extendAvailableType(loweredTypeName,function(factoryItemName){let res=!1;try{res=onAvailable(factoryItemName)}catch(err){$errorOut("badFactoryAvailableImplementor",[{key:"errMsg",value:err},{key:"factoryType",value:cpTypeName}]),res=!1}return res})}(typeName,installs)}static register(factory){BasicTypeIORegistrar.registerCustomFactorTypeDefinerIO(factory)}static registerCustomFactorTypeDefinerIO(factory){commonRegisterRoutine(factory,{typeRegistryName:null,typeName:"FactoryType",interfaceCheck:null,badInterfaceHint:null})}static registerCustomType(factory,customTypeRegistryName,customType,interfaceCheck,badInterfaceHint){commonRegisterRoutine(factory,{typeRegistryName:customTypeRegistryName,typeName:customType,interfaceCheck:interfaceCheck,badInterfaceHint:badInterfaceHint})}static extenderTypeCheck(superTypeClass,typeExtender,extenderName){let abstractFunctions=Q.$getClassAbstractFunctionNames(superTypeClass);return Q.$arrayExist(typeExtender)&&(typeExtender=Q.$reduce(typeExtender,nxt=>Q.$functionExist(nxt)).$first()),!(!Q.$functionExist(typeExtender)||Q.$isUX3TypeClass(typeExtender))||Q.$commonTypeCheck(typeExtender,abstractFunctions,(reason,missingName)=>{"MISSING_ABSTRACT_IMPL"===reason?$errorOut("noImplForAbstractFunction",[{key:"childName",value:extenderName},{key:"superName",value:superTypeClass.name},{key:"abstractName",value:missingName}]):$errorOut("badChildClassType",[{key:"childName",value:extenderName},{key:"superName",value:superTypeClass.name}])},!1,!1)}}function commonRegisterRoutine(factory,{typeRegistryName:typeRegistryName,typeName:typeName,interfaceCheck:interfaceCheck,badInterfaceHint:badInterfaceHint}){Q.$extendImportType(Q.$firstLetterToLowerCase(typeName),function(factoryItemName){return factory.$getFactoryType.apply(factory,[typeName,typeRegistryName,factoryItemName])}),Q.$extendExportType(Q.$firstLetterToLowerCase(typeName),function(factoryItemName,factoryFnArray){return factory.$registerFactoryType.apply(factory,[typeName,typeRegistryName,factoryItemName,factoryFnArray,interfaceCheck,badInterfaceHint])}),Q.$extendAvailableType(Q.$firstLetterToLowerCase(typeName),function(factoryItemName){return factory.$factoryTypeExists.apply(factory,[typeName,typeRegistryName,factoryItemName])})}$export("class:BasicTypeIORegistrar@AwrFactory",BasicTypeIORegistrar)}__$$errors$$__=__$loadErrors__("$$factory@kernel"),__callModuleMainFn__($main,__$$requires$$__)})}(),function(){var __$$requires$$__=[],__$$errors$$__=null;function $errorOut(errName,replaces){return __$errorOut__(__$$errors$$__,errName,replaces)}__pushToBootQueue__(function(){__$require__(__$$requires$$__,["function:awr.registerClass"]);let awr=window.awr||{};function $main(){let Q=this;function instanceTypeCheck({interfaceCheck:interfaceCheck,instanceUnderCheck:instanceUnderCheck,factoryName:factoryName,factoryType:factoryType,badInterfaceHint:badInterfaceHint=" < No more information available > "}){let interfaceTestResult=!0;if(Q.$functionExist(interfaceCheck))try{interfaceTestResult=interfaceCheck(instanceUnderCheck)}catch(err){interfaceTestResult=!1,$errorOut("errorInInterfaceCheck",[{key:"errMsg",value:err},{key:"factoryName",value:factoryName},{key:"factoryType",value:Q.$firstLetterToUpperCase(factoryType)}])}return interfaceTestResult||$errorOut("badCustomFactoryInterface",[{key:"factoryName",value:factoryName},{key:"factoryType",value:Q.$firstLetterToUpperCase(factoryType)},{key:"extraMsg",value:badInterfaceHint}]),interfaceTestResult}$export("class:RegisterProceedRoutines@AwrFactory",class{constructor(){}static proceedWithRegisterCustomDefiner(factory,itemName,item){if(!Q.$isUX3TypeClass(item))return;let newInstance,definerInterfaceCheck,interfaceCheck,data={},proto={},abstractFunctions=[],badInterfaceHint=`Child class which extends superType < ${itemName} >`+" is required to implement all abstract functions defined by its superType.";if(Q.$objectExist(item.prototype)&&Q.$each(item.prototype,(value,key)=>{Object.defineProperty(proto,key,Object.getOwnPropertyDescriptor(item.prototype,key))}),definerInterfaceCheck=Q.$commonTypeCheck(item,Q.$getClassAbstractFunctionNames(awr.FactoryType),(reason,missingName)=>{"MISSING_ABSTRACT_IMPL"===reason?$errorOut("noImplForAbstractFunction",[{key:"childName",value:itemName},{key:"superName",value:"awr.FactoryType"},{key:"abstractName",value:missingName}]):$errorOut("badChildClassType",[{key:"childName",value:itemName},{key:"superName",value:"awr.FactoryType"}])},!0,!0)){abstractFunctions=Q.$getClassAbstractFunctionNames(item),interfaceCheck=(itemExtender=>Q.$commonTypeCheck(itemExtender,abstractFunctions,(reason,missingName)=>{"MISSING_ABSTRACT_IMPL"===reason?$errorOut("noImplForAbstractFunction",[{key:"childName",value:itemExtender.name},{key:"superName",value:itemName},{key:"abstractName",value:missingName}]):$errorOut("badChildClassType",[{key:"childName",value:itemExtender?itemExtender.name:"UNKNOWN"},{key:"superName",value:itemName}])},!0,!0));try{newInstance=new item}catch(err){$errorOut("badFactoryBuildFunction",[{key:"errMsg",value:err},{key:"factoryName",value:itemName},{key:"factoryType",value:"FactoryType"}])}Q.$objectExist(newInstance)&&(Q.$each(newInstance,(value,key)=>{Object.defineProperty(data,key,Object.getOwnPropertyDescriptor(newInstance,key))}),factory.$define.apply(factory,[itemName,{proto:proto,data:data,interfaceCheck:interfaceCheck,badInterfaceHint:badInterfaceHint,superTypeRequire:Q.$objectExists(item.$require)?item.$require:{},superTypeInit:Q.$functionExists(item.prototype.init)?item.prototype.init:null}]))}}static proceedWithRegisterFactoryType(registry,{factoryFn:factoryFn,cleanName:cleanName,factoryType:factoryType,requires:requires,registryName:registryName,itemName:itemName,interfaceCheck:interfaceCheck,badInterfaceHint:badInterfaceHint=" < no addition info available >"}){let factoryObj,instanceRequiresLateTypeCheck,origCleanName,interfaceTestResult=!0,cleanNameCount=0,convertedRequires=Q.$isEmpty(requires)?[]:$import(requires);if(Q.$isUX3TypeClass(factoryFn)?(instanceRequiresLateTypeCheck=!1,interfaceTestResult=instanceTypeCheck({interfaceCheck:interfaceCheck,instanceUnderCheck:factoryFn,factoryName:cleanName,factoryType:factoryType,badInterfaceHint:badInterfaceHint})):instanceRequiresLateTypeCheck=!0,interfaceTestResult){try{Q.$isUX3TypeClass(factoryFn)?(cleanName=cleanName.substring(0,1).toLowerCase()+cleanName.substring(1),factoryObj=new factoryFn):factoryObj=factoryFn.apply(Q,convertedRequires)}catch(err){return factoryObj=null,void $errorOut("badFactoryBuildFunction",[{key:"errMsg",value:err},{key:"factoryName",value:cleanName},{key:"factoryType",value:factoryType}])}if(instanceRequiresLateTypeCheck&&(interfaceTestResult=instanceTypeCheck({interfaceCheck:interfaceCheck,instanceUnderCheck:factoryObj,factoryName:cleanName,factoryType:factoryType,badInterfaceHint:badInterfaceHint})),interfaceTestResult){if(Q.$exist(factoryObj)||(factoryObj=null),"SpecObject"===registryName)for(origCleanName=cleanName;registry.$inRegistry(registryName,cleanName);)cleanName=`t${++cleanNameCount}_${origCleanName}`;registry.$add(registryName,cleanName,factoryObj)}}}})}__$$errors$$__=__$loadErrors__("$$factory@kernel"),__callModuleMainFn__($main,__$$requires$$__)})}(),function(){var __$$requires$$__=[];__pushToBootQueue__(function(){__$require__(__$$requires$$__,["object:awr.registryManager","class:BasicFactoryHelper@AwrFactory","class:BasicTypeIORegistrar@AwrFactory","class:CustomFactory@AwrFactory"]);let awr=window.awr||{},knownFactories={};function $main(){const Q=awr.Q;let factory,registry=$import("object:awr.registryManager"),helper=$import("class:BasicFactoryHelper@AwrFactory"),basicTypeIO=$import("class:BasicTypeIORegistrar@AwrFactory"),customFactory=$import("class:CustomFactory@AwrFactory");function installFnInFactoryPrototype(FactoryClz,name,fn){return FactoryClz.prototype.hasOwnProperty(name)?(console.error(`factory@AWRFactory: prototype has property < ${name} > already`),!1):Q.$functionExist(fn)?void(AWRFactory.prototype[name]=fn):(console.error(`factory@AWRFactory: No function < ${name} > to be installed in factory prototype.`),!1)}function AWRFactory(){Object.defineProperty(this,"factories",{get:()=>knownFactories})}$export("bundle:coreTypes@AwrFactory",["function:awr.FactoryType","function:awr.Class","function:awr.Controller","function:awr.Config","function:awr.Model","function:awr.Observable","function:awr.Resolvable","function:awr.Pipe","function:awr.Route","function:awr.Service","function:awr.Validator","function:awr.App","function:awr.Segment","function:awr.LazyModule","function:awr.Spec","function:awr.Watchable"]),Object.defineProperty(knownFactories,"class",{get:()=>"INSTALLED"}),$export("bundle:coreFactories@AwrFactory",["string:awr.factory.factories.class","string:awr.factory.factories.controller","string:awr.factory.factories.config","string:awr.factory.factories.model","string:awr.factory.factories.observable","string:awr.factory.factories.pipe","string:awr.factory.factories.route","string:awr.factory.factories.service","string:awr.factory.factories.validator","string:awr.factory.factories.app","string:awr.factory.factories.segment","string:awr.factory.factories.resolvable","string:awr.factory.factories.token","string:awr.factory.factories.lazyModule","string:awr.factory.factories.spec","string:awr.factory.factories.watchable"]),AWRFactory.prototype.$installInFactory=function(typeName,{onImport:onImport,onAvailable:onAvailable,onExport:onExport,onRemove:onRemove}){if(!Q.$stringExist(typeName))return!1;let capitalizedTypeName=Q.$firstLetterToUpperCase(typeName),loweredTypeName=Q.$firstLetterToLowerCase(typeName),existsFnName=`$${loweredTypeName}Exist`,registerFnName=`$register${capitalizedTypeName}`,removeFnName=`$remove${capitalizedTypeName}`,getFnName=`$get${capitalizedTypeName}`;knownFactories.hasOwnProperty(loweredTypeName)||Object.defineProperty(knownFactories,loweredTypeName,{get:()=>"INSTALLED"}),installFnInFactoryPrototype(AWRFactory,existsFnName,onAvailable),installFnInFactoryPrototype(AWRFactory,registerFnName,onExport),installFnInFactoryPrototype(AWRFactory,removeFnName,onRemove),installFnInFactoryPrototype(AWRFactory,getFnName,onImport)},AWRFactory.prototype.$define=function(factoryName,{proto:proto={},interfaceCheck:interfaceCheck=null,badInterfaceHint:badInterfaceHint=null,superTypeRequire:superTypeRequire={},superTypeInit:superTypeInit=null}){customFactory.$define(factory,registry,{factoryName:factoryName,proto:proto,interfaceCheck:interfaceCheck,badInterfaceHint:badInterfaceHint,superTypeRequire:superTypeRequire,superTypeInit:superTypeInit})},AWRFactory.prototype.$factoryTypeExists=function(factoryType,registryName,itemName){return helper.factoryTypeExists(registry,{factoryType:factoryType,registryName:registryName,itemName:itemName})},AWRFactory.prototype.$getFactoryType=function(factoryType,registryName,itemName){return helper.getFactoryType(registry,{factoryType:factoryType,registryName:registryName,itemName:itemName})},AWRFactory.prototype.$removeFactoryType=function(factoryType,registryName,itemName){return helper.removeFactoryType(registry,{factoryType:factoryType,registryName:registryName,itemName:itemName})},AWRFactory.prototype.$registerFactoryType=function(factoryType,registryName,itemName,itemFnArr,interfaceCheck=null,badInterfaceHint=null){return helper.registerFactoryType(this,registry,{factoryType:factoryType,registryName:registryName,itemName:itemName,itemFnArr:itemFnArr,interfaceCheck:interfaceCheck,badInterfaceHint:badInterfaceHint})},$export("object:awr.factory",factory=new AWRFactory,{takeEasy:!1}),basicTypeIO.register(factory)}__$loadErrors__("$$factory@kernel"),__callModuleMainFn__($main,__$$requires$$__)})}(),function(){var __$$requires$$__=[],__$$errors$$__=null;__pushToBootQueue__(function(){let awr=window.awr||{};function $main(){let Q=this,Promise=window.Promise,ModelObject=$import("class:RemoteModelObject");function triggerListener(modelObject,globals,listener,args){if(Q.$arrayExist(args)&&globals&&Q.$stringExist(globals.name)&&args.push(globals.name),Q.$functionExist(globals[listener]))try{globals[listener].apply(modelObject,args)}catch(e){errName="badModelListenerCall",replaces=[{key:"errMsg",value:e},{key:"listenerName",value:listener},{key:"modelName",value:globals.name?globals.name:"unknown"}],__$errorOut__(__$$errors$$__,errName,replaces)}var errName,replaces}function getCleanCallConfig(settings){let newSettings=Object.assign({},settings),config=Q.$functionExist(settings.getGlobalConfig)?settings.getGlobalConfig():null;return Q.$objectExist(config)?(url=newSettings.url,root=config.api,Q.$stringExist(root)&&Q.$stringExist(url)&&!(url.startsWith(root)||url.startsWith("http:")||url.startsWith("https:"))&&((config.api.endsWith("api")||config.api.endsWith("api/"))&&newSettings.url.startsWith("/api")&&(newSettings.url=newSettings.url.substring(4)),config.api.endsWith("/")||(config.api+="/"),settings.url.startsWith("/")&&(newSettings.url=settings.url.substring(1)),newSettings.url=config.api+newSettings.url),Q.$forEachProperty(Q.$objectExist(config.headers)?config.headers:{},(nxt,key)=>{newSettings[key]=nxt}),newSettings):newSettings;var url,root}function BasicRemoteModel(opts){opts=opts||{},this.settings=opts,this.settings.getGlobalConfig=(()=>opts.globalConfig),this.globals={name:opts.name},delete this.settings.name}BasicRemoteModel.prototype.$setEventListeners=function(opts){opts=Q.$objectExist(opts)?opts:{};let _self=this,globalFuncNames=["onSave","onGet","onRemove","onCreate","onError","onFindAll","onCall","onCallComplete"];Q.$each(opts,(val,key)=>{Q.$setContainsString(globalFuncNames,key)?_self.globals[key]=Q.$functionExist(val)?val:_self.globals[key]:_self.globals[key]=Q.$exist(val)?val:_self.globals[key]})},BasicRemoteModel.prototype.$removeEventListeners=function(opts){opts=Q.$objectExist(opts)?opts:{};let _self=this,globalFuncNames=["onSave","onGet","onRemove","onCreate","onError","onFindAll","onCall","onCallComplete"];Q.$objectExist(opts)?Q.$each(opts,(val,key)=>{Q.$setContainsString(globalFuncNames,key)&&(_self.globals[key]=null)}):Q.$arrayExists(opts)&&Q.$each(opts,key=>{Q.$setContainsString(globalFuncNames,key)&&(_self.globals[key]=null)})},BasicRemoteModel.prototype.$template=function(data){data=data||{};let newSettings=getCleanCallConfig(this.settings);return newSettings.data=data,new ModelObject(newSettings,this.globals)},BasicRemoteModel.prototype.$create=function(data,query,opts){data=data||{};let newSettings=getCleanCallConfig(this.settings);return newSettings.data=data,new ModelObject(newSettings,this.globals).$clone({},query,opts)},BasicRemoteModel.prototype.$findOne=function(model_id,query,opts){let currentSettings=getCleanCallConfig(this.settings);return currentSettings.$id=model_id,new ModelObject(currentSettings,this.globals).$get(query,opts)},BasicRemoteModel.prototype.$findAll=function(query,{triggerEventOnCall:triggerEventOnCall=!0,triggerEventOnSuccess:triggerEventOnSuccess=!0,triggerEventOnError:triggerEventOnError=!0,triggerEventOnCallComplete:triggerEventOnCallComplete=!0,silent:silent=!1}={triggerEventOnCall:!0,triggerEventOnSuccess:!0,triggerEventOnError:!0,triggerEventOnCallComplete:!0,silent:!1}){silent&&(triggerEventOnError=triggerEventOnSuccess=triggerEventOnCall=triggerEventOnCallComplete=!1);let _self=this,complete=(status,message)=>{(triggerEventOnCallComplete&&"success"===status||triggerEventOnError&&"error"===status)&&triggerListener(_self,_self.globals,"onCallComplete",[null,query,"findAll",status,message])};return triggerEventOnCall&&triggerListener(_self,_self.globals,"onCall",[null,query,"findAll"]),new Promise(function(resolve,reject){let $get=awr.serverCall.$get,settings=getCleanCallConfig(_self.settings);settings.url=function(url,query){let protocol;return url=url||"/",query=query||"",url.endsWith("?")&&(url=url.substring(0,url.length-1)),query.startsWith("?")||(query=`?${query}`),url.startsWith("http://")?(protocol="http://",url=url.replace("http://","")):url.startsWith("https://")&&(protocol="https://",url=url.replace("https://","")),`${protocol}${url=Q.$collect(url.split("/"),(collected,nxt)=>(collected=Q.$stringExist(collected)?collected:"",collected+=Q.$stringExist(nxt)?`${nxt}/`:""))}${query}`}(settings.url,query),$get(settings).then(res=>{let nextSettings,models=Q.$asCollection([]);Q.$forEachIndex(Q.$arrayExist(res)?res:[],(nxt,nxtIndex)=>{_self.settings&&((nextSettings=getCleanCallConfig(_self.settings)).data=nxt,models.push(new ModelObject(nextSettings,_self.globals)))}),resolve(Q.$asCollection(models)),triggerEventOnSuccess&&triggerListener(_self,_self.globals,"onFindAll",[models,query,"findAll"]),complete("success")},err=>{err=err&&err.responseJSON?err.responseJSON:err,reject(err),complete("error",err)})})},$export("class:RemoteModel@model",BasicRemoteModel)}__$require__(__$$requires$$__,["object:awr.$$core","function:awr.registerClass","service:serverCall","class:RemoteModelObject"]),__$$errors$$__=__$loadErrors__("$$model@kernel"),__callModuleMainFn__($main,__$$requires$$__)})}(),function(){var __$$requires$$__=[];__pushToBootQueue__(function(){window.awr;function $main(){let Q=this;$export("class:AuthorizerBuilder",class{constructor(routeEvents){this.routeEvents=routeEvents}buildAuthorizerFunction({routeManager:routeManager,rawAuthFn:rawAuthFn,rawOnReject:rawOnReject}){let routeEvents=this.routeEvents;return function(){let result,rejectedFragment,args=arguments;return new Promise((resolve,reject)=>{try{result=rawAuthFn.apply(Q,args),Q.$booleanTrue(result)||Q.$functionExist(result.then)?Promise.resolve(result).then(res=>{resolve(res)},err=>{Q.$functionExist(rawOnReject)&&(rejectedFragment=routeManager.$getFragment(),"hash"===routeManager.mode&&(rejectedFragment=`#${rejectedFragment}`),rawOnReject(rejectedFragment)),routeEvents.emitStateAuthorizationFailedEvent({errorMessage:"Failed to authorize state.",hasError:!0,isAuthorized:!1}),reject(err)}):(Q.$functionExist(rawOnReject)&&(rejectedFragment=routeManager.$getFragment(),"hash"===routeManager.mode&&(rejectedFragment=`#${rejectedFragment}`),rawOnReject(rejectedFragment)),routeEvents.emitStateAuthorizationFailedEvent({errorMessage:"Failed to authorize state.",hasError:!0,isAuthorized:!1}),reject("Bad authorization!"))}catch(e){routeEvents.emitStateAuthorizationFailedEvent({errorMessage:"Failed to authorize state.",hasError:!0,isAuthorized:!1}),reject("Error in authorizer!")}})}}})}__$require__(__$$requires$$__,"function:awr.registerClass"),__$loadErrors__("$$route@kernel"),__callModuleMainFn__($main,__$$requires$$__)})}(),function(){var __$$requires$$__=[];__pushToBootQueue__(function(){window.awr;function $main(){let Q=this,routeUtils=$import("class:RouteUtils");function findBestMatch({fragment:fragment,routes:routes}){let matchDegree=0,bestMatch=null,params={};return fragment=fragment.endsWith("?")?fragment.substring(0,fragment.length-1):fragment,Q.$stringExist(fragment)?(Q.$each(routes,next=>{let match,nextRoot,nxt_parts=next.path.split("/"),f_path=fragment.split("?")[0],f_parts=f_path.endsWith("/")?f_path.split("/"):(f_path+"/").split("/");nextRoot=next.root,next.isDefault&&!Q.$stringExist(nextRoot)&&Q.$stringExist(next.link)&&(nextRoot=routeUtils.getRoot(next.link)),f_parts=Q.$arrayExist(f_parts)?f_parts:[],Q.$stringExist(f_parts[f_parts.length-1])||f_parts.pop(),match=nextRoot===(f_path=f_path.endsWith("/")?f_path:f_path+"/")||f_parts.length<=nxt_parts.length&&Q.$stringExist(nextRoot)&&f_path.startsWith(nextRoot),matchDegree=f_path.length>matchDegree?f_path.length:matchDegree,match&&Q.$forEachIndex(nxt_parts,function(n,index){n.startsWith(":")&&(params[n.replace(":","")]=index<f_parts.length?f_parts[index]:null)}),match&&nextRoot===f_path?bestMatch=next:Q.$booleanTrue(match)&&f_path.length>=matchDegree&&(bestMatch=next)}),bestMatch):Q.$reduce(routes,nxt=>nxt.isDefault).$first()}routeUtils=new routeUtils;$export("class:BestRouteMatch",class{constructor(){}hasAnyMatch({fragment:fragment,routes:routes}){if(!Q.$stringExist(fragment))return Q.$reduce(routes,nxt=>nxt.isDefault).$count()>0;let initial_f_path;return function(matchedRoute,fragmentPath){let hasMatch=!0,matchLink=Q.$objectExist(matchedRoute)&&matchedRoute.link?matchedRoute.link.split("?")[0]:null,bestMatchArr=Q.$stringExist(matchLink)?matchLink.split("/"):null,fragmentArr=Q.$exist(fragmentPath)?fragmentPath.split("/"):null;return!(!matchLink||!Q.$setContainsString([matchLink,`${matchLink}/`,matchLink.replace("/","")],fragmentPath))||!(!Q.$arrayExist(bestMatchArr)||!Q.$arrayExist(fragmentArr))&&(Q.$forEachIndex(bestMatchArr,(val,index)=>{Q.$stringExist(fragmentArr[index])&&(val.startsWith(":")||Q.$stringEqual(val,fragmentArr[index]))||(hasMatch=!1)}),hasMatch)}(findBestMatch({fragment:fragment,routes:routes}),initial_f_path=(fragment=fragment.endsWith("?")?fragment.substring(0,fragment.length-1):fragment)&&Q.$functionExist(fragment.split)?fragment.split("?")[0]:null)}getBestMatch({fragment:fragment,routes:routes}){return findBestMatch({fragment:fragment,routes:routes})}})}__$require__(__$$requires$$__,["function:awr.registerClass","class:RouteUtils"]),__$loadErrors__("$$route@kernel"),__callModuleMainFn__($main,__$$requires$$__)})}(),function(){var __$$requires$$__=[],__$$errors$$__=null;function $errorOut(errName,replaces){return __$errorOut__(__$$errors$$__,errName,replaces)}__pushToBootQueue__(function(){window.awr;function $main(){let Q=this;$export("class:ResolveErrorHandler@AwrRoute",class{constructor(){}static onResolveError({err:err,resolvable:resolvable,state:state,builderCtx:builderCtx,isAuthFailed:isAuthFailed,incrementRejectedCount:incrementRejectedCount,getRejectedCount:getRejectedCount,rejectedKeys:rejectedKeys}){let msg;incrementRejectedCount(),rejectedKeys.push(resolvable.key),Q.$objectExist(err.responseJSON)&&(err=err.responseJSON),Q.$objectExist(err)&&(Q.$stringExist(err.error)&&(msg=err.error),Q.$stringExist(err.message)&&(msg=Q.$stringExist(msg)?`${msg}: ${err.message}`:err.message)),$errorOut("rejectedResolve",[{key:"resolveName",value:resolvable.key},{key:"routeName",value:state.name},{key:"errMsg",value:Q.$stringExist(msg)?msg:err}]),getRejectedCount()<2&&builderCtx.routeEvents.emitStateChangeErrorEvent({errorMessage:`failed to resolve required data [${resolvable.key}]`,hasError:!0,isAuthFailed:isAuthFailed()})}static onCallPromiseFnError({err:err,resolvable:resolvable,state:state,builderCtx:builderCtx,isAuthFailed:isAuthFailed,incrementRejectedCount:incrementRejectedCount,getRejectedCount:getRejectedCount,rejectedKeys:rejectedKeys}){$errorOut("errorDuringResolve",[{key:"resolveName",value:resolvable.key},{key:"routeName",value:state.name},{key:"errMsg",value:err}]),incrementRejectedCount(),rejectedKeys.push(resolvable.key),getRejectedCount()<2&&builderCtx.routeEvents.emitStateChangeErrorEvent({errorMessage:`Error during the the attempt for resolving required data [${resolvable.key}]`,hasError:!0,isAuthFailed:isAuthFailed()})}static onTimeOutError({err:err,resolvable:resolvable,state:state,builderCtx:builderCtx,isAuthFailed:isAuthFailed,incrementRejectedCount:incrementRejectedCount,getRejectedCount:getRejectedCount}){$errorOut("timeoutForResolve",[{key:"resolveName",value:resolvable.key},{key:"routeName",value:state.name},{key:"errMsg",value:err}]),incrementRejectedCount(),getRejectedCount<2&&builderCtx.routeEvents.emitStateChangeErrorEvent({errorMessage:`Error during the injecting dependencies into resolvable [${resolvable.key}]`,hasError:!0,isAuthFailed:isAuthFailed()})}})}__$require__(__$$requires$$__,["function:awr.registerClass"]),__$$errors$$__=__$loadErrors__("$$route@kernel"),__callModuleMainFn__($main,__$$requires$$__)})}(),function(){var __$$requires$$__=[];__pushToBootQueue__(function(){window.awr;function $main(){$export("class:RouteEvents",class{constructor(eventManager){this.eventManager=eventManager,this.$emit=eventManager.$emit}emitStateChangeStartEvent(stateEvent){(stateEvent=stateEvent||{}).eventName="stateChangeStart",this.$emit("router:onStateBusy",stateEvent),this.$emit("router:state-busy",stateEvent),this.$emit("router:stateChangeStart",stateEvent,{async:!1})}emitStateChangeSuccessEvent(stateEvent){(stateEvent=stateEvent||{}).eventName="stateChangeSuccess",this.$emit("router:onStateReady",stateEvent),this.$emit("router:state-ready",stateEvent),this.$emit("router:stateChangeSuccess",stateEvent)}emitStateChangeErrorEvent(stateEvent){(stateEvent=stateEvent||{}).eventName="stateChangeError",this.$emit("router:stateChangeError",stateEvent)}emitStateAuthorizationFailedEvent(stateEvent){(stateEvent=stateEvent||{}).eventName="stateAuthorizationFailed",this.$emit("router:stateAuthorizationFailed",stateEvent)}emitStateNotFoundEvent(stateEvent){(stateEvent=stateEvent||{}).eventName="stateNotFound",this.$emit("router:stateNotFound",stateEvent,{async:!1})}})}__$loadErrors__("$$route@kernel"),__$require__(__$$requires$$__,"function:awr.registerClass"),__callModuleMainFn__($main,__$$requires$$__)})}(),function(){var __$$requires$$__=[];__pushToBootQueue__(function(){let awr=window.awr||{};function $main(){let Q=this,registry=$import("object:registryManager"),resolvableRequester=$import("class:StateResolvableRequester@AwrRoute"),errorHandler=$import("class:ResolveErrorHandler@AwrRoute");const temporaryStatePath="awr.temporary.__$$state$$__";function getResolvable(fnArr){return Q.$functionExist(fnArr)?fnArr:Q.$arrayNotEmpty(fnArr)?Q.$reduce(fnArr,nxt=>Q.$functionExist(nxt)).$first():Q.$stringExist(fnArr)?fnArr.startsWith("resolvable:")?fnArr:`resolvable:${fnArr}`:null}function proceedWithCreateView({app:app,cnf:cnf,resolves:resolves,builderCtx:builderCtx,stateEventObj:stateEventObj,state:state,setCurrentlyAppliedState:setCurrentlyAppliedState,success:success}){Q.$functionExist(success)&&success(resolves),cnf=cnf||{},app.$view({viewName:cnf.name,requires:cnf.requires,scopeArgs:resolves,template:Q.$exist(cnf.template)?cnf.template:null,controller:Q.$functionExist(cnf.controller)?cnf.controller:Q.$stringExist(cnf.controller)?cnf.controller:null}),builderCtx.routeEvents.emitStateChangeSuccessEvent(stateEventObj),setCurrentlyAppliedState(state)}$export("class:RouteMainBuilder",class{constructor(app,routeGlobals,routeEvents){this.globals=routeGlobals,this.routeEvents=routeEvents,this.app=app}buildMainFunction(cnf){let builderCtx=this;return function(state,currentlyAppliedState,success){let app=builderCtx.app,resolves=[],authorizeRegName=builderCtx.globals.authorizeRegName,configResolveObject=cnf.resolve,resolveRequests=[],stateEventObj={from:currentlyAppliedState,to:state},auth=registry.$get(authorizeRegName,`${state.name}@authorizedRoute`),rejectedCount=0,rejectedKeys=[],isAuthFailed=()=>Q.$reduce(rejectedKeys,nxt=>Q.$stringEqual(nxt,"$authorization")).length>0,setCurrentlyAppliedState=newState=>currentlyAppliedState=newState,incrementRejectedCount=()=>rejectedCount++,getRejectedCount=()=>rejectedCount;resolves.push({key:"$state",value:state}),Q.$objectExist(auth)&&(configResolveObject.$authorization=auth.authorizer),function(state){awr.temporary=Q.$objectExist(awr.temporary)?awr.temporary:{},awr.temporary.__$$state$$__=state}(state),Q.$objectExist(configResolveObject)&&Q.$each(configResolveObject,(val,key)=>{let fn=getResolvable(val),requires=function(val){let fnType=getResolvable(val);return Q.$stringExist(fnType)&&fnType.startsWith("resolvable")?[fnType,`object:${temporaryStatePath}`]:Q.$arrayNotEmpty(val)?Q.$map(val,nxt=>{if("$state"===nxt&&(nxt=`object:${temporaryStatePath}`),!Q.$functionExist(nxt))return nxt}):[]}(val);resolveRequests.push({key:key,fn:fn,requires:requires})}),Q.$isEmpty(resolveRequests)?proceedWithCreateView({app:app,cnf:cnf,resolves:resolves,state:state,builderCtx:builderCtx,stateEventObj:stateEventObj,setCurrentlyAppliedState:setCurrentlyAppliedState,success:success}):resolvableRequester.$resolve({resolveRequests:resolveRequests,resolves:resolves,temporaryStatePath:temporaryStatePath,onProceed(allResolves){proceedWithCreateView({resolves:allResolves,app:app,cnf:cnf,state:state,builderCtx:builderCtx,stateEventObj:stateEventObj,setCurrentlyAppliedState:setCurrentlyAppliedState,success:success})},onResolveError(err,resolvable){errorHandler.onResolveError({err:err,resolvable:resolvable,state:state,builderCtx:builderCtx,isAuthFailed:isAuthFailed,incrementRejectedCount:incrementRejectedCount,getRejectedCount:getRejectedCount,rejectedKeys:rejectedKeys})},onCallPromiseError(err,resolvable){errorHandler.onCallPromiseFnError({err:err,resolvable:resolvable,state:state,builderCtx:builderCtx,isAuthFailed:isAuthFailed,incrementRejectedCount:incrementRejectedCount,getRejectedCount:getRejectedCount,rejectedKeys:rejectedKeys})},onTimeoutError(err,resolvable){errorHandler.onTimeOutError({err:err,resolvable:resolvable,state:state,builderCtx:builderCtx,isAuthFailed:isAuthFailed,incrementRejectedCount:incrementRejectedCount,getRejectedCount:getRejectedCount})}})}}})}__$require__(__$$requires$$__,["function:awr.registerClass","object:awr.registryManager","object:awr.eventManager","class:ResolveErrorHandler@AwrRoute","class:StateResolvableRequester@AwrRoute"]),__$loadErrors__("$$route@kernel"),__callModuleMainFn__($main,__$$requires$$__)})}(),function(){var __$$requires$$__=[],__$$errors$$__=null;function $errorOut(errName,replaces){return __$errorOut__(__$$errors$$__,errName,replaces)}__pushToBootQueue__(function(){window.awr;function $main(){let paintGuardInterval,Q=this,routines=$import("class:StateApplierRoutines@AwrRoute");function emitStateChangeError({routeEvents:routeEvents,err:err,stateEventObj:stateEventObj,isErrorEmitted:isErrorEmitted}){Q.$booleanFalse(isErrorEmitted)&&(delete stateEventObj.preventDefault,stateEventObj.isPrevented=!1,stateEventObj.hasError=!0,stateEventObj.errorMessage=err,routeEvents.emitStateChangeErrorEvent(stateEventObj))}$export("class:RouteStateApplier",class{constructor(routeEvents){this.routeEvents=routeEvents}applyState({routeManager:routeManager,route:route={},hasAnyMatch:hasAnyMatch,link:link="",params:params={},attrs:attrs={},isDefault:isDefault=!1,currentlyAppliedState:currentlyAppliedState=null,cancelRequests:cancelRequests=[]}){let stateEventObj,onMainError,stateStamp,stateApplier=this,routeEvents=stateApplier.routeEvents,isErrorEmitted=!1,lastActiveState=currentlyAppliedState,transitionId=`transition-${(new Date).getTime()}`,state={name:route.name,link:link,params:params,attrs:attrs,isDefault:Q.$booleanTrue(isDefault)};return stateEventObj={from:currentlyAppliedState,to:state,preventDefault(){Q.$setContainsString(cancelRequests,transitionId)||cancelRequests.push(transitionId)}},Q.$functionExist(route.main)&&(routeEvents.emitStateChangeStartEvent(stateEventObj),Q.$booleanFalse(hasAnyMatch)&&($errorOut("stateNotFound"),routeEvents.emitStateNotFoundEvent(stateEventObj)),onMainError=(err=>{clearInterval(paintGuardInterval),emitStateChangeError({routeEvents:routeEvents,err:err,stateEventObj:stateEventObj,isErrorEmitted:isErrorEmitted}),isErrorEmitted=!0,$errorOut("badStateMain",[{key:"routeName",value:route.name},{key:"fromName",value:currentlyAppliedState&&Q.$stringExist(currentlyAppliedState.name)?currentlyAppliedState.name:"unknown"},{key:"toName",value:state&&Q.$stringExist(state.name)?state.name:"unknown"},{key:"errMsg",value:err}])}),Q.$execControl.execWithLock(routeManager.applyMainLock,function(){stateStamp=Q.$stringExist(transitionId)?parseInt(transitionId.replace("transition-","")):(new Date).getTime(),clearInterval(paintGuardInterval),routines.guardedStatePaint({stateStamp:stateStamp,retryMaxCount:50,repaintFn:()=>{try{cancelRequests=routines.proceedWithStateApply.call(stateApplier,{stateApplier:stateApplier,stateStamp:stateStamp,cancelRequestsArray:cancelRequests,transitionId:transitionId,stateEventObj:stateEventObj,routeEvents:routeEvents,currentlyAppliedState:currentlyAppliedState,route:route,state:state,routeManager:routeManager,lastActiveState:lastActiveState,onMainError:onMainError})}catch(e){clearInterval(paintGuardInterval),$errorOut("stateApplyError",[{key:"fromName",value:currentlyAppliedState&&Q.$stringExist(currentlyAppliedState.name)?currentlyAppliedState.name:"unknown"},{key:"toName",value:state&&Q.$stringExist(state.name)?state.name:"unknown"},{key:"errMsg",value:e}]),emitStateChangeError({routeEvents:routeEvents,err:e,stateEventObj:stateEventObj,isErrorEmitted:isErrorEmitted}),isErrorEmitted=!0}}})})),routeManager}})}__$require__(__$$requires$$__,["function:awr.registerClass","object:awr.registryManager","object:awr.eventManager","class:StateApplierRoutines@AwrRoute"]),__$$errors$$__=__$loadErrors__("$$route@kernel"),__callModuleMainFn__($main,__$$requires$$__)})}(),function(){var __$$requires$$__=[];__pushToBootQueue__(function(){window.awr;function $main(){let Q=this,stateFragment=$import("class:StateFragment@commons@AwrRoute");class RouteUtils{constructor(){}pushStateToHistory(state){(!history.state||history.state.link&&!Q.$stringEqual(state.link,history.state.link))&&history.pushState(state,state.name,state.link)}getParamKeysFromRouteLink(link,addIndex){let pathParts=[];try{pathParts=link.split("?")[0].split("/")}catch(e){}return Q.$arrayNotEmpty(pathParts)?Q.$map(pathParts,function(){let nxt=Q.$isQPrimitiveVal(this)?this.value:this;if(nxt.startsWith(":")){let nextKey=nxt.substring(1);return Q.$booleanTrue(addIndex)&&(nextKey={name:nextKey,pathIndex:this.__$$index$$__}),nextKey}}):[]}getAttrKeysFromConfigLink(link){let attr_array=[];try{attr_array=link.split("?")[1].split("&")}catch(e){}return Q.$map(attr_array,nxt=>nxt.startsWith(":")&&nxt.length>1?nxt.substring(1):nxt.startsWith(":")?void 0:nxt)}isLinkValid(link){let firstPart=link.split("?")[0];return link&&!(link.startsWith("!")||link.startsWith(":")||link.startsWith("?")||link.startsWith("-")||link.startsWith("#")||link.startsWith("&")||link.startsWith("="))&&!(firstPart.indexOf("=")>=0)}isRouteValid(opts){let hasNameAndRunner=Q.$stringExist(opts.name)&&(Q.$functionExist(opts.runner)||Q.$functionExist(opts.main));return!!Q.$objectExist(opts)&&(hasNameAndRunner&&Q.$stringEqual(opts.name,"default")||!(!Q.$stringExist(opts.link)||!Q.$stringExist(opts.name)))}getRoot(link){if(!link)return null;let parts=link.split("?");return parts[0].indexOf(":")>=0?parts[0].substring(0,parts[0].indexOf(":")):parts[0]}isBadSPALink(link){return!Q.$stringExist(link)||link.startsWith("null")||link.startsWith("undefined")||link.startsWith("/null")||link.startsWith("/undefined")||Q.$setContainsString(["/",""," ","#","/#","#/","/#/","//","undefined/","#undefined","/#undefined","/#undefined","undefined#","undefined#undefined","null#null","/null#null/","null#null/","/null#null","#null","null#"],link)}isBrokenSPARootCall(routeManager){let rootURL=stateFragment.getRootURL({mode:routeManager.mode,prefix:routeManager.prefix}),prefix=routeManager.prefix;return Q.$stringExist(prefix)&&prefix.endsWith("/")&&(prefix=prefix.substring(0,prefix.length-1)),"history"===routeManager.mode&&!rootURL.endsWith(prefix)}convertPathToAbstract(fragment){if(!Q.$stringExist(fragment))return"-null-";let abstractForm=Q.$collect(fragment.split("/"),function(collected){return collected=collected||"",Q.$stringExist(this.value)&&(collected+=this.value.startsWith(":")?"$var$/":this.value+"/"),collected});return abstractForm.startsWith("/")&&(abstractForm=abstractForm.substring(1)),abstractForm.endsWith("/")&&(abstractForm=abstractForm.substring(0,abstractForm.length-1)),abstractForm}listAllAbstractPaths(routes){let context=this;return Q.$map(routes,nxt=>context.convertPathToAbstract(nxt.path))}buildRouteConfig(cnf){"default"===(cnf=cnf||{}).name&&(cnf.isDefault=!0);let routeCnf=cnf,root=this.getRoot(cnf.link);return routeCnf.link=cnf.link.startsWith("#")||cnf.link.startsWith("/")?cnf.link.substring(1):cnf.link,root=cnf.isDefault?"":root.endsWith("/")?root:root+"/",routeCnf.root=root,routeCnf.path=cnf.link.split("?")[0],routeCnf.attributeString=cnf.link.split("?")[1],routeCnf.attrKeys=this.getAttrKeysFromConfigLink(cnf.link),routeCnf.paramKeys=this.getParamKeysFromRouteLink(cnf.link,!1),routeCnf.defaults=Q.$objectExist(cnf.defaults)?cnf.defaults:{},routeCnf.replaceNullString=Q.$booleanTrue(cnf.replaceNullString),routeCnf}}$export("class:RouteUtils",RouteUtils),window.ut=RouteUtils}__$require__(__$$requires$$__,["function:awr.registerClass","class:StateFragment@commons@AwrRoute"]),__$loadErrors__("$$route@kernel"),__callModuleMainFn__($main,__$$requires$$__)})}(),function(){var __$$requires$$__=[],__$$errors$$__=null;function $require(obj){return __$require__(__$$requires$$__,obj)}__pushToBootQueue__(function(){let awr=window.awr||{};function $main(){let appStartWaitInterval,paintGuardInterval,Q=this,$=$import("window:jQuery"),doNotGuardList=Q.$asCollection([]);function proceedWithGuardedPaint({stateStamp:stateStamp,retryMaxCount:retryMaxCount=20,repaintFn:repaintFn}){let currentStampValue,tryCount=0;clearInterval(appStartWaitInterval),repaintFn(),currentStampValue=parseInt($("#awrViewMain").attr("awr-state-stamp")),Q.$numberExist(currentStampValue)&&currentStampValue>=stateStamp||doNotGuardList.$contains(parseInt(stateStamp))||(paintGuardInterval=setInterval(()=>{currentStampValue=parseInt($("#awrViewMain").attr("awr-state-stamp")),tryCount>=retryMaxCount||Q.$numberExist(currentStampValue)&&currentStampValue>=stateStamp?clearInterval(paintGuardInterval):(tryCount++,repaintFn())},50))}$export("class:StateApplierRoutines@AwrRoute",class{constructor(){}static guardedStatePaint({stateStamp:stateStamp,retryMaxCount:retryMaxCount=20,repaintFn:repaintFn}){Q.$booleanTrue(awr.$$isAppStarted)?proceedWithGuardedPaint({stateStamp:stateStamp,retryMaxCount:retryMaxCount,repaintFn:repaintFn}):appStartWaitInterval=setInterval(()=>{Q.$booleanTrue(awr.$$isAppStarted)&&(clearInterval(appStartWaitInterval),proceedWithGuardedPaint({stateStamp:stateStamp,retryMaxCount:retryMaxCount,repaintFn:repaintFn}))},50)}static proceedWithStateApply({stateApplier:stateApplier,stateStamp:stateStamp,cancelRequestsArray:cancelRequestsArray,transitionId:transitionId,stateEventObj:stateEventObj,routeEvents:routeEvents,currentlyAppliedState:currentlyAppliedState,route:route,state:state,routeManager:routeManager,lastActiveState:lastActiveState,onMainError:onMainError}){let doNotGuardItem;if(Q.$setContainsString(cancelRequestsArray,transitionId)){try{doNotGuardItem=Q.$stringExist(transitionId)?parseInt(transitionId.replace("transition-","")):null}catch(err){doNotGuardItem=null}Q.$numberExist(doNotGuardItem)&&(doNotGuardList.push(doNotGuardItem),dGI=doNotGuardItem,setTimeout(_=>{doNotGuardList=doNotGuardList.$reduce(nxt=>nxt!==dGI)},3e3)),cancelRequestsArray=Q.$reduce(cancelRequestsArray,nxt=>{let time,expireTime=new Date((new Date).getTime()+1e4);try{time=parseInt(nxt.replace("transition-",""))}catch(e){}return!Q.$stringEqual(nxt,transitionId)||!Q.$numberExist(time)||time>=expireTime}),delete stateEventObj.preventDefault,stateEventObj.isPrevented=!0,route.isInRoute||(errName="stateChangePrevented",replaces=[{key:"stateName",value:stateEventObj.to.name}],__$errorOut__(__$$errors$$__,errName,replaces),routeEvents.emitStateChangeErrorEvent(stateEventObj))}else{doNotGuardList=Q.$reduce(doNotGuardList,nxt=>nxt!==transitionId);try{backState=currentlyAppliedState,sessionStorage.setItem("awr-back-state",JSON.stringify(backState)),route.main.apply(stateApplier,[state,currentlyAppliedState,resolves=>{!function(routeManager,previousName,newName,resolves){let cleanResolves,lastRoute=Q.$stringExist(previousName)?routeManager.$getRoute(previousName):null,newRoute=Q.$stringExist(newName)?routeManager.$getRoute(newName):null;if((cleanResolves=Q.$map(resolves,function(){if("$state"!==this.key)return this.value})).reverse(),Q.$exist(newRoute)&&Q.$functionExist(newRoute.onEnter))try{newRoute.onEnter.apply(newRoute,cleanResolves)}catch(e){}if(Q.$exist(lastRoute)&&Q.$functionExist(lastRoute.onExit))try{lastRoute.onExit.apply(lastRoute,cleanResolves)}catch(e){}}(routeManager,Q.$exist(lastActiveState)?lastActiveState.name:null,Q.$exist(route)?route.name:null,resolves)}]),$("#awrViewMain").attr("awr-state-stamp",stateStamp)}catch(e){onMainError(e)}}var backState,errName,replaces,dGI;return cancelRequestsArray}})}$require("object:awr.registryManager"),$require("object:awr.eventManager"),$require("function:awr.registerClass"),__$$errors$$__=__$loadErrors__("$$route@kernel"),__callModuleMainFn__($main,__$$requires$$__)})}(),function(){var __$$requires$$__=[];__pushToBootQueue__(function(){window.awr;function $main(){let Q=this,stateFragment=$import("class:StateFragment@commons@AwrRoute");function getCleanPart(part){return!Q.$stringExist(part)||1===part.length&&"/"===part?"/":(part.startsWith("/")||(part=`/${part}`),part.endsWith("/")||(part+="/"),part)}$export("class:StateLinkBuilder",class{constructor(){}convertFragmentToState({fragment:fragment,mode:mode,prefix:prefix="",routes:routes,bestRouteMatch:bestRouteMatch,utils:utils}){let match,rootURL=function(mode,prefix=""){let root="",loc=window.location,port=loc.port,protocol=loc.protocol,host=loc.host,pathName=loc.pathname;return"/"===pathName&&(pathName=""),pathName.startsWith("/")&&(pathName=pathName.substring(1)),pathName.endsWith("/")&&(pathName=pathName.substring(0,pathName.length-1)),Q.$stringExist(root)?(root=(root=Q.$stringEqual(mode,"history")?Q.$stringExist(port)?`${host.replace(`:${port}`,"")}:${port}${getCleanPart(prefix)}`:`${host}${getCleanPart(prefix)}`:Q.$stringExist(port)?`${host.replace(`:${port}`,"")}:${port}/${pathName}`:`${host}/${pathName}`).endsWith("/")?root.substring(0,root.length-1):root,`${protocol}//${root}`):""}(mode,prefix),link=this.getCleanStateLink(fragment,mode,utils);return Q.$stringExist(link)?(fragment="hash"===mode?link.split("#")[1]:link.substring(rootURL.length),Q.$stringExist(fragment)&&fragment.startsWith("/")&&(fragment=fragment.substring(1)),Q.$stringExist(fragment)&&bestRouteMatch.hasAnyMatch({fragment:fragment,routes:routes})?{name:(match=bestRouteMatch.getBestMatch({fragment:fragment,routes:routes})).name,link:link,params:stateFragment.extractParamsFromFragment(fragment,match.link),attrs:stateFragment.extractAttributesFromFragment(fragment,match.link)}:null):null}getCleanStateLink(fragment,mode,utils,prefix=""){let rootURL=stateFragment.getRootURL({mode:mode,prefix:prefix}),origServerQuery=this.getOriginalServerQueryString({mode:mode});return"hash"===mode&&Q.$stringExist(origServerQuery)&&(rootURL+=`?${origServerQuery}`),rootURL.endsWith("/")&&(rootURL=rootURL.substring(0,rootURL.length-1)),Q.$stringExist(fragment)?Q.$stringEqual(mode,"hash")&&utils.isBadSPALink(fragment)?rootURL+"/#":("hash"!==mode||fragment.startsWith("#")||fragment.startsWith("/#")||(fragment=fragment.startsWith("/")?"/#"+fragment.substring(1):"/#"+fragment),"history"===mode&&(fragment.startsWith("#")?fragment=fragment.substring(1):fragment.startsWith("/#")&&(fragment=fragment.substring(2))),(fragment=fragment.replace(/\/+/g,"/")).startsWith("/")||(fragment=`/${fragment}`),`${rootURL}${fragment}`):null}getCleanPushLink(fragment,mode,utils,prefix=""){let root="history"===mode?getCleanPart(prefix):"/",origServerQuery=this.getOriginalServerQueryString({mode:mode});return"hash"===mode&&Q.$stringExist(origServerQuery)&&(root+=`?${origServerQuery}`),root.endsWith("/")&&(root=root.substring(0,root.length-1)),Q.$stringExist(fragment)?("hash"!==mode||fragment.startsWith("#")||fragment.startsWith("/#")||(fragment=fragment.startsWith("/")?"/#"+fragment.substring(1):"/#"+fragment),Q.$stringEqual(mode,"hash")&&utils.isBadSPALink(fragment)?root+"/#":("history"===mode&&(fragment.startsWith("#")?fragment=fragment.substring(1):fragment.startsWith("/#")&&(fragment=fragment.substring(2))),(fragment=fragment.replace(/\/+/g,"/")).startsWith("/")||(fragment=`/${fragment}`),`${root}${fragment}`)):root+"/#"}buildStateLink({routeManager:routeManager,name:name,params:params,attrs:attrs}){let link,defaultParams,defaultAttrs,path_str,attr_str,testParams,route=routeManager.$getRoute(name),utils=Q.$getClassInstance("RouteUtils",[]);return Q.$objectExist(route)?(route.defaults=Q.$objectExist(route.defaults)?route.defaults:{},defaultParams=Q.$objectExist(route.defaults.params)?route.defaults.params:{},defaultAttrs=Q.$objectExist(route.defaults.attrs)?route.defaults.attrs:{},path_str=route.path,attr_str=route.attributeString||"",(testParams=Q.$map(route.paramKeys,nxt=>{if(Q.$exist(params[nxt])||Q.$exist(defaultParams[nxt]))return nxt})).length<route.paramKeys.length?path_str=route.root:Q.$each(route.paramKeys,(n,i)=>{let nxtPVal,nextParamStr,nxt=Q.$isQPrimitiveVal(n)?Q.$getQPrimitiveVal(n):n;nxtPVal=params[nxt],Q.$exist(defaultParams[nxt])&&(nxtPVal=Q.$setContainsString(["null","undefined"],nxtPVal)&&Q.$booleanTrue(route.replaceNullString)||!Q.$exist(nxtPVal)?defaultParams[nxt]:nxtPVal+""),nextParamStr=nxtPVal.replace(/[\#\?\=\&\/]/g,"").replace(/\s/g,"_"),path_str=path_str.replace(":"+nxt,nextParamStr)}),Q.$each(route.attrKeys,(n,i)=>{let nxtAVal,nxtAttr=Q.$isQPrimitiveVal(n)?Q.$getQPrimitiveVal(n):n;nxtAVal=attrs[nxtAttr],Q.$exist(defaultAttrs[nxtAttr])&&(nxtAVal=Q.$setContainsString(["null","undefined"],nxtAVal)&&Q.$booleanTrue(route.replaceNullString)||!Q.$exist(nxtAVal)?defaultAttrs[nxtAttr]:nxtAVal+""),attr_str=attr_str.replace(":"+nxtAttr,nxtAttr+"="+nxtAVal+"&")}),path_str=path_str.endsWith("/")?path_str.substring(0,path_str.length-1):path_str,link=(link=(attr_str=(attr_str=attr_str.endsWith("&")?attr_str.substring(0,attr_str.length-1):attr_str).replace(/\&+/g,"&"))?path_str+"?"+attr_str:path_str).startsWith("/")?link.substring(1):link,this.getCleanStateLink(`#${link}`,routeManager.mode,utils,routeManager.prefix)):null}getOriginalServerQueryString({mode:mode}){let href=window.location.href.split("#")[0];return"hash"===mode&&href&&href.split("?").length>1?href.split("?")[1]:""}})}__$require__(__$$requires$$__,["function:awr.registerClass","class:StateFragment@commons@AwrRoute"]),__$loadErrors__("$$route@kernel"),__callModuleMainFn__($main,__$$requires$$__)})}(),function(){var __$$requires$$__=[];__pushToBootQueue__(function(){window.awr;function $main(){let Q=this;$export("class:StateResolvableRequester@AwrRoute",class{constructor(){}static $resolve({resolveRequests:resolveRequests,resolves:resolves,onProceed:onProceed,onResolveError:onResolveError,onCallPromiseError:onCallPromiseError,onTimeoutError:onTimeoutError,temporaryStatePath:temporaryStatePath}){let execEnv,resolvedCount=0;resolves=Q.$arrayExist(resolves)?resolves:[],Q.$each(resolveRequests,(v,i)=>{let nxtPromise;Q.$commonWaitAndProceedOperation(v.requires,()=>{execEnv=function(resolvable,temporaryStatePath){let state,ux3Instance,fn=null,isUX3Instance=!1,imports=[];return Q.$stringExist(resolvable.fn)&&resolvable.fn.startsWith("resolvable:")?(ux3Instance=$import(resolvable.fn),Q.$objectExist(ux3Instance)&&Q.$functionExist(ux3Instance.resolve)&&(isUX3Instance=!0,fn=ux3Instance,state=Q.$map(resolvable.requires,nxt=>{if(Q.$stringExist(nxt)&&nxt.indexOf(temporaryStatePath)>=0)return $import(nxt)}).$first(),imports=[state])):Q.$functionExist(resolvable.fn)&&(fn=resolvable.fn,imports=Q.$map(resolvable.requires,nxt=>$import(nxt))),{fn:fn,isUX3Instance:isUX3Instance,imports:imports}}(v,temporaryStatePath);try{nxtPromise=execEnv.isUX3Instance?execEnv.fn.resolve.apply(execEnv.fn,execEnv.imports):execEnv.fn.apply(Q,execEnv.imports),Promise.resolve(nxtPromise).then(resolvedVal=>{resolves.push({key:v.key,value:resolvedVal}),++resolvedCount===resolveRequests.length&&Q.$functionExist(onProceed)&&onProceed(resolves)},err=>{Q.$functionExist(onResolveError)&&onResolveError(err,v)})}catch(err){Q.$functionExist(onCallPromiseError)&&onCallPromiseError(err,v)}},3e3,err=>{Q.$functionExist(onTimeoutError)&&onTimeoutError(err,v)})})}})}__$require__(__$$requires$$__,["function:awr.registerClass","object:awr.registryManager","object:awr.eventManager","class:ResolveErrorHandler@AwrRoute"]),__$loadErrors__("$$route@kernel"),__callModuleMainFn__($main,__$$requires$$__)})}(),function(){var __$$requires$$__=[];__pushToBootQueue__(function(){let awr=window.awr||{};function $main(){let Q=this,stateFragment=$import("class:StateFragment@commons@AwrRoute");$export("class:StateWatcher@AwrRoute",class{constructor(utils){this.utils=utils}listen(routeManager){document.addEventListener("mouseover",function(){awr.innerDocHover=!0}),document.addEventListener("mouseleave",function(){awr.innerDocHover=!1}),window.addEventListener("popstate",function(event){event.preventDefault(),awr.innerDocHover},!1),routeManager.interval&&clearInterval(routeManager.interval),routeManager.interval=setInterval(function({routeManager:routeManager,utils:utils,current:current}){return function(){let fragment=stateFragment.getFragment({mode:routeManager.mode,prefix:routeManager.prefix});utils.isBrokenSPARootCall(routeManager)?routeManager.$goDefault():current!==fragment&&(current=fragment,!0===routeManager.reloadOnChange?routeManager.$applyState(current):routeManager.reloadOnChange=!0)}}({routeManager:routeManager,utils:this.utils,current:stateFragment.getFragment({mode:routeManager.mode,prefix:routeManager.prefix})}),50)}maintainReloadSettings(routeManager){let _self=this;Q.$booleanFalse(routeManager.reloadOnChange)?setTimeout(function(){Q.$numberExist(routeManager.resetTime)&&routeManager.resetTime<=(new Date).getTime()?_self.maintainReloadSettings(routeManager):(routeManager.resetTime=0,routeManager.reloadOnChange=!0)},50):routeManager.resetTime=0}})}__$require__(__$$requires$$__,["function:awr.registerClass","class:StateFragment@commons@AwrRoute"]),__$loadErrors__("$$route@kernel"),__callModuleMainFn__($main,__$$requires$$__)})}(),function(){var __$$requires$$__=[],__$$errors$$__=null;function $errorOut(errName,replaces){return __$errorOut__(__$$errors$$__,errName,replaces)}__pushToBootQueue__(function(){__$require__(__$$requires$$__,["object:awr.registryManager","object:awr.eventManager","object:awr.routeGlobals","class:RouteUtils","class:RouteEvents","class:RouteMainBuilder","class:RouteStateApplier","class:StateLinkBuilder","class:BestRouteMatch","class:AuthorizerBuilder","class:StateWatcher@AwrRoute","class:AuthSession@auth@AwrRoute","class:AuthNext@auth@AwrRoute","class:AuthTasks@auth@AwrRoute","class:StateFragment@commons@AwrRoute"]);let awr=window.awr||{};function $main(){let routeManager,Q=this,stats=awr.basicStats=Q.$objectExists(awr.basicStats)?awr.basicStats:{},eventManager=$import("object:awr.eventManager"),authNext=$import("class:AuthNext@auth@AwrRoute"),routesWaitingForRegister=Q.$asCollection([]),currentlyAppliedState=null,globals=$import("object:awr.routeGlobals"),authSession=$import("class:AuthSession@auth@AwrRoute"),authTasks=$import("class:AuthTasks@auth@AwrRoute"),stateFragment=$import("class:StateFragment@commons@AwrRoute"),utils=Q.$getClassInstance("RouteUtils",[]),routeEvents=Q.$getClassInstance("RouteEvents",[eventManager]),routeMainBuilder=Q.$getClassInstance("RouteMainBuilder",[Q.$app(),globals,routeEvents]),routeStateApplier=Q.$getClassInstance("RouteStateApplier",[routeEvents]),stateLinkBuilder=Q.$getClassInstance("StateLinkBuilder",[]),bestRouteMatch=Q.$getClassInstance("BestRouteMatch",[]),authorizerBuilder=Q.$getClassInstance("AuthorizerBuilder",[routeEvents,utils]),stateWatcher=Q.$getClassInstance("StateWatcher@AwrRoute",[utils]),$on=eventManager.$on,$off=eventManager.$off,registry=(eventManager.$emit,$import("object:registryManager")),regName=globals.regName,authorizeRegName=globals.authorizeRegName,authObjectSuffix=globals.authObjectSuffix,cancelRequests=[],history=window.history;function RouteManager(){this.mode="hash",this.prefix="",this.UILoader=null,this.reloadOnChange=!0,this.goLock=Q.$execControl.initLock(),this.goLock.setDuration(50),this.goLock.allowTwice=!0,this.applyMainLock=Q.$execControl.initLock(),this.applyMainLock.setDuration(50),this.flags={incomingTokenExchangeEnabled:!1},this.onNewRouteCreated=null,this.bootRedirectFragment=null}function proceedWithGo(router,name,state,reload){state=Q.$objectExist(state)?state:{},reload=!Q.$booleanFalse(reload)||reload,Q.$execControl.execWithLock(router.goLock,()=>{router.$routeExist(name)&&(state.name=name,state.link=router.$buildStateLink(state.name,state.params||{},state.attrs||{}),utils.pushStateToHistory(state),Q.$booleanTrue(reload)?router.$applyState():(router.reloadOnChange=!1,router.resetTime=new Date((new Date).getTime()+1e3),stateWatcher.maintainReloadSettings(router)))})}function proceedWithReloadCurrentState(router){let current=router.$getCurrentState();Q.$objectExist(current)?router.$go(current.name,current,!0):router.$goDefault()}registry.$create(regName),registry.$create(authorizeRegName),RouteManager.prototype.$getAppNextLink=function(){return authNext.getAppNextLink({router:this})},RouteManager.prototype.$makeAuthNext=function({connectionConfig:connectionConfig,appNext:appNext}){return authNext.makeAuthNext({connectionConfig:connectionConfig,appNext:appNext,router:this})},RouteManager.prototype.$authNextEncoder=authNext.authNextEncoder,RouteManager.prototype.$isAuthBusy=function(){return authSession.isAuthSessionBusy()},RouteManager.prototype.$enableAuthSession=function({connectionConfig:connectionConfig,onEnterBusyMode:onEnterBusyMode,onExitBusyMode:onExitBusyMode}){Q.$booleanTrue(this.flags.incomingTokenExchangeEnabled)||this.$enableIncomingTokenExchange(),authTasks.initIncomingTokenWatch({router:this,connectionConfig:connectionConfig,onEnterBusyMode:onEnterBusyMode,onExitBusyMode:onExitBusyMode,base64:$import("service:uriBase64")})},RouteManager.prototype.$destroyAuthSession=function({connectionConfig:connectionConfig,onEnterBusyMode:onEnterBusyMode,onExitBusyMode:onExitBusyMode}){authSession.destroy({connectionConfig:connectionConfig,onEnterBusyMode:onEnterBusyMode,onExitBusyMode:onExitBusyMode})},RouteManager.prototype.$enableIncomingTokenExchange=function(){this.flags.incomingTokenExchangeEnabled=!0;let all=registry.$getAll(regName,(nxtRoute,nxtName)=>!nxtRoute.isInRoute);Q.$each(all,nxt=>{this.$route(authTasks.cloneConfigAsInRoute(nxt))})},RouteManager.prototype.$isRouterReady=function(){return this.$routeExist("default")&&Q.$isEmpty(routesWaitingForRegister)},RouteManager.prototype.$route=function(cnf){if(cnf=cnf||{},routesWaitingForRegister=routesWaitingForRegister.$reduce(nxt=>nxt!==cnf.name),cnf&&Q.$stringExists(cnf.name)&&"default"===cnf.name.toLowerCase()&&(!Q.$stringExists(cnf.link)||cnf.link.startsWith("?"))&&(cnf.link=Q.$stringExists(cnf.link)?`/${cnf.link}`:"/"),!utils.isRouteValid(cnf)||!utils.isLinkValid(cnf.link))return $errorOut("badRouteConfig",[{key:"routeName",value:cnf&&cnf.name?cnf.name:"undefined"},{key:"errMsg",value:utils.isRouteValid(cnf)?" Bad route link":"Bad config"}]),this;if(this.$routeExist(cnf.name))return $errorOut("routeAlreadyExist",[{key:"routeName",value:cnf.name},{key:"errMsg",value:`Registry already includes a route with name [${cnf.name}]`}]),this;if(Q.$functionExist(this.onNewRouteCreated))try{this.onNewRouteCreated(cnf)}catch(e){$errorOut("badOnNewRouteCallback",[{key:"errMsg",value:e}])}let abstractPathList=utils.listAllAbstractPaths(registry.$getAll(regName)),routeCnf=utils.buildRouteConfig(cnf);return routeCnf.main=routeMainBuilder.buildMainFunction(routeCnf),Q.$setContainsString(abstractPathList,utils.convertPathToAbstract(routeCnf.path))?$errorOut("routeAlreadyExist",[{key:"routeName",value:routeCnf.name},{key:"errMsg",value:`Registry already includes an abstract format of /${routeCnf.path}?**`}]):(registry.$add(regName,routeCnf.name,routeCnf),!cnf.isInRoute&&Q.$booleanTrue(this.flags.incomingTokenExchangeEnabled)&&this.$route(authTasks.cloneConfigAsInRoute(cnf))),this},RouteManager.prototype.$routeExist=function(name){return Q.$stringExist(name)&&registry.$inRegistry(regName,name)},RouteManager.prototype.$getRoute=function(name){return registry.$get(regName,name)},RouteManager.prototype.$go=function(name,state,reload){let router=this;name=Q.$stringExist(name)?name:"default",router.$routeExist(name)?proceedWithGo(router,name,state,reload):Q.$waitForComps([`route:${name}`],3e3,!1,!0).then(_=>{proceedWithGo(router,name,state,reload)},err=>{console.error(err)})},RouteManager.prototype.$goDefault=function(opts){this.$go("default",opts,!0)},RouteManager.prototype.$goBack=function(opts){history.back()},RouteManager.prototype.$goForward=function(opts){history.forward()},RouteManager.prototype.$getBackState=function(){return JSON.parse(sessionStorage.getItem("awr-back-state"))||null},RouteManager.prototype.$getCurrentState=function(){let fragment=stateFragment.getFragment({mode:this.mode,prefix:this.prefix}),state={link:fragment},path_fragment=fragment.split("?")[0];path_fragment=path_fragment.endsWith("/")?path_fragment:path_fragment+"/";let link,foundGroup=registry.$getAll(regName,function(nxtRoute,nxtName){return path_fragment.startsWith(nxtRoute.root)}),match=Q.$collect(foundGroup,function(collected){return collected=collected||foundGroup[0],collected=Q.$stringExist(this.root)&&this.root.length>collected.root.length?this:collected});return match=Q.$objectExist(match)?match:{name:"default",link:null,isDefault:!0},state.params=Q.$stringExist(match.link)?stateFragment.extractParamsFromFragment(fragment,match.link):{},state.attrs=stateFragment.extractAttributesFromFragment(fragment,match.attrKeys),state.name=match.name,state.isDefault=Q.$booleanTrue(match.isDefault),link=this.$buildStateLink(state.name,state.params,state.attrs),state.link=Q.$stringExists(link)&&link.startsWith("#")?link.substring(1):Q.$stringExists(link)?link:"",state||{}},RouteManager.prototype.$pushStateLink=function(fragment,force){let reload,currentState=this.$getCurrentState(),state=stateLinkBuilder.convertFragmentToState({fragment:fragment,mode:this.mode,prefix:this.prefix,routes:registry.$getAll(regName),bestRouteMatch:bestRouteMatch,utils:utils}),link=stateLinkBuilder.getCleanStateLink(fragment,this.mode,utils);Q.$objectExist(state)?(reload=!Q.$stringEqual(currentState.link,state.link)||Q.$booleanTrue(force),this.$go(state.name,state,reload)):Q.$stringExist(link)&&Q.$booleanTrue(force)&&utils.pushStateToHistory({name:"$pushed-state-link",link:link})},RouteManager.prototype.$buildStateLink=function(name,params,attrs){return stateLinkBuilder.buildStateLink({routeManager:this,name:name,params:params,attrs:attrs})},RouteManager.prototype.$onRouteEvent=function(eventName,fn){Q.$stringExist(eventName)&&!eventName.startsWith("router:")&&(eventName=`router:${eventName}`),$off(eventName,fn),$on(eventName,fn)},RouteManager.prototype.$config=function({mode:mode="hash",prefix:prefix="",onNewRouteCreated:onNewRouteCreated=null,bootRedirectFragment:bootRedirectFragment="",UILoader:UILoader=null}){this.mode=Q.$stringExist(mode)&&Q.$setContainsString(["history","hash"],mode)?mode:"hash",this.UILoader=Q.$functionExist(UILoader)?UILoader:this.UILoader,this.prefix=Q.$stringExist(prefix)?prefix:"",this.onNewRouteCreated=Q.$functionExist(onNewRouteCreated)?onNewRouteCreated:this.onNewRouteCreated,this.bootRedirectFragment=Q.$stringExist(bootRedirectFragment)?bootRedirectFragment:null},RouteManager.prototype.$getFragment=function({mode:mode,prefix:prefix}={}){return stateFragment.getFragment({mode:Q.$stringExist(mode)?mode:this.mode,prefix:Q.$stringExist(prefix)?prefix:this.prefix})},RouteManager.prototype.$reloadCurrentState=function(){let router=this;if(router.$isRouterReady())return proceedWithReloadCurrentState(router);let waitInterval=setInterval(_=>{if(router.$isRouterReady())return clearInterval(waitInterval),proceedWithReloadCurrentState(router)},50)},RouteManager.prototype.$applyState=function(f){let fallback,originalFragment,route,hasAnyMatch,link,routeFound,manager=this,currentState=this.$getCurrentState(),fragment=Q.$stringExist(f)?f:stateFragment.getFragment({mode:this.mode,prefix:this.prefix});originalFragment=fragment,fragment=fragment.endsWith("?")?fragment.substring(0,fragment.length-1):fragment,route=bestRouteMatch.getBestMatch({fragment:fragment,routes:registry.$getAll(regName)}),hasAnyMatch=bestRouteMatch.hasAnyMatch({fragment:fragment,routes:registry.$getAll(regName)}),Q.$objectExist(route)?(fragment=this.$buildStateLink(route.name,stateFragment.extractParamsFromFragment(originalFragment,route.link),stateFragment.getAttributes(originalFragment,route.attrKeys)),utils.pushStateToHistory({name:route.name,link:fragment}),link=fragment,routeFound=!0,setTimeout(_=>{currentlyAppliedState=manager.$getCurrentState()},100)):(routeFound=!1,fallback=Q.$collect(registry.$getAll(regName),(collected,nxt)=>collected=nxt.name===currentState.name?nxt:collected),manager.$go(currentState.name,currentState,!1),route=fallback,link=currentState&&currentState.link?currentState.link:fallback.root+"?",hasAnyMatch=!1),routeStateApplier.applyState({routeManager:this,route:route,hasAnyMatch:hasAnyMatch,link:link,params:routeFound?stateFragment.extractParamsFromFragment(originalFragment,route.link):currentState.params,attrs:routeFound?stateFragment.getAttributes(originalFragment,route.attrKeys):currentState.attrs,isDefault:Q.$booleanTrue(route.isDefault),cancelRequests:cancelRequests,currentlyAppliedState:currentlyAppliedState})},RouteManager.prototype.$laterInSameState=function(fn,time){if(time=Q.$numberExist(time)&&time>0?time:250,!Q.$functionExist(fn))return;let manager=this,initialState=this.$getFragment({mode:this.mode});setTimeout(function(){Q.$qTry(function(){Q.$stringEqual(initialState,manager.$getFragment({mode:manager.mode}))&&fn()},function(err){$errorOut("badLaterCallback",[{key:"errMsg",value:err}])})},time)},RouteManager.prototype.$watch=function(){let redirectLn;return Q.$booleanTrue(awr.isTestSession)?(Q.$waitForComps(["object:awr.specManager"]).then(_=>{$import("object:awr.specManager").$startSession()},err=>{console.error(err)}),this):(Q.$stringExist(this.bootRedirectFragment)&&(redirectLn=stateLinkBuilder.getCleanPushLink(this.bootRedirectFragment,this.mode,utils,this.prefix),this.$pushStateLink(redirectLn,!0),this.bootRedirectFragment=null),stateWatcher.listen(this),this)},RouteManager.prototype.$authorize=function({routes:routes=[],authorizer:authorizer=null,onReject:onReject=null}){let requires=Q.$arrayNotEmpty(authorizer)?Q.$reduce(authorizer,function(){return Q.$stringExist(this.value)||Q.$objectExist(this)}):[],rawAuthFn=Q.$functionExist(authorizer)?authorizer:Q.$arrayNotEmpty(authorizer)&&Q.$functionExist(authorizer[authorizer.length-1])?authorizer[authorizer.length-1]:null;return Q.$arrayNotEmpty(routes)&&Q.$functionExist(rawAuthFn)?(requires.push(authorizerBuilder.buildAuthorizerFunction({routeManager:this,rawAuthFn:rawAuthFn,rawOnReject:onReject})),Q.$forEachIndex(routes,(n,i)=>{registry.$add(authorizeRegName,`${n}${authObjectSuffix}`,{authorizer:requires,onReject:onReject})}),this):this},RouteManager.prototype.$exportRoute=function(routeName,routeObj,opts){let requires,cleanName;if(!Q.$stringExist(routeName))return!1;Q.$arrayExist(routeObj)&&(requires=Q.$reduce(routeObj,nxt=>Q.$stringExist(nxt))),cleanName=(cleanName=Q.$toDashCase(routeName)).substring(0,1).toLowerCase()+cleanName.substring(1),routesWaitingForRegister.push(cleanName),Q.$commonWaitAndProceedOperation(requires,()=>{!function(routeName,routeObj,opts){let ux3Context,item;Q.$arrayExist(routeObj)&&(item=Q.$reduce(routeObj,nxt=>Q.$functionExist(nxt)).$first());Q.$functionExist(item)&&Q.$isUX3Type(item)?(ux3Context=Q.$buildUX3TypeInstance(routeObj,Q.$toDashCase(routeName)),(routeObj=ux3Context.item).name=ux3Context.name,routeObj.requires=ux3Context.requires,Q.$exist(ux3Context.error)&&$errorOut("badUX3TypeRouteConstructor",[{key:"routeName",value:routeName},{key:"errMsg",value:ux3Context.error}])):routeObj.name=routeName;if(!Q.$objectExist(routeObj))return routesWaitingForRegister=routesWaitingForRegister.$reduce(nxt=>nxt!==routeName),!1;routeManager.$route(routeObj)}(cleanName,routeObj)},3e3,`New route < ${routeName} > cannot be exported`)},routeManager=new RouteManager,awr.routeManager=routeManager,$export("routeManager",routeManager,{takeEasy:!1}),stats.routerRegisTime=(new Date).getTime()}__$$errors$$__=__$loadErrors__("$$route@kernel"),__callModuleMainFn__($main,__$$requires$$__)})}(),function(){var __$$requires$$__=[];__pushToBootQueue__(function(){window.awr;$export("object:awr.routeGlobals",{regName:"RouteObject",authorizeRegName:"AuthorizedRouteObject",authObjectSuffix:"@authorizedRoute"}),__callModuleMainFn__("function"==typeof $main?$main:null,__$$requires$$__)})}(),function(){var __$$requires$$__=[],__$$errors$$__=null;function $errorOut(errName,replaces){return __$errorOut__(__$$errors$$__,errName,replaces)}__pushToBootQueue__(function(){let awr=window.awr||{};function $main(){let Q=this,applyHandler=($import("window:jQuery"),$import("function:awr.scopeDomFunctions.applyHandler")),stats=awr.basicStats=Q.$objectExists(awr.basicStats)?awr.basicStats:{},registry=$import("object:awr.registryManager"),ScopeAPI=$import("class:ScopeAPI@api@AwrScope"),scopeManager=null;function AWRUIScopeManager(){}registry.$create("ScopeObject"),Q.$extendQInterface(AWRUIScopeManager),AWRUIScopeManager.prototype.$applyHandler=function(scope,name,args,event){return applyHandler({scopeManager:this,scope:scope,name:name,args:args,event:event})},AWRUIScopeManager.prototype.$isAWRScopeInstance=function(scope){return Q.$objectExist(scope)&&Q.$objectInstanceOf(scope,ScopeAPI)},AWRUIScopeManager.prototype.$getProperty=function(scopeId,propName){let scope=this.$isAWRScopeInstance(scopeId)?scopeId:registry.$get("ScopeObject",scopeId);return this.$isAWRScopeInstance(scope)?Q.$findInScope(scope,propName):null},AWRUIScopeManager.prototype.$getScopeContext=function(scope){return this.$isAWRScopeInstance(scope)?Q.$mapObject(scope,function(propName){let actualVal=Q.$isQPrimitiveVal(this)?Q.$getQPrimitiveVal(this):this;return propName!==scope.$getParamsKey()?actualVal:void 0}):($errorOut("badScopeObject"),null)},AWRUIScopeManager.prototype.$defineScopeType=function(typeName,type){if(!Q.$stringExist(typeName)||!Q.$objectExist(type))return!1;this.$getSuperScope().$defineSubtype(typeName,type)},AWRUIScopeManager.prototype.$getSuperScope=function(){return this.$getScope(ScopeAPI.superScopeId)},AWRUIScopeManager.prototype.$getScope=function(scopeId){if(!Q.$stringExist(scopeId))return null;let scope=registry.$get("ScopeObject",scopeId);return Q.$objectExist(scope)&&this.$isAWRScopeInstance(scope)?scope:null},AWRUIScopeManager.prototype.$createScope=function(data,parent){let scope,scopeId=this.$generateUniqueId();return scope=this.$registerNewScope(scopeId),this.$isAWRScopeInstance(scope)?(this.$isAWRScopeInstance(parent)&&scope.$setParent(parent),Q.$each(data,(val,key)=>{Q.$setContainsString(["$$AWR_SCOPE_ID$$","$$isIsolated","$$parent"],key)?$errorOut("forbiddenScopePropertyName"):scope[key]=val}),this.$flush(),scope):($errorOut("fatalInScopeInit"),null)},AWRUIScopeManager.prototype.$registerNewScope=function(scopeId){return!Q.$stringExist(scopeId)||Q.$setContainsString(["__NULL__","__NULL__@AWRScope"],scopeId)?($errorOut("scopeRegBadIDForReg"),null):registry.$inRegistry("ScopeObject",scopeId)?($errorOut("scopeAlreadyInReg"),null):(scopeId=Q.$appendAWRNameSpace(scopeId,"Scope"),new ScopeAPI(scopeId,this))},AWRUIScopeManager.prototype.$registerReadyScope=function(scope,initAsSuperScope=!1){if(!this.$isAWRScopeInstance(scope))return!1;let superScope=registry.$get("ScopeObject","__SUPER__@AWRScope");return initAsSuperScope&&!Q.$objectExist(superScope)?(registry.$add("ScopeObject",ScopeAPI.superScopeId,scope),$export("object:awr.superScope",registry.$get("ScopeObject",ScopeAPI.superScopeId),{takeEasy:!1}),!0):(registry.$add("ScopeObject",scope.$getScopeId(),scope),scope.$setParent(superScope),!0)},AWRUIScopeManager.prototype.$createIsolatedScope=function(data,parent){let scope=this.$createScope(parent,data);return this.$isAWRScopeInstance(scope)?(scope.$isolate(),scope):($errorOut("fatalInScopeInit"),null)},AWRUIScopeManager.prototype.$generateUniqueId=function(){let uniqueId="__NULL__@AWRScope",generateOne=()=>{let oneId="SCP-"+(new Date).getTime();return Q.$objectExist(awr.serial)&&Q.$objectExist(awr.serial.basicPrime)&&(oneId="SCP-"+Q.$last(awr.serial.basicPrime.generateOne().split("-"))),Q.$appendAWRNameSpace(oneId,"Scope")},condition=nxtId=>registry.$inRegistry("ScopeObject",nxtId)||registry.$isNull("ScopeObject",nxtId)||Q.$stringEqual(nxtId,"__NULL__@AWRScope")||Q.$stringEqual(nxtId,"__NULL__");for(;condition(uniqueId);)uniqueId=generateOne();return uniqueId},AWRUIScopeManager.prototype.$isReady=function(scope){return scope=Q.$stringExist(scope)?this.$getScope(scope):scope,!(!Q.$exist(scope)||!this.$isAWRScopeInstance(scope))&&scope.$isReady()},AWRUIScopeManager.prototype.$isPresent=function(scope){let $=$import("window:jQuery");return scope=Q.$stringExist(scope)?this.$getScope(scope):scope,!(!Q.$exist(scope)||!this.$isAWRScopeInstance(scope))&&$('[awr-scope-id="'+scope.$getScopeId()+'"]').length>0},AWRUIScopeManager.prototype.$recompileScope=function(scope){Q.$arrayExist(scope)?Q.$each(scope,(n,i)=>{let nxt=Q.$isQPrimitiveVal(n)?Q.$getQPrimitiveVal(n):n;this.$recompileScope(nxt)}):(scope=Q.$stringExist(scope)?this.$getScope(scope):scope,Q.$exist(scope)&&this.$isAWRScopeInstance(scope)&&this.$isPresent(scope)&&scope.$recompile())},AWRUIScopeManager.prototype.$removeScope=function(scope){let scopeId,manager=this,$=$import("window:jQuery");return scope=Q.$stringExist(scope)?this.$getScope(scope):scope,!(!this.$isAWRScopeInstance(scope)||!registry.$inRegistry("ScopeObject",scope.$getScopeId())||Q.$setContainsString(["__NULL__@AWRScope","__SUPER__@AWRScope"],scope.$getScopeId()))&&(scopeId=scope.$getScopeId(),$(scope.$getDom()).find("[awr-scope-id]").each((idx,elem)=>{let nxtId=$(elem).attr("awr-scope-id"),nxtScope=manager.$getScope(nxtId);manager.$removeScope(nxtScope)}),scope.$clean(),registry.$remove("ScopeObject",scopeId),$(`[awr-scope-id='${scopeId}']`).remove(),!0)},AWRUIScopeManager.prototype.$flush=function(){registry.$flush("ScopeObject",(scope,scopeId)=>{let isWaitingLong=Q.$booleanFalse(scope.$isReady())&&scope.$getParams().$$readyWaitTime>1e4,isGone=!(this.$isPresent(scope)||Q.$stringEqual("__SUPER__@AWRScope",scopeId));return!!(isWaitingLong||Q.$booleanTrue(scope.$isReady())&&isGone)&&(scope.$clean(),!0)})},AWRUIScopeManager.prototype.$isFlushed=function(scope){if(!this.$isAWRScopeInstance(scope))return!1;!this.$isPresent(scope)&&Q.$objectExist(this.$getScope(scope))&&this.$flush();let cond1=Q.$objectExist(scope)&&Q.$booleanTrue(scope.$isFlushed()),cond2=!(this.$isPresent(scope)&&Q.$objectExist(this.$getScope(scope)));return cond1||cond2},AWRUIScopeManager.prototype.$getRegistrySize=function(){return registry.$size("ScopeObject")},AWRUIScopeManager.prototype.$getReadySize=function(){return Q.$reduce(registry.$getAll("ScopeObject"),nxt=>Q.$booleanTrue(nxt.$isReady())).length},AWRUIScopeManager.prototype.$getPendingSize=function(){return Q.$reduce(registry.$getAll("ScopeObject"),nxt=>!Q.$booleanTrue(nxt.$isReady())).length},scopeManager=new AWRUIScopeManager,awr.scopeManager=scopeManager,Q.$defineConstForRegistry(awr.$$core,"$$scope",scopeManager,!0),$export("object:awr.scopeManager",scopeManager,{takeEasy:!1}),stats.scopeManagerRegisTime=(new Date).getTime(),Q.$extendImportType("scope",function(scopeId){return scopeManager.$getScope.call(scopeManager,scopeId)}),Q.$extendExportType("scope",function(compName,confObj,opts){return confObj=confObj||{},opts=opts||{},scopeManager.$createScope.apply(scopeManager,[confObj.data,confObj.parent])}),Q.$extendAvailableType("scope",function(scopeId){return scopeManager.$isPresent.call(scopeManager,scopeId)})}__$require__(__$$requires$$__,["object:awr.$$core","function:awr.registerClass","function:awr.scopeDomFunctions.applyHandler","class:ScopeAPI@api@AwrScope","object:awr.registryManager"]),__$$errors$$__=__$loadErrors__("$$scope@kernel"),__callModuleMainFn__($main,__$$requires$$__)})}(),function(){var __$$requires$$__=[];__pushToBootQueue__(function(){let awr=window.awr||{};awr.Q;function $main(){let specManager,Q=this,$=$import("window:jQuery"),config={ui:"bdd"};const registry=$import("object:registryManager");function SpecManager(){}function getCleanLabel(label){return Q.$stringExist(label)?label.toLowerCase().trim():"none"}function setGroupTitle(name,manager){let container=$(".awr-test-session").find("#groupHeader"),label=name;"all"===name&&(label="all available tests"),$(container).html(`\n            <h3>\n                <span class="fas fa-hashtag"></span>\n                <span>${Q.$firstLetterToUpperCase(label)}</span>\n           </h3>`),$(container).append('\n              <div class="group-actions">\n                \n                <button id="runGroup"><span class="fas fa-play"></span>&nbsp;Run all tests in the group</button>   \n                \n              </div>\n        \n        '),$(container).find("#runGroup").on("click",()=>manager.$runByGroup(name))}SpecManager.prototype.$startSession=function(){$(".awr-test-session .content").addClass("busy"),Q.$commonWaitAndProceedOperation(["boolean:awr.specData.allSpecReady","window:mocha"],()=>{window.mocha.setup(config),$(".awr-test-session .content").removeClass("busy"),this.$runTests(),this.$updateCategories()},2e4,"AwrSpecManager: [ TIMEOUT ]. Some of loaded spec did not register properly. Aborting. \n\t+ Note: Make sure that the test runner [ currently set as window.mocha ] is loaded ")},SpecManager.prototype.$config=function(cnf={}){Q.$each(cnf,(value,key)=>{config[key]=value})},SpecManager.prototype.$updateCategories=function(){let container=$(".awr-test-session #sideBar #tGroups"),hasActiveGrp=!1;var group;this.$getGroups().$prepend({name:"all"}),$(container).html(""),this.$getGroups().$unique("name").$each(nxt=>{let li=(group=nxt,$(`<li><span class="fas fa-arrow-right"></span>&nbsp;\n                    <span>${Q.$firstLetterToUpperCase(group.name)}</span>\n                    </li>`));nxt.isActive&&(hasActiveGrp=!0,setGroupTitle(nxt.name,this),$(li).addClass("active")),"all"===nxt.name&&$(li).attr("id","allGroups"),$(li).on("click",()=>this.$runByGroup(nxt.name)),$(container).append(li)}),hasActiveGrp||(setGroupTitle("all",this),$(container).find("li#allGroups").addClass("active"))},SpecManager.prototype.$getData=function(){return awr.specData=Q.$objectExist(awr.specData)?awr.specData:{}},SpecManager.prototype.$getGroups=function(){return this.$getData().groups=Q.$arrayExist(this.$getData().groups)?this.$getData().groups:Q.$asCollection([])},SpecManager.prototype.$getActiveGroup=function(){let grp=sessionStorage.getItem("active-group@awr_test");return Q.$stringExist(grp)&&"none"!==grp?grp:"all"},SpecManager.prototype.$getActiveDesc=function(){let desc=sessionStorage.getItem("active-desc@awr_test");return Q.$stringExist(desc)&&"none"!==desc?desc:"all"},SpecManager.prototype.$runByGroup=function(group){Q.$stringExist(group)&&(sessionStorage.setItem("active-group@awr_test",group.toLowerCase().trim()),window.location="/")},SpecManager.prototype.$runByDesc=function(desc){Q.$stringExist(desc)&&(sessionStorage.setItem("active-desc@awr_test",desc.toLowerCase().trim()),window.location="/")},SpecManager.prototype.$runTests=function(){let specData=this.$getData(),groups=this.$getGroups();registry.$getAll("SpecObject").$each(nxt=>{let activeGrp=this.$getActiveGroup(),activeDesc=this.$getActiveDesc(),nxtGrp=getCleanLabel(nxt.group),nxtDesc=getCleanLabel(nxt.description);groups.push({name:nxt.group,isActive:activeGrp===nxtGrp}),"all"===activeGrp||activeGrp===nxtGrp?"all"!==activeDesc&&activeDesc!==nxtDesc||describe(Q.$stringExist(nxt.description)?nxt.description:nxt.name,()=>{nxt.define.call(nxt)}):specData.activeGroup="all"}),mocha.globals(["$","chai","awr","LiveReload"]),mocha.checkLeaks(),mocha.run()},specManager=new SpecManager,awr.specManager=SpecManager,this.$installInAWRGlobal("specManager","specManager",{specManager:specManager},!0)}__$require__(__$$requires$$__,["object:awr.registryManager"]),__$loadErrors__("$$specManager@kernel"),__callModuleMainFn__($main,__$$requires$$__)})}(),function(){var __$$requires$$__=[];__pushToBootQueue__(function(){let awr=window.awr||{};function $main(){let BasicPrime=$import("class:BasicPrime@bp@AwrSerial");awr.serial=new class{constructor(){this.bp=new BasicPrime}get basicPrime(){return this.bp}},$export("object:awr.serial",awr.serial,{takeEasy:!1})}__$require__(__$$requires$$__,["object:awr.registryManager","class:BasicPrime@bp@AwrSerial"]),__$loadErrors__("$$serial@kernel"),__callModuleMainFn__($main,__$$requires$$__)})}(),function(){var __$$requires$$__=[];__pushToBootQueue__(function(){let awr=window.awr||{};awr.bootQueue;function $main(){awr.$$core=awr.$$core||{};let Q=this;$import("window:jQuery");$export("class:TemplateUtils@AwrTemplate",class{constructor(){}static getCleanPath(path){let cleanPath;return Q.$stringExist(path)?((cleanPath=(cleanPath=path.replace(".hbs","")).replace(/\//g,".")).startsWith("awr.")&&(cleanPath=cleanPath.replace("awr.","")),cleanPath.startsWith("core.templates.")||(cleanPath="core.templates."+cleanPath),cleanPath=cleanPath.startsWith("/")||cleanPath.startsWith(".")?cleanPath.substring(1):cleanPath):null}static isPathAvailable(manager,pathArr){if(!Q.$arrayNotEmpty(pathArr))return!1;let loopResult=!0,pathParts=pathArr[0],directPathExist=Q.$functionExist(manager.$getTemplate(pathArr.join("/")));return!Q.$booleanTrue(directPathExist)&&!Q.$functionExist(manager.$getTemplate(pathParts))&&!Q.$functionExist(manager.$getTemplate(pathParts+".hbs"))&&(Q.$forEachIndex(pathArr,function(n,i){let nxtPart=Q.$isQPrimitiveVal(n)?Q.$getQPrimitiveVal(n):n;return pathParts+="/"+nxtPart,Q.$stringExist(nxtPart)?Q.$functionExist(manager.$getTemplate(pathParts))||Q.$functionExist(manager.$getTemplate(pathParts+".hbs"))?(loopResult=!1,"$$$break$$$"):void 0:(loopResult=!1,"$$$break$$")}),loopResult)}static fixCorePathStr(tempPath){let tPath=Q.$stringExist(tempPath)&&tempPath.endsWith(".hbs")?tempPath.replace(".hbs",""):tempPath;return Q.$stringExist(tPath)?tPath.startsWith("assets/awrUX/module/")?"ux/"+tPath.replace("assets/awrUX/module/",""):tPath.startsWith("awr.core.templates.ux.")?"ux."+tPath.replace("awr.core.templates.",""):tPath.startsWith("awr/core/templates/ux/")?"ux/"+tPath.replace("awr/core/templates/ux/",""):tPath:""}static fixAppPathStr(tempPath){let tPath=Q.$stringExist(tempPath)&&tempPath.endsWith(".hbs")?tempPath.replace(".hbs",""):tempPath;return tPath.startsWith("awr.app.templates.")?"app."+tPath.replace("awr.app.templates.",""):tPath.startsWith("awr/app/templates/")?"app/"+tPath.replace("awr/app/templates/",""):tPath}})}__$require__(__$$requires$$__,["object:awr.$$core.$$class"]),__$loadErrors__("$$template@kernel"),__callModuleMainFn__($main,__$$requires$$__)})}(),function(){var __$$requires$$__=[],__$$errors$$__=null;function $errorOut(errName,replaces){return __$errorOut__(__$$errors$$__,errName,replaces)}__pushToBootQueue__(function(){let awr=window.awr||{};awr.bootQueue;function $main(){let coreTemplate,appTemplate,Q=this,$=$import("window:jQuery"),utils=$import("class:TemplateUtils@AwrTemplate"),scopeManager=$import("object:awr.scopeManager");function AWRUITemplate(base){this.$isAppTemp=Q.$stringExist(base)&&Q.$stringEqual(base,"app")}awr.$$core=Q.$objectExists(awr.$$core)?awr.$$core:{},Handlebars.registerHelper("raw-helper",function(options){return options.fn()}),Q.$extendQInterface(AWRUITemplate),AWRUITemplate.prototype.$registerTemplate=function(path,fn){let cleanPath=utils.getCleanPath(path);return Q.$stringExist(cleanPath)&&Q.$functionExist(fn)?Q.$functionExist(this.$getTemplate(cleanPath))||!utils.isPathAvailable(this,cleanPath.split("."))?($errorOut("badRegisterPath"),!1):($export(cleanPath,fn),!!Q.$functionExist(this.$getTemplate(cleanPath.replace("core.templates.","")))||($errorOut("failedToRegisterPath"),!1)):($errorOut("badRegisterArgs"),!1)},AWRUITemplate.prototype.$isPathUsed=function(path){let cleanPath=utils.getCleanPath(path);return Q.$stringExist(cleanPath)&&Q.$booleanFalse(utils.isPathAvailable(this,cleanPath.split(".")))},AWRUITemplate.prototype.$getTemplate=function(path){let cleanPath=utils.getCleanPath(path);return Q.$stringExist(cleanPath)?(cleanPath=cleanPath.replace("core.templates.",""),Q.$getByPath(this.$tempBase(),cleanPath)):null},AWRUITemplate.prototype.$tempBase=function(){return Q.$objectExist(awr)&&Q.$objectExist(awr.core)?awr.core.templates:{}},AWRUITemplate.prototype.$prepare=function(tempPath,scope){let temp,errorType,cleanPath=tempPath,base=this.$tempBase();Q.$stringExist(cleanPath)&&(cleanPath.startsWith("core.templates.")&&(cleanPath=cleanPath.replace("core.templates.","")),cleanPath.startsWith("core/templates/")&&(cleanPath=cleanPath.replace("core/templates/",""))),temp=Q.$booleanTrue(this.$isAppTemp)?Q.$getByPath(base,utils.fixAppPathStr(cleanPath)):Q.$getByPath(base,utils.fixCorePathStr(cleanPath));let isValidCall=Q.$objectExist(base)&&Q.$functionExist(temp)&&scopeManager.$isAWRScopeInstance(scope),context=scopeManager.$getScopeContext(scope);return isValidCall?$(temp(context)):($errorOut(errorType=Q.$objectExist(base)?Q.$functionExist(temp)?"invalidTempContext":"invalidTemplate":"invalidTempBase"),null)},AWRUITemplate.prototype.$compile=function(preparedHtml,scope,nodeName,domAttrs){let domManager=$import("object:awr.$$scopeDom"),compileErrorName=scopeManager.$isAWRScopeInstance(scope)?Q.$stringExist(preparedHtml)?"noPreparedStringCompileTemp":null:"noScopeInCompileTemp";return Q.$stringExist(compileErrorName)?($errorOut(compileErrorName),null):domManager.$compileDom(scope,preparedHtml,nodeName,domAttrs)},coreTemplate=new AWRUITemplate("core"),appTemplate=new AWRUITemplate("app"),awr.coreTemplate=coreTemplate,awr.appTemplate=appTemplate,Q.$defineConstForRegistry(awr.$$core,"$$coreTemplate",coreTemplate,!0),Q.$defineConstForRegistry(awr.$$core,"$$appTemplate",appTemplate,!0),Q.$extendImportType("template",function(path){return coreTemplate.$getTemplate.call(coreTemplate,path)}),Q.$extendExportType("template",function(path,fn,opts){return coreTemplate.$registerTemplate.apply(coreTemplate,[path,fn])}),Q.$extendAvailableType("template",function(path){return Q.$functionExist.call(Q,coreTemplate.$getTemplate.call(coreTemplate,path))}),$export("coreTemplate",coreTemplate,{takeEasy:!1}),$export("appTemplate",appTemplate,{takeEasy:!1})}__$require__(__$$requires$$__,["function:awr.Q.$available","function:awr.Q.$export","function:awr.Q.$import","object:awr.scopeManager","class:TemplateUtils@AwrTemplate"]),__$$errors$$__=__$loadErrors__("$$template@kernel"),__callModuleMainFn__($main,__$$requires$$__)})}(),function(){var __$$requires$$__=[],__$$errors$$__=null;function $errorOut(errName,replaces){return __$errorOut__(__$$errors$$__,errName,replaces)}__pushToBootQueue__(function(){__$require__(__$$requires$$__,["object:awr.$$core.$$class","class:ScopeAPI@api@AwrScope","object:awr.scopeManager","object:awr.eventManager"]);let awr=window.awr||{};function $main(){let Q=awr.Q,$=$import("window:jQuery"),events=$import("object:awr.eventManager"),$emit=(events.$on,events.$emit),ScopeAPI=(events.$off,$import("class:ScopeAPI@api@AwrScope")),scopeManager=$import("object:awr.scopeManager");class LegacyRoutines{constructor(){}static startTheApp(ctrFn,opts,originalRootHtml){let superScope,cnf=opts||{},appContainer=Q.$findInDom("body","> div[awr-app]"),compManager=$import("object:compManager"),requires=Q.$arrayExist(opts.requires)?opts.requires:[],factory=$import("object:awr.factory"),appHtml=originalRootHtml;compManager.$removeComponent("rootComp"),$available("template:ux/root/app.hbs")||$export("template:ux/root/app.hbs",function(ctx){ctx=ctx||{};let handlebars=$import("window:Handlebars");return Q.$objectExist(handlebars)?handlebars.compile(appHtml)(ctx):appHtml}),requires.push(function({ctrFn:ctrFn,cnf:cnf}){return function(){Q.$stringExist(cnf.name)&&(this.appName=cnf.name),Q.$functionExist(ctrFn)&&ctrFn.apply(this,arguments),Q.$stringExist(this.appName)&&$("body > div[awr-app]").attr("awr-app",this.appName),$import("object:routeManager").$reloadCurrentState()}}({ctrFn:ctrFn,cnf:cnf})),factory.$removeController("$AppStartController"),superScope=new ScopeAPI("SUPER_INIT",scopeManager),$export("controller:$AppStartController",requires),$export("component:rootComp",{requires:[],template:"ux/root/app.hbs",injectedScope:superScope,initControllerAsSuperScope:!0,controller:"$AppStartController"}),$import("component:rootComp").$compile().then(compiledHtml=>{appContainer.html(compiledHtml),Q.$booleanTrue(awr.$$isAppStarted)||(Q.$defineConstForRegistry(awr,"$$isAppStarted",!0,!0),$emit("appView:routine-event",{name:"app-boot-ready",originalEventPublisher:"startTheApp@LegacyRoutines@AppView",time:new Date,uxAppType:"legacyUXApp",controllerName:null}))},err=>{$errorOut("errorInRootCompile",[{key:"errMsg",value:err}]),$emit("appView:app-view-event",{name:"app-boot-failed",originalEventPublisher:"startTheApp@LegacyRoutines@AppView",time:new Date,uxAppType:"legacyUXApp",controllerName:null,error:err})})}static startTheView(ctrFn,opts){let viewContainer=Q.$findInDom("body","> div[awr-app] div#awrViewMain.main"),compManager=$import("object:awr.compManager"),factory=$import("object:awr.factory"),requires=Q.$arrayExist(opts.requires)?opts.requires:Q.$objectExist(opts.requires)||Q.$stringExist(opts.requires)?[opts.requires]:[],template=Q.$stringExist(opts.template)||Q.$functionExist(opts.template)?opts.template:LegacyRoutines.getPlaceholderTemplateFunction(opts);compManager.$removeComponent("viewComp"),factory.$removeController("$ViewController"),requires.push(function({ctrFn:ctrFn,compManager:compManager,opts:opts}){return function(){this.$state=null;let scope=this,superScope=this.$getParent(),oldViewScopeId=superScope.$viewScopeId,scopeArgs=Q.$arrayExist(opts.scopeArgs)?opts.scopeArgs:[];Q.$forEachIndex(scopeArgs,function(n,i){let nxt=Q.$objectExist(n)?n:{key:null};Q.$stringExist(nxt.key)&&(scope[nxt.key]=Q.$exist(nxt.value)?nxt.value:null)}),Q.$exist(oldViewScopeId)&&scopeManager.$removeScope(oldViewScopeId),compManager.$flush(),superScope.$viewScopeId=this.$getScopeId(),Q.$functionExist(ctrFn)&&ctrFn.apply(this,arguments)}}({ctrFn:ctrFn,compManager:compManager,opts:opts})),$export("controller:$ViewController",requires),$export("component:viewComp",{requires:requires,template:template,originalControllerName:opts.originalControllerName,controller:"controller:$ViewController"}),Q.$commonWaitAndProceedOperation(["component:viewComp"],()=>{$import("component:viewComp").$compile().then(compiledHtml=>{viewContainer.html(compiledHtml),$emit("appView:routine-event",{name:"view-boot-ready",originalEventPublisher:"startTheView@LegacyRoutines@AppView",time:new Date,uxViewType:"legacyUXView",controllerName:null})},err=>{$errorOut("errorInAppViewCompile",[{key:"errMsg",value:err}]),$emit("appView:app-view-event",{name:"view-boot-failed",originalEventPublisher:"startTheView@LegacyRoutines@AppView",time:new Date,uxViewType:"legacyUXView",controllerName:null,error:err})})},3e3,"[ TIMEOUT ] : Failed to create temporary component < ViewComp@legacy@AwrAppView >")}static getPlaceholderTemplateFunction(opts){return ctx=>`<h1>Welcome to the view:&nbsp;[ ${opts.viewName}  ] </h1>`+'<h3 class="text-danger"><span class="fa fa-meh-o"></span>You see this, because no template was set for this view!</h3>'}}$export("class:LegacyRoutines@legacy@AwrAppView",LegacyRoutines)}__$$errors$$__=__$loadErrors__("$$appView@kernel"),__callModuleMainFn__($main,__$$requires$$__)})}(),function(){var __$$requires$$__=[],__$$errors$$__=null;function $errorOut(errName,replaces){return __$errorOut__(__$$errors$$__,errName,replaces)}__pushToBootQueue__(function(){__$require__(__$$requires$$__,["object:awr.$$core.$$class","function:awr.registerClass","class:CompUtils@AwrComp"]);window.awr;function $main(){let Q=this,utils=($import("window:jQuery"),$import("class:CompUtils@AwrComp"));const defaultSetupValues={initControllerAsSuperScope:!1,nodeName:"div",domAttributes:[],requires:[],scopeKeyNames:{},removeOnGet:!1,injectedScope:null};class CompSetup{constructor(){}static setupComponent(context,cnf){if(Q.$objectExist(cnf)&&Q.$booleanTrue(cnf.$$isGetInstance))return void CompSetup.setupGetInstance(context,cnf,defaultSetupValues);let scopeKeys=[],scopeKeyNames={},errCmpName=Q.$stringExist(context.compName)?context.compName.replace("@AWRComp",""):"anonymous";return cnf=Q.$objectExist(cnf)?cnf:{},context.compName=Q.$stringExist(cnf.name)?cnf.name:"$$null$$",context.compName.split(" ").length>1||context.compName.split("-").length>1||Q.$stringEqual(context.compName,"$$null$$")?($errorOut("badNaming",[{key:"compName",value:context.compName},{key:"errMsg",value:"bad component name ["+context.compName+"]."}]),void(context.hasConfigError=!0)):(context.beforeControllerCall=Q.$functionExist(cnf.beforeControllerCall)?cnf.beforeControllerCall:null,context.afterControllerCall=Q.$functionExist(cnf.afterControllerCall)?cnf.afterControllerCall:null,context.initControllerAsSuperScope=Q.$booleanTrue(cnf.initControllerAsSuperScope),context.domAttributes=Q.$arrayExist(cnf.domAttributes)?cnf.domAttributes:[],context.nodeName=Q.$stringExist(cnf.nodeName)?cnf.nodeName:"div",context.afterCompile=Q.$functionExist(cnf.afterCompile)?cnf.afterCompile:null,context.compName=Q.$appendAWRNameSpace(context.compName,"Comp"),context.requires=Q.$arrayExist(cnf.requires)?cnf.requires:[],context.controller=Q.$functionExist(cnf.controller)?cnf.controller:Q.$stringExist(cnf.controller)?cnf.controller:null,context.removeOnGet=Q.$booleanTrue(cnf.removeOnGet),context.template=Q.$stringExist(cnf.template)&&$available("template:"+cnf.template)?$import("template:"+cnf.template):Q.$stringExist(cnf.template)||Q.$functionExist(cnf.template)?cnf.template:null,Q.$functionExist(context.template)||Q.$stringExist(context.template)?(utils.resolveTemplatePath(context,cnf),context.injectedScope=Q.$objectExist(cnf.injectedScope)?cnf.injectedScope:null,Q.$functionExist(context.controller)||Q.$stringExist(context.controller)?(Q.$objectExist(cnf.scope)&&Q.$forEachProperty(cnf.scope,function(n,i){let desiredName,nxtKey=Q.$isQPrimitiveVal(n)?Q.$getQPrimitiveVal(n):n;if(desiredName=Q.$isQPrimitiveVal(i)?Q.$getQPrimitiveVal(i):i,nxtKey=Q.$stringEqual(nxtKey,"=")?desiredName:nxtKey,Q.$stringExist(nxtKey)&&!Q.$setContainsString(scopeKeys,nxtKey)){if(nxtKey.split(" ").length>1||nxtKey.split("-").length>1)return $errorOut("badNaming",[{key:"compName",value:context.compName},{key:"errMsg",value:"bad scope key["+nxtKey+"]."}]),void(context.hasConfigError=!0);if(desiredName.split(" ").length>1||desiredName.split("-").length>1)return $errorOut("badNaming",[{key:"compName",value:context.compName},{key:"errMsg",value:"bad scope member name ["+desiredName+"]."}]),void(context.hasConfigError=!0);scopeKeys.push(nxtKey),scopeKeyNames[nxtKey]=desiredName}}),context.scopeKeys=scopeKeys,void(context.scopeKeyNames=scopeKeyNames)):(context.hasConfigError=!0,void $errorOut("badController",[{key:"compName",value:errCmpName}]))):(context.hasConfigError=!0,void $errorOut("badTemplate",[{key:"compName",value:context.compName}])))}static setupGetInstance(context,cnfSnapshot,defaultValues={}){let errCmpName=Q.$stringExist(context.compName)?context.compName.replace("@AWRComp",""):"anonymous";return CompSetup.restoreSetupFromSnapshot(context,cnfSnapshot,defaultValues,["originalControllerName","templatePath","controller","scopeKeys"]),context.scopeKeys=Q.$arrayExist(cnfSnapshot.$$scopeKeys)?cnfSnapshot.$$scopeKeys:[],context.controller=Q.$functionExist(cnfSnapshot.$$controller)?cnfSnapshot.$$controller:Q.$stringExist(cnfSnapshot.$$controller)?cnfSnapshot.$$controller:null,context.$$originalControllerName=cnfSnapshot.$$originalControllerName,Q.$stringExist(cnfSnapshot.$$templatePath)&&(context.templatePath=cnfSnapshot.$$templatePath,context.template=$import("template:"+cnfSnapshot.$$templatePath)),Q.$functionExist(context.controller)||Q.$stringExist(context.controller)?utils.generateUniqueIdForComponent(context):(context.hasConfigError=!0,$errorOut("badController",[{key:"compName",value:errCmpName}]),null)}static restoreSetupFromSnapshot(context,snapshot,defaultValues={},excludes=[]){let cleanValue,cleanKey;var key;Q.$objectExist(snapshot)&&Q.$each(snapshot,(value,key)=>{cleanKey=(key=key).startsWith("$$")?key.substring(2):key,cleanValue=function(key,value,defaultValues={}){return defaultValues.hasOwnProperty(key)?Q.$stringExist(defaultValues[key])?Q.$stringExist(value)?value:defaultValues[key]:Q.$numberExist(defaultValues[key])?Q.$numberExist(value)?value:defaultValues[key]:Q.$arrayExist(defaultValues[key])?Q.$arrayExist(value)?value:defaultValues[key]:Q.$booleanFalse(defaultValues[key])||Q.$booleanTrue(defaultValues[key])?Q.$booleanTrue(value)?value:defaultValues[key]:Q.$objectExist(defaultValues[key])?Q.$objectExist(value)?value:defaultValues[key]:Q.$exist(value)?value:null:Q.$exist(value)?value:null}(cleanKey,value,defaultValues),!Q.$isEmpty(excludes)&&excludes.includes(cleanKey)||(context[cleanKey]=cleanValue)})}static takeSnapshotFromSetup(context,extras={}){let destObj={};return Q.$each(context,(value,key)=>{destObj[makeSnapshotKey(key)]=value}),Q.$objectExist(extras)&&Q.$each(extras,(value,key)=>{destObj[makeSnapshotKey(key)]=value}),destObj}}function makeSnapshotKey(key){return key.startsWith("$$")?key:"$$"+key}$export("class:CompSetup@routines@AwrComp",CompSetup)}__$$errors$$__=__$loadErrors__("$$comp@kernel"),__callModuleMainFn__($main,__$$requires$$__)})}(),function(){var __$$requires$$__=[],__$$errors$$__=null;function $errorOut(errName,replaces){return __$errorOut__(__$$errors$$__,errName,replaces)}__pushToBootQueue__(function(){__$require__(__$$requires$$__,["object:awr.registryManager","object:awr.scopeManager","object:awr.coreTemplate","object:awr.$$core.$$class","function:awr.registerClass"]);let awr=window.awr||{};function $main(){const Q=awr.Q;$import("window:jQuery");let scopeManager=$import("object:awr.scopeManager");$export("class:LegacyControllerRunner@routines@AwrComp",class{constructor(){}static prepareComponent({context:context,parentScope:parentScope,parentVars:parentVars}){if(parentVars=Q.$objectExist(parentVars)?parentVars:{},!Q.$objectExist(context))return $errorOut("badContext"),!1;if(Q.$objectExist(context.injectedScope)&&!scopeManager.$isAWRScopeInstance(context.injectedScope))return $errorOut("badInjectedScope"),!1;let allKeys,scope=Q.$objectExist(context.injectedScope)?context.injectedScope:scopeManager.$createScope({},parentScope);return allKeys=Q.$merge(Q.$map(context.scopeKeys,nxt=>context.scopeKeyNames[nxt]),Object.getOwnPropertyNames(parentVars)),Q.$each(allKeys,nxt=>{let nxtValue;nxtValue=Q.$objectExist(parentVars)&&parentVars.hasOwnProperty(nxt)?parentVars[nxt]:scope.$findProperty(nxt),scope[nxt]=Q.$exist(nxtValue)?nxtValue:null}),context.scope=scope,!0}static run({context:context,controllerFrame:controllerFrame}){let controller,requires,cObject=controllerFrame,badCtrl=!1,scope=Q.$objectExist(context.scope)?context.scope:null;return controller=Q.$objectExist(cObject)?cObject.controller:null,requires=Q.$objectExist(cObject)&&Q.$arrayExist(cObject.requires)?cObject.requires:[],badCtrl=!Q.$functionExist(controller),new Promise(function(resolve,reject){let errCmpName=Q.$stringExist(context.compName)?context.compName.replace("@AWRComp",""):"anonymous";Q.$booleanTrue(badCtrl)?(Q.$stringExist(context.controller)?$errorOut("badControllerInject",[{key:"compName",value:errCmpName},{key:"ctrlName",value:context.controller}]):$errorOut("badController",[{key:"compName",value:errCmpName}]),reject("Bad controller instance for component")):Q.$commonWaitAndProceedOperation(requires,()=>{try{let convertedSet=Q.$isEmpty(requires)?[]:$import(requires);Q.$functionExist(controller)&&Q.$objectExist(scope)?Q.$arrayExist(convertedSet)&&convertedSet.length===requires.length?(scope.$setControllerName(controller.name),controller.apply(scope,convertedSet)):reject("Fatal [bad require set conversion]."):reject("bad context"),resolve(context)}catch(err){reject(err)}},3e3,err=>{console.error("TIMEOUT : failed to get dependencies required by  controller. This call was originally requested by the component compile routine. "),console.error(err),reject(err)})})}})}__$$errors$$__=__$loadErrors__("$$comp@kernel"),__callModuleMainFn__($main,__$$requires$$__)})}(),function(){var __$$requires$$__=[],__$$errors$$__=null;function $errorOut(errName,replaces){return __$errorOut__(__$$errors$$__,errName,replaces)}__pushToBootQueue__(function(){__$require__(__$$requires$$__,["object:awr.registryManager","object:awr.scopeManager","object:awr.coreTemplate","object:awr.$$core.$$class","function:awr.registerClass","class:CompUtils@AwrComp","object:awr.scopeManager"]);let awr=window.awr||{};function $main(){const Q=awr.Q;let $=$import("window:jQuery"),registry=$import("object:awr.registryManager"),compRegName="ComponentObject",templateManager=$import("object:coreTemplate"),scopeManager=$import("object:awr.scopeManager"),compUtils=$import("class:CompUtils@AwrComp");class TemplateCompiler{constructor(){}static compile({context:context}){let preparedHtml,compiledHtml,childPromises=[],compManager=$import("object:awr.compManager");return Q.$stringExist(context.templatePath)&&$available("template:"+context.templatePath)?(TemplateCompiler.installScopeRecompileFN({context:context}),preparedHtml=templateManager.$prepare(context.templatePath,context.scope,!1),compiledHtml=templateManager.$compile(preparedHtml,context.scope,context.nodeName,context.domAttributes),Q.$forEachIndex(compManager.$getCompNames(),function(n,i){let nxt=Q.$isQPrimitiveVal(n)?Q.$getQPrimitiveVal(n):n,domName=Q.$toDashCase(nxt.replace("@AWRComp",""));Q.$eachInDom(compiledHtml,domName,function(n,i){let child=compManager.$getComponent(nxt),childDom=n,parentVars=compUtils.getParentVars(context,child,childDom);childPromises.push(compUtils.getChildCompilePromise(context,child,childDom,parentVars))})}),new Promise(function(resolve,reject){Q.$objectExist(compiledHtml)?Promise.all(childPromises).then(function(res1){Q.$booleanTrue(context.removeOnGet)&&registry.$remove(compRegName,context.compName),$('<input type="hidden" awr-compile-count="0"/>').attr("awr-compile-count",0),$(compiledHtml).append('<input type="hidden" awr-compile-count="0"/>'),resolve(compiledHtml)},function(err){$errorOut("subCompileFailed",[{key:"errMsg",value:err}])}):reject("Failed to compile component. No compiled string was returned by templateManager@core.")})):Promise.reject("No template found.")}static installScopeRecompileFN({context:context}){Q.$objectExist(context.scope)&&context.scope.$setRecompileAction(compileCount=>{if(!Q.$booleanFalse(context.scope.$isPresent())&&(Q.$eachInDom(context.scope.$getDom(),"[awr-scope-id]",function(n,i){let scopeId=$(this).attr("awr-scope-id");scopeManager.$removeScope(scopeId)}),TemplateCompiler.compile({context:context}).then(recompiledHtml=>{$(recompiledHtml).find("> [awr-compile-count]").attr("awr-compile-count",compileCount),context.scope.$setDom(recompiledHtml),compUtils.flushCompInstances()},err=>{$errorOut("recompileFailed",[{key:"errMsg",value:err}])}),"rootComp@AWRComp"===context.compName))try{$import("service:router").$reloadCurrentState()}catch(err){$errorOut("rootCompileReloadStateFailed",[{key:"errMsg",value:err}])}})}}$export("class:TemplateCompiler@routines@AwrComp",TemplateCompiler)}__$$errors$$__=__$loadErrors__("$$comp@kernel"),__callModuleMainFn__($main,__$$requires$$__)})}(),function(){var __$$requires$$__=[],__$$errors$$__=null;__pushToBootQueue__(function(){__$require__(__$$requires$$__,["object:awr.registryManager","object:awr.scopeManager","object:awr.coreTemplate","object:awr.$$core.$$class","function:awr.registerClass"]);let awr=window.awr||{};function $main(){const Q=awr.Q;$import("window:jQuery");let scopeManager=$import("object:awr.scopeManager");$export("class:UX3ControllerRunner@routines@AwrComp",class{constructor(){}static run({context:context,parentScope:parentScope,parentVars:parentVars,controllerFrame:controllerFrame}){parentVars=Q.$objectExist(parentVars)?parentVars:{};let allKeys,ctrObj=controllerFrame,data={};return Q.$isUX3TypeClass(ctrObj.controller)?(Q.$booleanTrue(context.initControllerAsSuperScope)&&(parentScope="SUPER_INIT"),parentVars=Q.$objectExist(parentVars)?parentVars:{},allKeys=Q.$merge(Q.$map(context.scopeKeys,nxt=>context.scopeKeyNames[nxt]),Object.getOwnPropertyNames(parentVars)),Q.$each(allKeys,nxt=>{let nxtValue;nxtValue=Q.$objectExist(parentVars)&&parentVars.hasOwnProperty(nxt)?parentVars[nxt]:null,!Q.$exist(nxtValue)&&Q.$objectExist(parentScope)&&Q.$functionExist(parentScope.$findProperty)&&(nxtValue=parentScope.$findProperty(nxt)),data[nxt]=Q.$exist(nxtValue)?nxtValue:null}),Q.$objectExist(context.injectedScope)&&(Q.$each(context.injectedScope,(val,key)=>{Q.$setContainsString(["$$AWR_SCOPE_ID$$","$$isIsolated","$$parent","$segment","__$$params$$__"],key)||Object.defineProperty(data,key,Object.getOwnPropertyDescriptor(context.injectedScope,key))}),scopeManager.$isAWRScopeInstance(context.injectedScope)&&(parentScope=context.injectedScope.$getParent(),context.injectedScope.$hasTemporaryFlag()&&(context.injectedScope.$destroy(),delete context.injectedScope))),function({context:context,data:data,parentScope:parentScope,ctrObj:ctrObj}){return new Promise((resolve,reject)=>{Q.$commonWaitAndProceedOperation(Q.$isEmpty(ctrObj.requires)?[]:ctrObj.requires,()=>{try{Q.$functionExist(context.beforeControllerCall)&&context.beforeControllerCall();let newInstance=new ctrObj.controller(data,parentScope);newInstance.$setControllerName(ctrObj.controller.name),context.scope=newInstance,Q.$functionExist(context.afterControllerCall)&&context.afterControllerCall.apply(newInstance,[]),resolve(context)}catch(err){reject(err)}},3e3,err=>{errName="controllerConstructorDependencyTimeout",replaces=[{key:"compName",value:context.compName},{key:"errMsg",value:err}],__$errorOut__(__$$errors$$__,errName,replaces),reject(err)})});var errName,replaces}({context:context,data:data,parentScope:parentScope,ctrObj:ctrObj})):Promise.reject("Bad UX3Type Controller")}})}__$$errors$$__=__$loadErrors__("$$comp@kernel"),__callModuleMainFn__($main,__$$requires$$__)})}(),function(){var __$$requires$$__=[],__$$errors$$__=null;__pushToBootQueue__(function(){__$require__(__$$requires$$__,["function:awr.registerClass","class:BasicTypeIORegistrar@AwrFactory","class:GenericFactory@AwrFactory","object:awr.factory","function:awr.App"]);window.awr;function $main(){let appFactory,Q=this,factoryManager=$import("object:awr.factory"),typeIO=$import("class:BasicTypeIORegistrar@AwrFactory"),GenericFactory=$import("class:GenericFactory@AwrFactory");(appFactory=new class extends GenericFactory{constructor(factory,typeRegistrar){super(factory,typeRegistrar,"AppObject","app")}$remove(itemName){var errName,replaces;return errName="illegalAppTypeRemoveAttempt",replaces=[{key:"appName",value:Q.$firstLetterToUpperCase(itemName)}],__$errorOut__(__$$errors$$__,errName,replaces),!1}}(factoryManager,typeIO)).$install()}__$$errors$$__=__$loadErrors__("$$factory@kernel"),__callModuleMainFn__($main,__$$requires$$__)})}(),function(){var __$$requires$$__=[];__pushToBootQueue__(function(){window.awr;__callModuleMainFn__("function"==typeof $main?$main:null,__$$requires$$__)})}(),function(){var __$$requires$$__=[];__pushToBootQueue__(function(){__$require__(__$$requires$$__,["function:awr.registerClass","class:BasicTypeIORegistrar@AwrFactory","class:GenericFactory@AwrFactory","object:awr.factory","object:awr.configManager"]);window.awr;function $main(){let configFactory,factoryManager=$import("object:awr.factory"),typeIO=$import("class:BasicTypeIORegistrar@AwrFactory"),GenericFactory=$import("class:GenericFactory@AwrFactory"),confManager=$import("object:awr.configManager");(configFactory=new class extends GenericFactory{constructor(factory,typeRegistrar){super(factory,typeRegistrar,null,"config")}$get(itemName){return itemName=this.$postProcessItemName(this.$processItemName(itemName),this.typeName),confManager.$getConfig.apply(confManager,[itemName])}$register(itemName,confObject,opts){return itemName=this.$postProcessItemName(this.$processItemName(itemName),this.typeName),confManager.$registerConfig.apply(confManager,[itemName,confObject,opts])}$exists(itemName){return itemName=this.$postProcessItemName(this.$processItemName(itemName),this.typeName),confManager.$configAvailable.apply(confManager,[itemName])}$remove(itemName){return itemName=this.$postProcessItemName(this.$processItemName(itemName),this.typeName),!1}}(factoryManager,typeIO)).$install()}__$loadErrors__("$$factory@kernel"),__callModuleMainFn__($main,__$$requires$$__)})}(),function(){var __$$requires$$__=[];__pushToBootQueue__(function(){__$require__(__$$requires$$__,["function:awr.registerClass","class:BasicTypeIORegistrar@AwrFactory","class:GenericFactory@AwrFactory","object:awr.factory","function:awr.Controller"]);window.awr;function $main(){let controllerFactory,factoryManager=$import("object:awr.factory"),typeIO=$import("class:BasicTypeIORegistrar@AwrFactory"),GenericFactory=$import("class:GenericFactory@AwrFactory");(controllerFactory=new class extends GenericFactory{constructor(factory,typeRegistrar){super(factory,typeRegistrar,"ControllerObject","controller")}}(factoryManager,typeIO)).$install()}__$loadErrors__("$$factory@kernel"),__callModuleMainFn__($main,__$$requires$$__)})}(),function(){var __$$requires$$__=[],__$$errors$$__=null;function $errorOut(errName,replaces){return __$errorOut__(__$$errors$$__,errName,replaces)}__pushToBootQueue__(function(){__$require__(__$$requires$$__,["function:awr.registerClass","class:TypeUtils@types@AwrFactory","class:UX3Type@types@AwrFactory","class:BasicTypeIORegistrar@AwrFactory"]);let awr=window.awr||{};function $main(){let Q=this,basicTypeIO=$import("class:BasicTypeIORegistrar@AwrFactory"),typeUtils=$import("class:TypeUtils@types@AwrFactory"),UX3Type=$import("class:UX3Type@types@AwrFactory"),reservedTypes=Q.$asCollection(["pipe","service","validator","controller","model","function","watchable","object","number","bool","boolean","class","awr","helper","q","observable","filter","reduce","map","string","date","config","ux3type","route","event","element","component","template","style","factory","registry","kernel","serial","scope","module","test","api","server","error","file","json","io","view","path","url","bundle"]);$export("class:CustomFactory@AwrFactory",class{constructor(){}static $define(factory,registry,{factoryName:factoryName,proto:proto={},data:data={},interfaceCheck:interfaceCheck=null,badInterfaceHint:badInterfaceHint=null,superTypeRequire:superTypeRequire={},superTypeInit:superTypeInit=null}){if(!Q.$stringExist(factoryName))return void $errorOut("emptyFactoryTypeName");factoryName=factoryName.trim(),factoryName=Q.$firstLetterToUpperCase(factoryName);let usageName=Q.$firstLetterToLowerCase(factoryName),factoryRegisName=`${factoryName}@factoryObject`;if(registry.$hasRegistry(factoryRegisName)||reservedTypes.$contains(factoryName.toLowerCase()))return void $errorOut("illegalFactoryTypeName",[{key:"factoryName",value:factoryName}]);registry.$create(factoryRegisName),awr.$=Q.$objectExist(awr.$)?awr.$:{};let superType=new UX3Type(usageName),superTypeClass=class{static get $superType(){return superType}get $superType(){return superType}static get name(){return factoryName}constructor(requireObj={}){let ctx=this;if(Q.$objectExist(data)&&Q.$each(data,(value,key)=>{Object.defineProperty(ctx,key,Object.getOwnPropertyDescriptor(data,key))}),Q.$objectExists(superTypeRequire)?typeUtils.injectImports(this,Object.assign({},superTypeRequire,requireObj)):typeUtils.injectImports(this,Object.assign({},requireObj)),Q.$functionExists(superTypeInit))try{superTypeInit.call(this)}catch(err){$errorOut("badCustomFactoryTypeInit",[{key:"errMsg",value:err},{key:"factoryTypeName",value:factoryName}])}}};Q.$objectExist(proto)&&Q.$each(proto,(value,key)=>{Q.$setContainsString(["name","$superType"],key)||Object.defineProperty(superTypeClass.prototype,key,Object.getOwnPropertyDescriptor(proto,key))}),Q.$defineConstForRegistry(awr.$,factoryName,superTypeClass,!0),basicTypeIO.registerCustomType(factory,factoryRegisName,usageName,interfaceCheck,badInterfaceHint)}})}__$$errors$$__=__$loadErrors__("$$factory@kernel"),__callModuleMainFn__($main,__$$requires$$__)})}(),function(){var __$$requires$$__=[],__$$errors$$__=null;__pushToBootQueue__(function(){__$require__(__$$requires$$__,["function:awr.registerClass","object:awr.registryManager"]);let awr=window.awr||{};function $main(){let Q=this,registry=$import("object:awr.registryManager");$export("class:GenericFactory@AwrFactory",class{constructor(factory,typeRegistrar,itemRegistryName,typeName){Q.$stringExist(itemRegistryName)&&!registry.$hasRegistry(itemRegistryName)&&registry.$create(itemRegistryName),this.factory=factory,this.typeRegistrar=typeRegistrar,this.itemRegistryName=itemRegistryName,this.typeName=typeName,this.capitalizedTypeName=Q.$firstLetterToUpperCase(this.typeName)}get $badInterfaceHint(){return"< No more info available. >"}$processItemName(itemName){return itemName}$postProcessItemName(itemName,suffix){return Q.$stringExist(itemName)&&Q.$stringExist(suffix)&&itemName.toLowerCase().endsWith(suffix.toLowerCase())?itemName.substring(0,itemName.length-suffix.length):itemName}$makeCustomInterfaceCheckFn(clz,itemName){let interfaceCheck=()=>{let err=new Error("Bad class for type checker.");return errName="badFactoryInterfaceCheckClass",replaces=[{key:"className",value:clz&&clz.name?clz.name:clz},{key:"itemName",value:itemName},{key:"errMsg",value:err}],__$errorOut__(__$$errors$$__,errName,replaces),!1};var errName,replaces;return Q.$isUX3TypeClass(clz)&&(interfaceCheck=(instanceItem=>this.typeRegistrar.extenderTypeCheck(clz,instanceItem,itemName))),interfaceCheck}$makeInterfaceCheckFn(itemName){let clz=this.$getSuperTypeClass();return this.$makeCustomInterfaceCheckFn(clz,itemName)}$getSuperTypeClass(){let cp=this.capitalizedTypeName;return awr[cp]&&Q.$isUX3TypeClass(awr[cp])?awr[cp]:null}$install(){let _self=this,installs={onImport:(...args)=>_self.$get.apply(_self,args),onAvailable:(...args)=>_self.$exists.apply(_self,args),onExport:(...args)=>_self.$register.apply(_self,args),onRemove:(...args)=>_self.$remove.apply(_self,args)};this.typeRegistrar.installTypeIORegisterRoutines(this.typeName,installs),this.factory.$installInFactory(this.typeName,installs)}$register(itemName,itemFnArr,opts=null){return itemName=this.$postProcessItemName(this.$processItemName(itemName),this.typeName),this.factory.$registerFactoryType(this.capitalizedTypeName,this.itemRegistryName,itemName,itemFnArr,this.$makeInterfaceCheckFn(itemName),this.$badInterfaceHint)}$get(itemName){return itemName=this.$postProcessItemName(this.$processItemName(itemName),this.typeName),this.factory.$getFactoryType(this.capitalizedTypeName,this.itemRegistryName,itemName)}$exists(itemName){return itemName=this.$postProcessItemName(this.$processItemName(itemName),this.typeName),this.factory.$factoryTypeExists(this.capitalizedTypeName,this.itemRegistryName,itemName)}$remove(itemName){return itemName=this.$postProcessItemName(this.$processItemName(itemName),this.typeName),this.factory.$removeFactoryType(this.capitalizedTypeName,this.itemRegistryName,itemName)}})}__$$errors$$__=__$loadErrors__("$$factory@kernel"),__callModuleMainFn__($main,__$$requires$$__)})}(),function(){var __$$requires$$__=[];__pushToBootQueue__(function(){__$require__(__$$requires$$__,["function:awr.registerClass","class:BasicTypeIORegistrar@AwrFactory","class:GenericFactory@AwrFactory","object:awr.factory","class:ScriptRequest@AwrAgent"]);let awr=window.awr||{};function $main(){let lazyModule,factoryManager=$import("object:awr.factory"),typeIO=$import("class:BasicTypeIORegistrar@AwrFactory"),GenericFactory=$import("class:GenericFactory@AwrFactory"),scriptRequest=$import("class:ScriptRequest@AwrAgent");(lazyModule=new class extends GenericFactory{constructor(factory,typeRegistrar){super(factory,typeRegistrar,"LazyModuleObject","lazyModule")}$processItemName(modulePath){return(path=modulePath)&&path.endsWith("@AWRLazyModule")?path.substring(0,path.length-14):path;var path}$exists(modulePath){let path=this.$processItemName(modulePath);return super.$exists(path)||scriptRequest.isPendingRequest(path)||scriptRequest.requestLazyModule(path).then(event=>{!function(genericPath,fullPath){class ModuleFile extends awr.LazyModule{static get $require(){return{}}static get name(){return genericPath}constructor(){super(File.$require,File.name),this.path=genericPath,this.fullPath=fullPath}}$available(`lazyModule:${genericPath}`)||$export(ModuleFile)}(event.genericPath,event.fullPath)},err=>{}),super.$exists(path)}}(factoryManager,typeIO)).$install()}__$loadErrors__("$$factory@kernel"),__callModuleMainFn__($main,__$$requires$$__)})}(),function(){var __$$requires$$__=[];__pushToBootQueue__(function(){__$require__(__$$requires$$__,["function:awr.registerClass","function:awr.Observable","function:awr.ObservableTransform","class:BasicTypeIORegistrar@AwrFactory","class:GenericFactory@AwrFactory","object:awr.factory","object:awr.observableManager","class:Observable@event"]);window.awr;function $main(){let observableFactory,Q=this,factoryManager=$import("object:awr.factory"),typeIO=$import("class:BasicTypeIORegistrar@AwrFactory"),GenericFactory=$import("class:GenericFactory@AwrFactory"),observableManager=$import("object:awr.observableManager"),Observable=$import("class:Observable@event");(observableFactory=new class extends GenericFactory{constructor(factory,typeRegistrar){super(factory,typeRegistrar,null,"observable")}$get(itemName){return itemName=this.$postProcessItemName(this.$processItemName(itemName),this.typeName),observableManager.importObservable(itemName)}$register(itemName,observableObj,opts){return!!function(factory,{itemName:itemName,observableObj:observableObj}){let actualItem=function(observableObj){return Q.$arrayExist(observableObj)?Q.$reduce(observableObj,nxt=>Q.$functionExist(nxt)).$first():observableObj}(observableObj);if(Q.$objectInstanceOf(actualItem,Observable))return!0;let TransformType=$import("function:awr.ObservableTransform");return Q.$functionExist(actualItem)&&Q.$objectInstanceOf(actualItem.prototype,TransformType)?factory.$makeCustomInterfaceCheckFn(TransformType,itemName)(observableObj):factory.$makeInterfaceCheckFn(itemName)(observableObj)}(this,{itemName:itemName=this.$postProcessItemName(this.$processItemName(itemName),this.typeName),observableObj:observableObj})&&observableManager.exportObservable(itemName,observableObj,opts)}$exists(itemName){return itemName=this.$postProcessItemName(this.$processItemName(itemName),this.typeName),observableManager.observableAvailable(itemName)}$remove(itemName){return itemName=this.$postProcessItemName(this.$processItemName(itemName),this.typeName),!1}}(factoryManager,typeIO)).$install()}__$loadErrors__("$$factory@kernel"),__callModuleMainFn__($main,__$$requires$$__)})}(),function(){var __$$requires$$__=[];__pushToBootQueue__(function(){__$require__(__$$requires$$__,["function:awr.registerClass","class:BasicTypeIORegistrar@AwrFactory","class:GenericFactory@AwrFactory","object:awr.factory","function:awr.Pipe"]);let specialPipes=["$reduce","$limit","$map","$filter","$merge","$take","$unique","$skip","$reverse","$flatten","$sort","$sortDesc","$sortBy","$sortByDesc","$toCamelCase","$toDashCase","$toUnderscoreCase","$capitalizeName","$capitalizeFirstLetter","$shouldStartWith","$shouldEndWith","$asFileSize","$addQueryAttrToURL"];window.awr;function $main(){let pipeFactory,Q=this,factoryManager=$import("object:awr.factory"),typeIO=$import("class:BasicTypeIORegistrar@AwrFactory"),GenericFactory=$import("class:GenericFactory@AwrFactory");specialPipes=Q.$asCollection(specialPipes);class PipeFactory extends GenericFactory{constructor(factory,typeRegistrar){super(factory,typeRegistrar,"PipeObject","pipe")}static isSpecialPipe(pipeName){return Q.$setContainsString(specialPipes,pipeName)||Q.$setContainsString(specialPipes,"$"+pipeName)}static getSpecialPipe(pipeName){if(PipeFactory.isSpecialPipe(pipeName))return pipeName=pipeName.startsWith("$")?pipeName:"$"+pipeName,{transform:(...args)=>Q[pipeName].apply(Q,args)}}$exists(itemName){return itemName=this.$postProcessItemName(this.$processItemName(itemName),this.typeName),!!PipeFactory.isSpecialPipe(itemName)||super.$exists(itemName)}$get(itemName){return itemName=this.$postProcessItemName(this.$processItemName(itemName),this.typeName),PipeFactory.isSpecialPipe(itemName)?PipeFactory.getSpecialPipe(itemName):super.$get(itemName)}$remove(itemName){return itemName=this.$postProcessItemName(this.$processItemName(itemName),this.typeName),!PipeFactory.isSpecialPipe(itemName)&&super.$remove(itemName)}}(pipeFactory=new PipeFactory(factoryManager,typeIO)).$install()}__$loadErrors__("$$factory@kernel"),__callModuleMainFn__($main,__$$requires$$__)})}(),function(){var __$$requires$$__=[];__pushToBootQueue__(function(){__$require__(__$$requires$$__,["function:awr.registerClass","class:BasicTypeIORegistrar@AwrFactory","class:GenericFactory@AwrFactory","object:awr.factory","function:awr.Segment"]);window.awr;function $main(){let resolvableFactory,factoryManager=$import("object:awr.factory"),typeIO=$import("class:BasicTypeIORegistrar@AwrFactory"),GenericFactory=$import("class:GenericFactory@AwrFactory");(resolvableFactory=new class extends GenericFactory{constructor(factory,typeRegistrar){super(factory,typeRegistrar,"ResolvableObject","resolvable")}}(factoryManager,typeIO)).$install()}__$loadErrors__("$$factory@kernel"),__callModuleMainFn__($main,__$$requires$$__)})}(),function(){var __$$requires$$__=[];__pushToBootQueue__(function(){__$require__(__$$requires$$__,["function:awr.registerClass","class:BasicTypeIORegistrar@AwrFactory","class:GenericFactory@AwrFactory","object:awr.factory","object:awr.routeManager"]);window.awr;function $main(){let routeFactory,factoryManager=$import("object:awr.factory"),typeIO=$import("class:BasicTypeIORegistrar@AwrFactory"),GenericFactory=$import("class:GenericFactory@AwrFactory"),routeManager=$import("object:awr.routeManager");(routeFactory=new class extends GenericFactory{constructor(factory,typeRegistrar){super(factory,typeRegistrar,null,"route")}$get(itemName){return itemName=this.$postProcessItemName(this.$processItemName(itemName),this.typeName),routeManager.$getRoute(itemName)}$register(itemName,routeObj,opts){return itemName=this.$postProcessItemName(this.$processItemName(itemName),this.typeName),routeManager.$exportRoute(itemName,routeObj,opts)}$exists(itemName){return itemName=this.$postProcessItemName(this.$processItemName(itemName),this.typeName),routeManager.$routeExist(itemName)}$remove(itemName){return itemName=this.$postProcessItemName(this.$processItemName(itemName),this.typeName),!1}}(factoryManager,typeIO)).$install()}__$loadErrors__("$$factory@kernel"),__callModuleMainFn__($main,__$$requires$$__)})}(),function(){var __$$requires$$__=[];__pushToBootQueue__(function(){__$require__(__$$requires$$__,["function:awr.registerClass","class:BasicTypeIORegistrar@AwrFactory","class:GenericFactory@AwrFactory","object:awr.factory","function:awr.Segment"]);window.awr;function $main(){let segmentFactory,factoryManager=$import("object:awr.factory"),typeIO=$import("class:BasicTypeIORegistrar@AwrFactory"),GenericFactory=$import("class:GenericFactory@AwrFactory");(segmentFactory=new class extends GenericFactory{constructor(factory,typeRegistrar){super(factory,typeRegistrar,"SegmentObject","segment")}}(factoryManager,typeIO)).$install()}__$loadErrors__("$$factory@kernel"),__callModuleMainFn__($main,__$$requires$$__)})}(),function(){var __$$requires$$__=[];__pushToBootQueue__(function(){__$require__(__$$requires$$__,["function:awr.registerClass","class:BasicTypeIORegistrar@AwrFactory","class:GenericFactory@AwrFactory","object:awr.factory","function:awr.Service"]);window.awr;function $main(){let serviceFactory,factoryManager=$import("object:awr.factory"),typeIO=$import("class:BasicTypeIORegistrar@AwrFactory"),GenericFactory=$import("class:GenericFactory@AwrFactory");(serviceFactory=new class extends GenericFactory{constructor(factory,typeRegistrar){super(factory,typeRegistrar,"ServiceObject","service")}}(factoryManager,typeIO)).$install()}__$loadErrors__("$$factory@kernel"),__callModuleMainFn__($main,__$$requires$$__)})}(),function(){var __$$requires$$__=[];__pushToBootQueue__(function(){__$require__(__$$requires$$__,["function:awr.registerClass","class:BasicTypeIORegistrar@AwrFactory","class:GenericFactory@AwrFactory","object:awr.factory"]);window.awr;function $main(){let specModule,factoryManager=$import("object:awr.factory"),typeIO=$import("class:BasicTypeIORegistrar@AwrFactory"),GenericFactory=$import("class:GenericFactory@AwrFactory");(specModule=new class extends GenericFactory{constructor(factory,typeRegistrar){super(factory,typeRegistrar,"SpecObject","spec")}}(factoryManager,typeIO)).$install()}__$loadErrors__("$$factory@kernel"),__callModuleMainFn__($main,__$$requires$$__)})}(),function(){var __$$requires$$__=[];__pushToBootQueue__(function(){__$require__(__$$requires$$__,["function:awr.registerClass","class:BasicTypeIORegistrar@AwrFactory","class:GenericFactory@AwrFactory","object:awr.factory","object:awr.tokenManager"]);window.awr;function $main(){let tokenFactory,factoryManager=$import("object:awr.factory"),typeIO=$import("class:BasicTypeIORegistrar@AwrFactory"),GenericFactory=$import("class:GenericFactory@AwrFactory"),tokeManager=$import("object:awr.tokenManager");(tokenFactory=new class extends GenericFactory{constructor(factory,typeRegistrar){super(factory,typeRegistrar,null,"token")}$get(tokenName){return tokeManager.importToken(tokenName)}$register(tokenName,token,opts){return tokeManager.exportToken(tokenName,token)}$exists(tokenName){return tokeManager.tokenAvailable(tokenName)}$remove(tokenName){return tokeManager.exportToken(tokenName,null)}}(factoryManager,typeIO)).$install()}__$loadErrors__("$$factory@kernel"),__callModuleMainFn__($main,__$$requires$$__)})}(),function(){var __$$requires$$__=[];__pushToBootQueue__(function(){__$require__(__$$requires$$__,["function:awr.registerClass","class:BasicTypeIORegistrar@AwrFactory","class:GenericFactory@AwrFactory","object:awr.factory","function:awr.Validator"]);window.awr;function $main(){let validatorFactory,factoryManager=$import("object:awr.factory"),typeIO=$import("class:BasicTypeIORegistrar@AwrFactory"),GenericFactory=$import("class:GenericFactory@AwrFactory");(validatorFactory=new class extends GenericFactory{constructor(factory,typeRegistrar){super(factory,typeRegistrar,"ValidatorObject","validator")}}(factoryManager,typeIO)).$install()}__$loadErrors__("$$factory@kernel"),__callModuleMainFn__($main,__$$requires$$__)})}(),function(){var __$$requires$$__=[];__pushToBootQueue__(function(){__$require__(__$$requires$$__,["function:awr.registerClass","class:BasicTypeIORegistrar@AwrFactory","class:GenericFactory@AwrFactory","object:awr.factory","object:awr.observableManager","class:Observable@event"]);window.awr;function $main(){let watchableFactory,factoryManager=$import("object:awr.factory"),typeIO=$import("class:BasicTypeIORegistrar@AwrFactory"),GenericFactory=$import("class:GenericFactory@AwrFactory");(watchableFactory=new class extends GenericFactory{constructor(factory,typeRegistrar){super(factory,typeRegistrar,"WatchableObject","watchable")}}(factoryManager,typeIO)).$install()}__$loadErrors__("$$factory@kernel"),__callModuleMainFn__($main,__$$requires$$__)})}(),function(){var __$$requires$$__=[],__$$errors$$__=null;__pushToBootQueue__(function(){__$require__(__$$requires$$__,["object:awr.$$core.$$class","class:TypeUtils@types@AwrFactory","class:UX3Type@types@AwrFactory"]);let awr=window.awr||{};function $main(){let Q=this,typeUtils=$import("class:TypeUtils@types@AwrFactory"),UX3Type=$import("class:UX3Type@types@AwrFactory");class App{static get $superType(){return new UX3Type("app")}get $superType(){return App.$superType}constructor(requireObj={},name){typeUtils.injectImports(this,requireObj),this.app=Q.$app(),this.appName=name,this.controller=null}$start(){if(!Q.$stringExist(this.controller))return errName="badAppControllerName",replaces=[{key:"appName",value:this.appName}],void __$errorOut__(__$$errors$$__,errName,replaces);var errName,replaces;this.app.$start({name:this.appName,controller:this.controller})}}awr.App=App,$export("function:awr.App",App,{takeEasy:!1})}__$$errors$$__=__$loadErrors__("$$factory@kernel"),__callModuleMainFn__($main,__$$requires$$__)})}(),function(){var __$$requires$$__=[];__pushToBootQueue__(function(){__$require__(__$$requires$$__,["object:awr.$$core.$$class","class:TypeUtils@types@AwrFactory","class:UX3Type@types@AwrFactory"]);let awr=window.awr||{};function $main(){let typeUtils=$import("class:TypeUtils@types@AwrFactory"),UX3Type=$import("class:UX3Type@types@AwrFactory");class Class{static get $superType(){return new UX3Type("class")}get $superType(){return Class.$superType}constructor(requireObj={}){typeUtils.injectImports(this,requireObj)}$importSuperScope(){delete this.superScope,Object.defineProperty(this,"superScope",{get:()=>$import("object:awr.superScope"),configurable:!0})}}awr.Class=Class,$export("function:awr.Class",Class,{takeEasy:!1})}__$loadErrors__("$$factory@kernel"),__callModuleMainFn__($main,__$$requires$$__)})}(),function(){var __$$requires$$__=[];__pushToBootQueue__(function(){__$require__(__$$requires$$__,["object:awr.$$core.$$class","class:TypeUtils@types@AwrFactory","class:UX3Type@types@AwrFactory"]);let awr=window.awr||{};function $main(){let typeUtils=$import("class:TypeUtils@types@AwrFactory"),UX3Type=$import("class:UX3Type@types@AwrFactory");class Component{static get $superType(){return new UX3Type("component")}get $superType(){return Component.$superType}constructor(requireObj={}){typeUtils.injectImports(this,requireObj)}}awr.Component=Component,$export("function:awr.Component",Component,{takeEasy:!1})}__$loadErrors__("$$factory@kernel"),__callModuleMainFn__($main,__$$requires$$__)})}(),function(){var __$$requires$$__=[];__pushToBootQueue__(function(){__$require__(__$$requires$$__,["object:awr.$$core.$$class","class:TypeUtils@types@AwrFactory","class:UX3Type@types@AwrFactory"]);let awr=window.awr||{};function $main(){let typeUtils=$import("class:TypeUtils@types@AwrFactory"),UX3Type=$import("class:UX3Type@types@AwrFactory");class Config{static get $superType(){return new UX3Type("config")}get $superType(){return Config.$superType}constructor(requireObj={},name){typeUtils.injectImports(this,requireObj),this.__$$confName$$__=name,this.__$$hasError$$__=!1,this.__$$confFn$$__=null,this.__$$errMsg$$__=null}$importSuperScope(){delete this.superScope,Object.defineProperty(this,"superScope",{get:()=>$import("object:awr.superScope"),configurable:!0})}}awr.Config=Config,$export("function:awr.Config",Config,{takeEasy:!1})}__$loadErrors__("$$factory@kernel"),__callModuleMainFn__($main,__$$requires$$__)})}(),function(){var __$$requires$$__=[],__$$errors$$__=null;__pushToBootQueue__(function(){__$require__(__$$requires$$__,["object:awr.$$core.$$class","class:ScopeAPI@api@AwrScope","object:awr.scopeManager","class:TypeUtils@types@AwrFactory","class:UX3Type@types@AwrFactory"]);let awr=window.awr||{};function $main(){let Q=this,typeUtils=$import("class:TypeUtils@types@AwrFactory"),UX3Type=$import("class:UX3Type@types@AwrFactory"),scopeManager=$import("object:awr.scopeManager"),AWRScopeAPI=$import("class:ScopeAPI@api@AwrScope");class Controller extends AWRScopeAPI{static get $superType(){return new UX3Type("controller")}get $superType(){return Controller.$superType}constructor(requireObj={},data=null,parent=null){super("SUPER_INIT"===parent?"SUPER_INIT":scopeManager.$generateUniqueId(),scopeManager);let tmp,scope=this;$import("service:router");var replaces;scopeManager.$isAWRScopeInstance(data)&&!Q.$isAWRScopeInstance(parent)?(tmp=parent,parent=data,data=tmp):!Q.$objectExist(parent)||scopeManager.$isAWRScopeInstance(parent)||Q.$exist(data)||(data=parent,parent=null),"SUPER_INIT"!==parent&&scopeManager.$isAWRScopeInstance(parent)?this.$setParent(parent):"SUPER_INIT"!==parent&&this.$setParent($import("object:awr.superScope")),Q.$objectExist(data)&&Q.$each(data,(value,key)=>{Q.$setContainsString(["$$AWR_SCOPE_ID$$","$$isIsolated","$$parent","$segment","__$$params$$__"],key)?__$errorOut__(__$$errors$$__,"forbiddenScopePropertyName",replaces):(scope[key]=value,Object.defineProperty(scope,key,Object.getOwnPropertyDescriptor(data,key)))}),typeUtils.injectImports(this,requireObj)}}awr.Controller=Controller,$export("function:awr.Controller",Controller,{takeEasy:!1})}__$$errors$$__=__$loadErrors__("$$scope@kernel"),__callModuleMainFn__($main,__$$requires$$__)})}(),function(){var __$$requires$$__=[];__pushToBootQueue__(function(){__$require__(__$$requires$$__,["object:awr.$$core.$$class","class:TypeUtils@types@AwrFactory","class:UX3Type@types@AwrFactory"]);let awr=window.awr||{};function $main(){let typeUtils=$import("class:TypeUtils@types@AwrFactory"),UX3Type=$import("class:UX3Type@types@AwrFactory");class FactoryType{static get $superType(){return new UX3Type("factoryType")}get $superType(){return FactoryType.$superType}constructor(requireObj={}){typeUtils.injectImports(this,requireObj)}static[$abstract("init")](){}$importSuperScope(){delete this.superScope,Object.defineProperty(this,"superScope",{get:()=>$import("object:awr.superScope"),configurable:!0})}}awr.FactoryType=FactoryType,$export("function:awr.FactoryType",FactoryType,{takeEasy:!1})}__$loadErrors__("$$factory@kernel"),__callModuleMainFn__($main,__$$requires$$__)})}(),function(){var __$$requires$$__=[];__pushToBootQueue__(function(){__$require__(__$$requires$$__,["object:awr.$$core.$$class","class:TypeUtils@types@AwrFactory","class:UX3Type@types@AwrFactory"]);let awr=window.awr||{};function $main(){let typeUtils=$import("class:TypeUtils@types@AwrFactory"),UX3Type=$import("class:UX3Type@types@AwrFactory");class LazyModule{static get $superType(){return new UX3Type("lazyModule")}get $superType(){return LazyModule.$superType}constructor(requireObj={}){typeUtils.injectImports(this,requireObj)}$importSuperScope(){delete this.superScope,Object.defineProperty(this,"superScope",{get:()=>$import("object:awr.superScope"),configurable:!0})}}awr.LazyModule=LazyModule,$export("function:awr.LazyModule",LazyModule,{takeEasy:!1})}__$loadErrors__("$$factory@kernel"),__callModuleMainFn__($main,__$$requires$$__)})}(),function(){var __$$requires$$__=[];__pushToBootQueue__(function(){__$require__(__$$requires$$__,["object:awr.$$core.$$class","class:TypeUtils@types@AwrFactory","class:UX3Type@types@AwrFactory"]);let awr=window.awr||{};function $main(){let typeUtils=$import("class:TypeUtils@types@AwrFactory"),UX3Type=$import("class:UX3Type@types@AwrFactory");class Model{static get $superType(){return new UX3Type("model")}get $superType(){return Model.$superType}constructor(requireObj={}){typeUtils.injectImports(this,requireObj)}$importSuperScope(){delete this.superScope,Object.defineProperty(this,"superScope",{get:()=>$import("object:awr.superScope"),configurable:!0})}}awr.Model=Model,$export("function:awr.Model",Model,{takeEasy:!1})}__$loadErrors__("$$factory@kernel"),__callModuleMainFn__($main,__$$requires$$__)})}(),function(){var __$$requires$$__=[];__pushToBootQueue__(function(){__$require__(__$$requires$$__,["object:awr.classManager","class:TypeUtils@types@AwrFactory","class:UX3Type@types@AwrFactory","class:ObservableGenerator@event"]);let awr=window.awr||{};function $main(){let typeUtils=$import("class:TypeUtils@types@AwrFactory"),UX3Type=$import("class:UX3Type@types@AwrFactory"),ObservableGenerator=$import("class:ObservableGenerator@event");class Observable extends ObservableGenerator{static get $superType(){return new UX3Type("observable")}get $superType(){return Observable.$superType}constructor(requireObj={}){super(),typeUtils.injectImports(this,requireObj)}static[$abstract("makeSubscriber")](){}$importSuperScope(){delete this.superScope,Object.defineProperty(this,"superScope",{get:()=>$import("object:awr.superScope"),configurable:!0})}}awr.Observable=Observable,$export("function:awr.Observable",Observable,{takeEasy:!1})}__$loadErrors__("$$scope@kernel"),__callModuleMainFn__($main,__$$requires$$__)})}(),function(){var __$$requires$$__=[];__pushToBootQueue__(function(){__$require__(__$$requires$$__,["object:awr.$$core.$$class","class:TypeUtils@types@AwrFactory","class:UX3Type@types@AwrFactory","class:ObservableGenerator@event"]);let awr=window.awr||{};function $main(){let typeUtils=$import("class:TypeUtils@types@AwrFactory"),UX3Type=$import("class:UX3Type@types@AwrFactory"),ObservableGenerator=$import("class:ObservableGenerator@event");class ObservableTransform extends ObservableGenerator{static get $superType(){return new UX3Type("observable")}get $superType(){return ObservableTransform.$superType}constructor(requireObj={}){super(),typeUtils.injectImports(this,requireObj)}static[$abstract("transform")](){}$importSuperScope(){delete this.superScope,Object.defineProperty(this,"superScope",{get:()=>$import("object:awr.superScope"),configurable:!0})}}awr.ObservableTransform=ObservableTransform,$export("function:awr.ObservableTransform",ObservableTransform,{takeEasy:!1})}__$loadErrors__("$$factory@kernel"),__callModuleMainFn__($main,__$$requires$$__)})}(),function(){var __$$requires$$__=[];__pushToBootQueue__(function(){__$require__(__$$requires$$__,["object:awr.$$core.$$class","class:TypeUtils@types@AwrFactory","class:UX3Type@types@AwrFactory"]);let awr=window.awr||{};function $main(){let typeUtils=$import("class:TypeUtils@types@AwrFactory"),UX3Type=$import("class:UX3Type@types@AwrFactory");class Pipe{static get $superType(){return new UX3Type("pipe")}get $superType(){return Pipe.$superType}constructor(requireObj={}){typeUtils.injectImports(this,requireObj)}static[$abstract("transform")](){}$importSuperScope(){delete this.superScope,Object.defineProperty(this,"superScope",{get:()=>$import("object:awr.superScope"),configurable:!0})}}awr.Pipe=Pipe,$export("function:awr.Pipe",Pipe,{takeEasy:!1})}__$loadErrors__("$$factory@kernel"),__callModuleMainFn__($main,__$$requires$$__)})}(),function(){var __$$requires$$__=[];__pushToBootQueue__(function(){__$require__(__$$requires$$__,["object:awr.$$core.$$class","class:TypeUtils@types@AwrFactory","class:UX3Type@types@AwrFactory"]);let awr=window.awr||{};function $main(){let typeUtils=$import("class:TypeUtils@types@AwrFactory"),UX3Type=$import("class:UX3Type@types@AwrFactory");class Resolvable{static get $superType(){return new UX3Type("resolvable")}get $superType(){return Resolvable.$superType}constructor(requireObj={}){typeUtils.injectImports(this,requireObj)}static[$abstract("resolve")](state){}$importSuperScope(){delete this.superScope,Object.defineProperty(this,"superScope",{get:()=>$import("object:awr.superScope"),configurable:!0})}}awr.Resolvable=Resolvable,$export("function:awr.Resolvable",Resolvable,{takeEasy:!1})}__$loadErrors__("$$factory@kernel"),__callModuleMainFn__($main,__$$requires$$__)})}(),function(){var __$$requires$$__=[];__pushToBootQueue__(function(){__$require__(__$$requires$$__,["object:awr.$$core.$$class","class:TypeUtils@types@AwrFactory","class:UX3Type@types@AwrFactory"]);let awr=window.awr||{};function $main(){let typeUtils=$import("class:TypeUtils@types@AwrFactory"),UX3Type=$import("class:UX3Type@types@AwrFactory");class Route{static get $superType(){return new UX3Type("route")}get $superType(){return Route.$superType}constructor(requireObj={}){typeUtils.injectImports(this,requireObj)}$importSuperScope(){delete this.superScope,Object.defineProperty(this,"superScope",{get:()=>$import("object:awr.superScope"),configurable:!0})}}awr.Route=Route,$export("function:awr.Route",Route,{takeEasy:!1})}__$loadErrors__("$$factory@kernel"),__callModuleMainFn__($main,__$$requires$$__)})}(),function(){var __$$requires$$__=[];__pushToBootQueue__(function(){__$require__(__$$requires$$__,["object:awr.$$core.$$class","class:TypeUtils@types@AwrFactory","class:UX3Type@types@AwrFactory"]);let awr=window.awr||{};function $main(){let Q=this,paramsSym=($import("window:jQuery"),Symbol("segment.$$params")),typeUtils=$import("class:TypeUtils@types@AwrFactory"),UX3Type=$import("class:UX3Type@types@AwrFactory");class Segment{static get $superType(){return new UX3Type("segment")}get $superType(){return Segment.$superType}constructor(requireObj={}){typeUtils.injectImports(this,requireObj),this[paramsSym]={dom:null,context:null,scope:null},Object.defineProperty(this,"dom",{get(){return this[paramsSym].dom},configurable:!1,enumerable:!0}),Object.defineProperty(this,"context",{get(){return this[paramsSym].context},configurable:!1,enumerable:!0}),Object.defineProperty(this,"scope",{get(){return this[paramsSym].scope},configurable:!1,enumerable:!0})}$setScope(scope){this[paramsSym].scope=Q.$objectExist(scope)?scope:null}$setContext(context){this[paramsSym].context=Q.$objectExist(context)?context:null}$setDom(dom){this[paramsSym].dom=Q.$objectExist(dom)||Q.$arrayExist(dom)?dom:null}$importSuperScope(){delete this.superScope,Object.defineProperty(this,"superScope",{get:()=>$import("object:awr.superScope"),configurable:!0})}static[$abstract("setup")](data){}static[$abstract("start")](data){}static[$abstract("ready")](data){}}awr.Segment=Segment,$export("function:awr.Segment",Segment,{takeEasy:!1})}__$loadErrors__("$$factory@kernel"),__callModuleMainFn__($main,__$$requires$$__)})}(),function(){var __$$requires$$__=[];__pushToBootQueue__(function(){__$require__(__$$requires$$__,["object:awr.$$core.$$class","class:TypeUtils@types@AwrFactory","class:UX3Type@types@AwrFactory"]);let awr=window.awr||{};function $main(){let typeUtils=$import("class:TypeUtils@types@AwrFactory"),UX3Type=$import("class:UX3Type@types@AwrFactory");class Service{static get $superType(){return new UX3Type("service")}get $superType(){return Service.$superType}constructor(requireObj={}){typeUtils.injectImports(this,requireObj)}$importSuperScope(){delete this.superScope,Object.defineProperty(this,"superScope",{get:()=>$import("object:awr.superScope"),configurable:!0})}}awr.Service=Service,$export("function:awr.Service",Service,{takeEasy:!1})}__$loadErrors__("$$factory@kernel"),__callModuleMainFn__($main,__$$requires$$__)})}(),function(){var __$$requires$$__=[];__pushToBootQueue__(function(){__$require__(__$$requires$$__,["object:awr.$$core.$$class","class:TypeUtils@types@AwrFactory","class:UX3Type@types@AwrFactory"]);let awr=window.awr||{};function $main(){let Q=this,typeUtils=$import("class:TypeUtils@types@AwrFactory"),UX3Type=$import("class:UX3Type@types@AwrFactory");class Spec{static get $superType(){return new UX3Type("spec")}get $superType(){return Spec.$superType}constructor(requireObj={}){typeUtils.injectImports(this,requireObj);let{assert:assert,expect:expect,should:should}=window.chai,specData=awr.specData=Q.$objectExist(awr.specData)?awr.specData:{};this.it=window.it,this.describe=window.describe,this.chai=window.chai,this.should=should,this.expect=expect,this.assert=assert,specData.registeredSpecCount=Q.$numberExist(specData.registeredSpecCount)?specData.registeredSpecCount+1:1,specData.registeredSpecCount>=specData.specCount&&$export("boolean:awr.specData.allSpecReady",!0)}define(){}$importSuperScope(){delete this.superScope,Object.defineProperty(this,"superScope",{get:()=>$import("object:awr.superScope"),configurable:!0})}}awr.Spec=Spec,$export("function:awr.Spec",Spec,{takeEasy:!1})}__$loadErrors__("$$factory@kernel"),__callModuleMainFn__($main,__$$requires$$__)})}(),function(){var __$$requires$$__=[];__pushToBootQueue__(function(){__$require__(__$$requires$$__,["object:awr.$$core.$$class"]);window.awr;function $main(){let Q=this;$export("class:TypeUtils@types@AwrFactory",class{static injectImports(context,requireObj){Q.$objectExist(requireObj)&&Q.$each(requireObj,(n,name)=>{context[name]=$import(n)})}})}__$loadErrors__("$$scope@kernel"),__callModuleMainFn__($main,__$$requires$$__)})}(),function(){var __$$requires$$__=[];__pushToBootQueue__(function(){__$require__(__$$requires$$__,["object:awr.$$core.$$class"]);let awr=window.awr||{};function $main(){let Q=this;class UX3Type{constructor(name,version){this.$$name=name,this.$$version=version,Q.$defineConstForRegistry(this,"$$name",Q.$stringExist(name)?name:null,!0),Q.$defineConstForRegistry(this,"$$version",Q.$numberExist(version)?version:3,!0)}get name(){return this.$$name}get version(){return this.$$version}}awr.UX3Type=UX3Type,$export("function:awr.UX3Type",UX3Type,{takeEasy:!1}),$export("class:UX3Type@types@AwrFactory",UX3Type)}__$loadErrors__("$$scope@kernel"),__callModuleMainFn__($main,__$$requires$$__)})}(),function(){var __$$requires$$__=[];__pushToBootQueue__(function(){__$require__(__$$requires$$__,["object:awr.$$core.$$class","class:TypeUtils@types@AwrFactory","class:UX3Type@types@AwrFactory"]);let awr=window.awr||{};function $main(){let typeUtils=$import("class:TypeUtils@types@AwrFactory"),UX3Type=$import("class:UX3Type@types@AwrFactory");class Validator{static get $superType(){return new UX3Type("validator")}get $superType(){return Validator.$superType}constructor(requireObj={}){typeUtils.injectImports(this,requireObj)}static[$abstract("isValid")](){}$importSuperScope(){delete this.superScope,Object.defineProperty(this,"superScope",{get:()=>$import("object:awr.superScope"),configurable:!0})}}awr.Validator=Validator,$export("function:awr.Validator",Validator,{takeEasy:!1})}__$loadErrors__("$$factory@kernel"),__callModuleMainFn__($main,__$$requires$$__)})}(),function(){var __$$requires$$__=[];__pushToBootQueue__(function(){__$require__(__$$requires$$__,["object:awr.$$core.$$class","class:TypeUtils@types@AwrFactory","class:UX3Type@types@AwrFactory","object:awr.registryManager","object:awr.eventManager","object:awr.serial","class:Observable@event","object:awr.watchableConsts@event","object:awr.watchableDigestManager"]);let awr=window.awr||{};function $main(){let Q=this,registry=$import("object:awr.registryManager"),serial=$import("object:awr.serial"),Observable=$import("class:Observable@event"),events=$import("object:awr.eventManager"),digestManager=$import("object:awr.watchableDigestManager"),watchableConsts=$import("object:awr.watchableConsts@event"),$on=events.$on,$off=(events.$emit,events.$off),typeUtils=$import("class:TypeUtils@types@AwrFactory"),UX3Type=$import("class:UX3Type@types@AwrFactory"),observerId=0;const regisName=watchableConsts.registryName,wIdSymbolName=watchableConsts.wIdSymbolName,wObsName=watchableConsts.wObservableSymbolName;let mainObs=new Observable(observer=>{let listenerId=`watchable-watcher@AwrFactory-${observerId+=1}`;return $on(watchableConsts.wUpdateEventName,event=>observer.next(event),listenerId),()=>{$off(watchableConsts.wUpdateEventName,listenerId)}},"WatchableMainObservable");class Watchable{static get $superType(){return new UX3Type("watchable")}get $superType(){return Watchable.$superType}constructor(requireObj={}){typeUtils.injectImports(this,requireObj),this[Symbol.for(wIdSymbolName)]=function(){let s,mkId=()=>`WID-${(s=serial.bp.generateOne().split("-"))[0]}-${s[1]}`,id=mkId();for(;registry.$getAll(regisName).$count(nxt=>nxt[Symbol.for(wIdSymbolName)]===id)>0;)id=mkId();return id}(),this[Symbol.for(wObsName)]=mainObs.$filter(event=>Q.$stringExists(event.wId)&&event.wId===this[Symbol.for(wIdSymbolName)]),digestManager.start()}$subscribe(observer,...args){return this[Symbol.for(wObsName)].$subscribe(observer,...args)}$importSuperScope(){delete this.superScope,Object.defineProperty(this,"superScope",{get:()=>$import("object:awr.superScope"),configurable:!0})}}awr.Watchable=Watchable,$export("function:awr.Watchable",Watchable,{takeEasy:!1})}__$loadErrors__("$$factory@kernel"),__callModuleMainFn__($main,__$$requires$$__)})}(),function(){var __$$requires$$__=[];__pushToBootQueue__(function(){let Q=(window.awr||{}).Q;function $main(){$export("class:AuthNext@auth@AwrRoute",class{constructor(){}static getAppNextLink({router:router}){return function(router){return router.$getCurrentState().link}(router)}static makeAuthNext({appNext:appNext,connectionConfig:connectionConfig,router:router}){return function(remoteConfig,appNext,router,defaultInLink){var fr;fr=defaultInLink,defaultInLink=Q.$stringExist(fr)?fr.startsWith("/#")?fr.substring(2):fr.startsWith("/")||fr.startsWith("#")?fr.substring(1):fr:"";let authNext,port=remoteConfig.isDevPort?":8080":"",path=Q.$stringExist(window.location.pathname)?`${window.location.pathname}`:"",serverURL=remoteConfig.serverURL,currentState=router.$getCurrentState(),hashPrefix=remoteConfig.isDevPort?"/#":"/",activeSPAFragment=router.$getFragment();return"history"===router.mode&&(path=router.prefix),path=path.endsWith("/")?path.substring(0,path.length-1):path,Q.$stringExist(path)&&!path.startsWith("/")&&(path=`/${path}`),authNext=`${serverURL}${port}${path}${hashPrefix}${defaultInLink}&it_next=${encURIComp(appNext)}`,router.$routeExist(`in-${currentState.name}`)&&(authNext=`${serverURL}${port}${path}${hashPrefix}in/${activeSPAFragment}`),authNext}(connectionConfig,appNext,router)}static get authNextEncoder(){return encURIComp}})}function encURIComp(cmp){return window.encodeURIComponent(window.btoa(cmp))}__$require__(__$$requires$$__,["function:awr.registerClass","object:awr.registryManager"]),__$loadErrors__("$$route@kernel"),__callModuleMainFn__($main,__$$requires$$__)})}(),function(){var __$$requires$$__=[];__pushToBootQueue__(function(){let Q=(window.awr||{}).Q,busyReloading=!1;function $main(){let events=$import("object:awr.eventManager"),tokenSvc=$import("class:AuthToken@auth@AwrRoute");$export("class:AuthSession@auth@AwrRoute",class{constructor(){}static isAuthSessionBusy(){return busyReloading}static destroy({connectionConfig:connectionConfig,onEnterBusyMode:onEnterBusyMode,onExitBusyMode:onExitBusyMode}){callback(onEnterBusyMode,["Signing out..."]);let token=$import(`token:awr_app_token @decoder: base64:${connectionConfig.decoder}`);$export("token:awr_app_token",null),$export("token:awr_exchange_token",null),connectionConfig.user=null,connectionConfig.isGuest=!0,setTimeout(_=>{events.$emit("auth:events",{type:"sign-out"}),callback(onExitBusyMode,[])},500),tokenSvc.destroyToken({remoteCnf:connectionConfig,token:token}).then(res=>{callback(onExitBusyMode,[])},err=>{callback(onExitBusyMode,[]),console.error(err)})}static create({remoteCnf:remoteCnf,router:router,base64:base64,onEnterBusyMode:onEnterBusyMode,onExitBusyMode:onExitBusyMode}){let encoder=remoteCnf.encoder,state=router.$getCurrentState(),it=function(state,base64){let it=null;if(state&&state.attrs&&Q.$stringExist(state.attrs.it)&&!Q.$stringEqual(state.attrs.it,"none"))try{it=base64.decode(state.attrs.it)}catch(e){console.error("Bad < it > value"),it=null}return it}(state,base64),itNext=function(state,base64){let itNext=null;if(state&&state.attrs&&Q.$stringExist(state.attrs.it_next)&&!Q.$stringEqual(state.attrs.it_next,"none"))try{itNext=base64.decode(state.attrs.it_next)}catch(e){console.error("Auth: Bad < it_next > value"),itNext=null}return itNext}(state,base64),itType=function(state){let itType=null;return state&&state.attrs&&Q.$stringExist(state.attrs.it_type)&&!Q.$stringEqual(state.attrs.it_type,"none")&&(itType=state.attrs.it_type),itType}(state);!Q.$booleanTrue(busyReloading)&&Q.$stringExist(it)&&Q.$stringExist(itType)&&(busyReloading=!0,callback(onEnterBusyMode,["Receiving session..."]),async function({it:it,itType:itType,encoder:encoder,tokenSvc:tokenSvc,remoteCnf:remoteCnf}){let tokenResult,token,userResult,errMsg,trustVal="";try{tokenResult=await tokenSvc.exchangeToken({remoteCnf:remoteCnf,exchange:it})}catch(err){return errMsg="Redirect error: failed to exchange token with server.",err.message=err.message=getCleanErrorMessage(err,errMsg),err}tokenResult.token_type=Q.$stringExist(tokenResult.token_type)?tokenResult.token_type:"Bearer",token=`${tokenResult.token_type} ${tokenResult.access_token}`;try{userResult=await tokenSvc.getTokenUser({remoteCnf:remoteCnf,token:token})}catch(err){return errMsg="Redirect error: server refused to handover the new session data.",err.message=getCleanErrorMessage(err,errMsg),err}return Q.$stringEqual(itType,"long")&&(trustVal="@remember"),$export("token:awr_app_token",`${token} ${trustVal} @encoder: base64:${encoder}`),userResult}({it:it,itType:itType,encoder:encoder,tokenSvc:tokenSvc,remoteCnf:remoteCnf}).then(userResult=>{remoteCnf.user=userResult,remoteCnf.isGuest=!1,events.$emit("auth:events",{type:"sign-in",user:userResult}),callback(onExitBusyMode,[]),redirectToAppNext({itNext:itNext,router:router,onEnterBusyMode:onEnterBusyMode,onExitBusyMode:onExitBusyMode})},err=>{callback(onExitBusyMode,[]),err&&err.message?console.error(err.message):console.error(err),redirectToAppNext({itNext:itNext,router:router,onEnterBusyMode:onEnterBusyMode,onExitBusyMode:onExitBusyMode})}))}})}function callback(fn,args){if(Q.$functionExist(fn))try{fn.apply(void 0,args)}catch(err){console.error(err)}}function getCleanErrorMessage(err,errMsg){let errJSON;return err&&err.responseJSON&&(errJSON=err.responseJSON),errJSON&&errJSON.message&&(errMsg+="\n\t+ Details: "+errJSON.message),errMsg}function redirectToAppNext({itNext:itNext,router:router,onEnterBusyMode:onEnterBusyMode,onExitBusyMode:onExitBusyMode}){let currentState=router.$getCurrentState(),route=router.$getRoute(currentState.name);Q.$objectExist(route)&&route.isInRoute&&router.$routeExist(currentState.name.substring(3))?setTimeout(_=>{router.$go(currentState.name.substring(3),currentState,!0),busyReloading=!1},500):Q.$stringExist(itNext)&&(callback(onEnterBusyMode,["Redirecting..."]),itNext=itNext.startsWith("/")?itNext:`/${itNext}`,setTimeout(_=>{try{router.$pushStateLink(itNext,!0)}catch(e){console.error("Redirect error: failed to redirect to app next.\n\t"+` + Details: Pushing state link failed for [ ${itNext} ]`),console.error(e)}busyReloading=!1,setTimeout(_=>{callback(onExitBusyMode,[])},500)},500))}__$require__(__$$requires$$__,["function:awr.registerClass","object:awr.registryManager","object:awr.eventManager","class:AuthToken@auth@AwrRoute"]),__$loadErrors__("$$route@kernel"),__callModuleMainFn__($main,__$$requires$$__)})}(),function(){var __$$requires$$__=[];__pushToBootQueue__(function(){(window.awr||{}).Q;function $main(){let Q=this,authSession=$import("class:AuthSession@auth@AwrRoute");$export("class:AuthTasks@auth@AwrRoute",class{constructor(){}static initIncomingTokenWatch({router:router,connectionConfig:connectionConfig,onEnterBusyMode:onEnterBusyMode,onExitBusyMode:onExitBusyMode,base64:base64}){let route,obsv=$import("observable:start@states@router"),remoteCnf=connectionConfig;Q.$objectExist(obsv)&&Q.$functionExist(obsv.$subscribe)?(obsv.$subscribe(event=>{event.from&&event.to&&event.from.name===event.to.name||(route=router.$getRoute(event.to.name)).isInRoute&&(event.preventDefault(),authSession.create({remoteCnf:remoteCnf,onEnterBusyMode:onEnterBusyMode,onExitBusyMode:onExitBusyMode,router:router,base64:base64}))}),authSession.create({remoteCnf:remoteCnf,onEnterBusyMode:onEnterBusyMode,onExitBusyMode:onExitBusyMode,router:router,base64:base64})):console.error("Router@AWR: FATAL observable [ success@states@router ] is required for enabling auth session but missing.")}static cloneConfigAsInRoute(cnf){let cloned=Object.assign({},cnf),lParts=cloned.link.split("?"),attrs=lParts.length>1?lParts[1]:"";return Q.$stringExist(attrs)&&!attrs.endsWith("&")&&(attrs+="&"),cloned.name=`in-${cnf.name}`,cloned.link=`in/${lParts[0]}?${attrs}:it&:it_type&:it_next`,cloned.isInRoute=!0,cloned.defaults=Q.$objectExist(cnf.defaults)?cnf.defaults:{params:{},attrs:{}},cloned.defaults.attrs=Q.$objectExist(cnf.defaults.attrs)?cnf.defaults.attrs:{},cloned.defaults.attrs.it="none",cloned.defaults.attrs.it_type="none",cloned.defaults.attrs.it_next="none",cloned.resolve={},cloned.isDefault=!1,cloned}})}__$require__(__$$requires$$__,["function:awr.registerClass","object:awr.registryManager","class:AuthSession@auth@AwrRoute"]),__$loadErrors__("$$route@kernel"),__callModuleMainFn__($main,__$$requires$$__)})}(),function(){var __$$requires$$__=[];__pushToBootQueue__(function(){window.awr;function $main(){let Q=this;$export("class:AuthToken@auth@AwrRoute",class{constructor(){}static destroyToken({remoteCnf:remoteCnf,token:token}){let server=$import("service:serverCall");return Q.$stringExist(token)?server.$delete({url:`${remoteCnf.authURL}/token`,headers:{authorization:token}}):Promise.reject("Destroy token: Bad token!")}static getTokenUser({remoteCnf:remoteCnf,token:token}){let server=$import("service:serverCall");return Q.$stringExist(token)?server.$get({url:`${remoteCnf.authURL}/token_user`,headers:{authorization:token}}):Promise.reject("Get token user: Bad token!")}static exchangeToken({remoteCnf:remoteCnf,exchange:exchange}){return $import("service:serverCall").$post({url:`${remoteCnf.authURL}/token_exchange`,data:{key:exchange}})}})}__$require__(__$$requires$$__,["function:awr.registerClass","object:awr.registryManager"]),__$loadErrors__("$$route@kernel"),__callModuleMainFn__($main,__$$requires$$__)})}(),function(){var __$$requires$$__=[];__pushToBootQueue__(function(){window.awr;function $main(){let Q=this;class StateFragment{constructor(){}static getFragment({mode:mode,prefix:prefix=""}){let rootURL=StateFragment.getRootURL({mode:mode,prefix:prefix}),fragment=window.location.href.substring(rootURL.length).toString().replace(/\/$/,"").replace(/^\//,"");return"hash"===mode&&(fragment.startsWith("?")||fragment.startsWith("/?"))&&(fragment=fragment.split("#")[1],fragment=Q.$stringExist(fragment)?fragment:""),fragment.startsWith("/#")?fragment=fragment.substring(2):(fragment.startsWith("/")||fragment.startsWith("#"))&&(fragment=fragment.substring(1)),fragment}static extractAttributesFromFragment(fragment,keys){if(fragment=getCleanFragment(fragment),!Q.$stringExist(fragment))return{};let attrs={},attrStr=fragment.split("?").length>1?fragment.split("?")[1]:null;return Q.$each(Q.$stringExist(attrStr)?attrStr.split("&"):[],(n,i)=>{let nxtPair=(Q.$isQPrimitiveVal(n)?Q.$getQPrimitiveVal(n):n).split("="),nxtKey=nxtPair[0],nxtValue=nxtPair.length>1?nxtPair[1]:null;(Q.$arrayExist(keys)&&Q.$setContainsString(keys,nxtKey)||!Q.$arrayExist(keys))&&(attrs[nxtKey]=nxtValue)}),attrs}static extractParamsFromFragment(fragment,link){if(fragment=getCleanFragment(fragment),!Q.$stringExist(fragment))return{};let params={},pathStr=fragment.split("?").length>0?fragment.split("?")[0]:null,paramKeys=StateFragment.getParamKeysFromRouteLink(link,!0),pathArray=Q.$stringExist(pathStr)?pathStr.split("/"):[];return Q.$each(paramKeys,(n,i)=>{let nxtKey=Q.$isQPrimitiveVal(n)?Q.$getQPrimitiveVal(n):n,cond=nxtKey.pathIndex&&nxtKey.pathIndex<pathArray.length;params[nxtKey.name]=cond?pathArray[nxtKey.pathIndex]:null}),params}static getAttributes(link,keys){let attr_array=[];try{attr_array=link.split("?")[1].split("&")}catch(e){}return Q.$arrayNotEmpty(attr_array)?Q.$collect(attr_array,(collected,nxt)=>{collected=Q.$objectExist(collected)?collected:{};let nxtKey=nxt.split("=")[0],nxtValue=nxt.split("=")[1];return Q.$setContainsString(keys,nxtKey)&&(collected[nxtKey]=nxtValue),collected}):{}}static getRootURL({mode:mode,prefix:prefix=""}){let root="",loc=window.location,port=loc.port,protocol=loc.protocol,host=loc.host,pathName=loc.pathname;return"/"===pathName&&(pathName=""),pathName.startsWith("/")&&(pathName=pathName.substring(1)),pathName.endsWith("/")&&(pathName=pathName.substring(0,pathName.length-1)),`${protocol}//${root=(root=Q.$stringEqual(mode,"history")?Q.$stringExist(port)?`${host.replace(`:${port}`,"")}:${port}${getCleanPart(prefix)}`:`${host}${getCleanPart(prefix)}`:Q.$stringExist(port)?`${host.replace(`:${port}`,"")}:${port}/${pathName}`:`${host}/${pathName}`).endsWith("/")?root.substring(0,root.length-1):root}`}static getParamKeysFromRouteLink(link,addIndex){let pathParts=[];try{pathParts=link.split("?")[0].split("/")}catch(e){}return Q.$arrayNotEmpty(pathParts)?Q.$map(pathParts,function(){let nxt=Q.$isQPrimitiveVal(this)?this.value:this;if(nxt.startsWith(":")){let nextKey=nxt.substring(1);return Q.$booleanTrue(addIndex)&&(nextKey={name:nextKey,pathIndex:this.__$$index$$__}),nextKey}}):[]}}function getCleanFragment(fragment){let part=null;return Q.$stringExist(fragment)?(part=fragment.startsWith("/#")?fragment.substring(2):fragment.split("#")[1],!Q.$stringExist(part)&&Q.$stringExist(fragment)?fragment:Q.$stringExist(part)?part:null):null}function getCleanPart(part){return!Q.$stringExist(part)||1===part.length&&"/"===part?"/":(part.startsWith("/")||(part=`/${part}`),part.endsWith("/")||(part+="/"),part)}$export("class:StateFragment@commons@AwrRoute",StateFragment)}__$require__(__$$requires$$__,["function:awr.registerClass"]),__$loadErrors__("$$route@kernel"),__callModuleMainFn__($main,__$$requires$$__)})}(),function(){var __$$requires$$__=[];__pushToBootQueue__(function(){let awr=window.awr||{};__$loadErrors__("$$route@kernel"),__$require__(__$$requires$$__,["function:awr.factory.$registerObservable","object:awr.eventManager","object:awr.routeManager","observable:states@router"]);const obsName="error@states@router";function $main(){let Q=this;class Error extends awr.ObservableTransform{static get $require(){return{states:"observable:states@router"}}static get name(){return obsName}constructor(){super(Error.$require)}transform(){return this.states.$filter(event=>event&&Q.$stringEqual(event.eventName,"stateChangeError"))}}$export(`observable:${obsName}`,Error)}__callModuleMainFn__($main,__$$requires$$__)})}(),function(){var __$$requires$$__=[];__pushToBootQueue__(function(){let awr=window.awr||{};__$loadErrors__("$$route@kernel"),__$require__(__$$requires$$__,["function:awr.factory.$registerObservable","object:awr.eventManager","object:awr.routeManager","observable:states@router"]);const obsName="notAuthorized@states@router";function $main(){let Q=this;class NotAuthorized extends awr.ObservableTransform{static get $require(){return{states:"observable:states@router"}}static get name(){return obsName}constructor(){super(NotAuthorized.$require)}transform(){return this.states.$filter(event=>event&&Q.$stringEqual(event.eventName,"stateAuthorizationFailed"))}}$export(`observable:${obsName}`,NotAuthorized)}__callModuleMainFn__($main,__$$requires$$__)})}(),function(){var __$$requires$$__=[];__pushToBootQueue__(function(){let awr=window.awr||{};__$loadErrors__("$$route@kernel"),__$require__(__$$requires$$__,["function:awr.factory.$registerObservable","object:awr.eventManager","object:awr.routeManager","observable:states@router"]);const obsName="notFound@states@router";function $main(){let Q=this;class NotFound extends awr.ObservableTransform{static get $require(){return{states:"observable:states@router"}}static get name(){return obsName}constructor(){super(NotFound.$require)}transform(){return this.states.$filter(event=>event&&Q.$stringEqual(event.eventName,"stateNotFound"))}}$export(`observable:${obsName}`,NotFound)}__callModuleMainFn__($main,__$$requires$$__)})}(),function(){var __$$requires$$__=[];__pushToBootQueue__(function(){let awr=window.awr||{};__$loadErrors__("$$route@kernel"),__$require__(__$$requires$$__,["function:awr.factory.$registerObservable","object:awr.eventManager","object:awr.routeManager","observable:states@router"]);const obsName="start@states@router";function $main(){let Q=this;class Start extends awr.ObservableTransform{static get $require(){return{states:"observable:states@router"}}static get name(){return obsName}constructor(){super(Start.$require)}transform(){return this.states.$filter(event=>event&&Q.$stringEqual(event.eventName,"stateChangeStart"))}}$export(`observable:${obsName}`,Start)}__callModuleMainFn__($main,__$$requires$$__)})}(),function(){var __$$requires$$__=[];__pushToBootQueue__(function(){let awr=window.awr||{};__$loadErrors__("$$route@kernel"),__$require__(__$$requires$$__,["function:awr.factory.$registerObservable","object:awr.eventManager","object:awr.routeManager","function:awr.Observable"]);const obsName="states@router";function $main(){let Q=this,events=$import("object:awr.eventManager"),$on=events.$on,$off=(events.$emit,events.$off),listenerIdPrefix="state@router-watcher",observerId=0;class States extends awr.Observable{static get $require(){return{}}static get name(){return obsName}constructor(name){super(States.$require)}makeSubscriber(){return observer=>{let listenerId=`${listenerIdPrefix}-${observerId+=1}`,eventTypes=["stateChangeStart","stateChangeSuccess","stateChangeError","stateAuthorizationFailed","stateNotFound"];return Q.$each(eventTypes,(nxt,index)=>{$on(`router:${nxt}`,event=>observer.next(event),listenerId)}),()=>{Q.$each(eventTypes,(nxt,index)=>{$off(`router:${nxt}`,listenerId)})}}}}$export(`observable:${obsName}`,States)}__callModuleMainFn__($main,__$$requires$$__)})}(),function(){var __$$requires$$__=[];__pushToBootQueue__(function(){let awr=window.awr||{};__$loadErrors__("$$route@kernel"),__$require__(__$$requires$$__,["function:awr.factory.$registerObservable","object:awr.eventManager","object:awr.routeManager","observable:states@router"]);const obsName="success@states@router";function $main(){let Q=this;class Success extends awr.ObservableTransform{static get $require(){return{states:"observable:states@router"}}static get name(){return obsName}constructor(){super(Success.$require)}transform(){return this.states.$filter(event=>event&&Q.$stringEqual(event.eventName,"stateChangeSuccess"))}}$export(`observable:${obsName}`,Success)}__callModuleMainFn__($main,__$$requires$$__)})}(),function(){var __$$requires$$__=[];__pushToBootQueue__(function(){let awr=window.awr||{},constTable={$$SUPER_SCOPE_INIT$$:!1};function $main(){const scopeParamsKeyName="__$$params$$__";let Q=this,stats=($import("window:jQuery"),awr.basicStats=Q.$objectExists(awr.basicStats)?awr.basicStats:{}),utils=$import("class:ScopeAPIUtils@api@AwrScope"),coreAPI=$import("class:ScopeCoreAPI@api@AwrScope"),bindAPI=$import("class:ScopeBindAPI@api@AwrScope"),validationAPI=$import("class:ScopeValidationAPI@api@AwrScope"),execAPI=$import("class:ScopeExecAPI@api@AwrScope"),segmentAPI=$import("class:ScopeSegmentAPI@api@AwrScope"),watchableAPI=$import("class:ScopeWatchableAPI@api@AwrScope"),insertAPI=$import("class:ScopeInsertAPI@api@AwrScope");function AWRScopeAPI(SCOPE_ID,scopeManager){utils.scopeInit(this,{constTable:constTable,SCOPE_ID:SCOPE_ID,scopeManager:scopeManager,paramsKey:scopeParamsKeyName}),scopeManager.$registerReadyScope(this,"SUPER_INIT"===SCOPE_ID)}Object.defineProperty(AWRScopeAPI,"superScopeId",{get:()=>"__SUPER__@AWRScope",configurable:!1,enumerable:!1}),AWRScopeAPI.prototype.$getParamsKey=function(){return scopeParamsKeyName},AWRScopeAPI.prototype.$getParams=function(){return this[Symbol.for(scopeParamsKeyName)]},AWRScopeAPI.prototype.$setControllerName=function(name){if(!Q.$stringExist(name))return;this.$getParams().__$$CTR_NAME$$__=name},AWRScopeAPI.prototype.$getControllerName=function(){let params=this.$getParams();return Q.$stringExist(params.__$$CTR_NAME$$__)?params.__$$CTR_NAME$$__:" < NO SCOPE CTR NAME >"},AWRScopeAPI.prototype.$setTemporaryFlag=function(){this.$getParams().__$$TEMPORARY$$__=!0},AWRScopeAPI.prototype.$removeTemporaryFlag=function(){this.$getParams().__$$TEMPORARY$$__=!1},AWRScopeAPI.prototype.$hasTemporaryFlag=function(){let params=this.$getParams();return Q.$booleanTrue(params.__$$TEMPORARY$$__)},AWRScopeAPI.prototype.$destroy=function(){let compManager=$import("object:awr.compManager");coreAPI.$destroy(this,{compManager:compManager,scopeManager:this.scopeManager})},AWRScopeAPI.prototype.$clean=function(){coreAPI.$clean(this,{eventManager:$import("object:awr.eventManager"),bindAPI:bindAPI,watchableAPI:watchableAPI})},AWRScopeAPI.prototype.$makeWatchable=function(context){return watchableAPI.makeWatchable(this,context)},AWRScopeAPI.prototype.$removeWatchable=function(watchable){return watchableAPI.removeWatchable(this,watchable)},AWRScopeAPI.prototype.$bind=function(key,options){bindAPI.bind(this,key,options)},AWRScopeAPI.prototype.$addValidation=function({validatorName:validatorName="",val:val,context:context,key:key,elem:elem}={}){validationAPI.$addValidation(this,{validatorName:validatorName,val:val,context:context,key:key,elem:elem})},AWRScopeAPI.prototype.$validate=function(keys,confirmVal){return validationAPI.$validate(this,{keys:keys,confirmVal:confirmVal})},AWRScopeAPI.prototype.$isValid=function(keys){return this.$validate(keys).errors.length<1},AWRScopeAPI.prototype.$defineSubtype=function(typeName,type){execAPI.$defineSubtype(this,{typeName:typeName,type:type})},AWRScopeAPI.prototype.$hasDefinedSubType=function(typeName){return execAPI.$hasDefinedSubType(this,{typeName:typeName})},AWRScopeAPI.prototype.$setType=function(typeName){execAPI.$setType(this,{typeName:typeName})},AWRScopeAPI.prototype.$getType=function(){return execAPI.$getType(this)},AWRScopeAPI.prototype.$getFromType=function(key){return execAPI.$getFromType(this,{key:key})},AWRScopeAPI.prototype.$fn=function(fnInterface){execAPI.$fn(this,{fnInterface:fnInterface})},AWRScopeAPI.prototype.$define=function(key,val,recompile=!0){execAPI.$define(this,{key:key,val:val,recompile:recompile})},AWRScopeAPI.prototype.$setTimeout=function(fn,time,recompile=!0){execAPI.$setTimeout(this,{fn:fn,time:time,recompile:recompile})},AWRScopeAPI.prototype.$setInterval=function(fn,time,recompile=!0){return execAPI.$setInterval(this,{fn:fn,time:time,recompile:recompile})},AWRScopeAPI.prototype.$safeCall=function(fnName,args,recompile=!0,key="",onErr=null){execAPI.$safeCall(this,{fnName:fnName,args:args,recompile:recompile,key:key,onErr:onErr})},AWRScopeAPI.prototype.$preventDefault=function(...args){if(Q.$functionExists(this.$preventDefaultImplementor))return this.$preventDefaultImplementor(args)},AWRScopeAPI.prototype.$disableDefaultActionAutoRecompile=function(){this.$getParams().$$recompileAfterDomAction=!1},AWRScopeAPI.prototype.$enableDefaultActionAutoRecompile=function(){this.$getParams().$$recompileAfterDomAction=!0},AWRScopeAPI.prototype.$getScopeId=function(){return this.$getParams().$$AWR_SCOPE_ID$$},AWRScopeAPI.prototype.$getParent=function(){let params=this.$getParams(),parent=params.$$parent;return params.$isSuperScope&&Q.$objectExist(awr.superScope)&&this===awr.superScope?null:!Q.$objectExist(parent)&&Q.$objectExist(awr.superScope)?awr.superScope:parent},AWRScopeAPI.prototype.$hasAncestor=function(scope){return coreAPI.$hasAncestor(this,{scopeManager:this.scopeManager,potentialParent:scope})},AWRScopeAPI.prototype.$setRecompileAction=function(fn){if(Q.$functionExist(fn))return this.$getParams().$recompileAction=fn},AWRScopeAPI.prototype.$recompile=function(){coreAPI.$recompile(this)},AWRScopeAPI.prototype.$getAllSegments=function(){return this.$getParams().$$segments},AWRScopeAPI.prototype.$getUniqueSegmentId=function(){return segmentAPI.$getUniqueSegmentId(this)},AWRScopeAPI.prototype.$registerSegment=function(segment){segmentAPI.$registerSegment(this,segment)},AWRScopeAPI.prototype.$getSegment=function(segmentId){return segmentAPI.$getSegment(this,segmentId)},AWRScopeAPI.prototype.$updateSegments=function(segmentId){segmentAPI.$updateSegments(this,segmentId)},AWRScopeAPI.prototype.$removeSegments=function(segmentId){segmentAPI.$removeSegments(this,segmentId)},AWRScopeAPI.prototype.$bindSegments=function(key,{onNotRecognizedTypeEvent:onNotRecognizedTypeEvent,scopeName:scopeName,isFindAll:isFindAll=!1,query:query,acceptEmptyQuery:acceptEmptyQuery,queryAcceptor:queryAcceptor,onItemCreated:onItemCreated,itemRemoveSignal:itemRemoveSignal}){segmentAPI.$bindSegments(this,key,{onNotRecognizedTypeEvent:onNotRecognizedTypeEvent,scopeName:scopeName,isFindAll:isFindAll,query:query,acceptEmptyQuery:acceptEmptyQuery,queryAcceptor:queryAcceptor,onItemCreated:onItemCreated,itemRemoveSignal:itemRemoveSignal})},AWRScopeAPI.prototype.$append=function({selector:selector,compName:compName,parentVars:parentVars,nodeName:nodeName,scopeType:scopeType,isSegment:isSegment,setItemAs:setItemAs,dataContext:dataContext,setupName:setupName,templatePath:templatePath,html:html,attributes:attributes,bind:bind,bindOptions:bindOptions,segment:segment}){return insertAPI.$append(this,{selector:selector,compName:compName,parentVars:parentVars,nodeName:nodeName,scopeType:scopeType,isSegment:isSegment,setItemAs:setItemAs,dataContext:dataContext,setupName:setupName,templatePath:templatePath,html:html,attributes:attributes,bind:bind,bindOptions:bindOptions,segment:segment})},AWRScopeAPI.prototype.$prepend=function({selector:selector,compName:compName,parentVars:parentVars,nodeName:nodeName,scopeType:scopeType,isSegment:isSegment,setItemAs:setItemAs,dataContext:dataContext,setupName:setupName,templatePath:templatePath,html:html,attributes:attributes,bind:bind,bindOptions:bindOptions,segment:segment}){return insertAPI.$prepend(this,{selector:selector,compName:compName,parentVars:parentVars,nodeName:nodeName,scopeType:scopeType,isSegment:isSegment,setItemAs:setItemAs,dataContext:dataContext,setupName:setupName,templatePath:templatePath,html:html,attributes:attributes,bind:bind,bindOptions:bindOptions,segment:segment})},AWRScopeAPI.prototype.$replace=function({selector:selector,compName:compName,parentVars:parentVars,nodeName:nodeName,scopeType:scopeType,isSegment:isSegment,setItemAs:setItemAs,dataContext:dataContext,setupName:setupName,templatePath:templatePath,html:html,attributes:attributes,bind:bind,bindOptions:bindOptions,segment:segment}){return insertAPI.$replace(this,{selector:selector,compName:compName,parentVars:parentVars,nodeName:nodeName,scopeType:scopeType,isSegment:isSegment,setItemAs:setItemAs,dataContext:dataContext,setupName:setupName,templatePath:templatePath,html:html,attributes:attributes,bind:bind,bindOptions:bindOptions,segment:segment})},AWRScopeAPI.prototype.$init=function(fn){utils.addEventListener(this,"ready",fn,"init@ready@scope"),utils.addEventListener(this,"recompile",fn,"init@recompile@scope")},AWRScopeAPI.prototype.$ready=function(fn,id){utils.addEventListener(this,"ready",fn,id)},AWRScopeAPI.prototype.$onValidation=function(fn,id){console.warn("@DEPARTED $onValidation@Scope@AWR use $addValidationListener instead!"),utils.addEventListener(this,"validation",fn,id)},AWRScopeAPI.prototype.$addFlushListener=function(fn,id){utils.addEventListener(this,"flush",fn,id)},AWRScopeAPI.prototype.$removeFlushListener=function(fn){utils.removeEventListener(this,"flush",fn)},AWRScopeAPI.prototype.$addValidationListener=function(fn,id){utils.addEventListener(this,"validation",fn,id)},AWRScopeAPI.prototype.$removeValidationListener=function(fn){utils.removeEventListener(this,"validation",fn)},AWRScopeAPI.prototype.$addRecompileListener=function(fn,id){utils.addEventListener(this,"recompile",fn,id)},AWRScopeAPI.prototype.$addBeforeRecompileListener=function(fn,id){return coreAPI.$addBeforeRecompileListener(this,{fn:fn,id:id})},AWRScopeAPI.prototype.$removeRecompileListener=function(fn){utils.removeEventListener(this,"recompile",fn)},AWRScopeAPI.prototype.$importProperty=function(keys){coreAPI.$importProperty(this,{keys:keys,scopeManager:this.scopeManager})},AWRScopeAPI.prototype.$findProperty=function(key,removeNull){return coreAPI.$findProperty(this,{scopeManager:this.scopeManager,key:key,removeNull:removeNull})},AWRScopeAPI.prototype.$getOwnData=function(){return coreAPI.$getOwnData(this)},AWRScopeAPI.prototype.$setParent=function(parent){if(Q.$objectExist(parent))return Q.$definePropertyForRegistry(this.$getParams(),"$$parent",parent)},AWRScopeAPI.prototype.$setDom=function(dom,replace=!0){return Q.$booleanTrue(replace)&&Q.$replaceDom(this.$getDom(),dom),Q.$definePropertyForRegistry(this.$getParams(),"$$dom",dom)},AWRScopeAPI.prototype.$getDom=function(){return this.$getParams().$$dom},AWRScopeAPI.prototype.$isolate=function(){return Q.$defineConstForRegistry(this.$getParams(),"$isIsolated",!0,!0)},AWRScopeAPI.prototype.$isIsolated=function(){return this.$getParams().$isIsolated},AWRScopeAPI.prototype.$isPresent=function(){let scopeManager=this.scopeManager;return Q.$objectExist(scopeManager)&&scopeManager.$isPresent(this)},AWRScopeAPI.prototype.$isFlushed=function(){return Q.$booleanTrue(this.$getParams().$$isFlushed)},AWRScopeAPI.prototype.$isReady=function(){return Q.$booleanTrue(this.$getParams().$$isReady)},AWRScopeAPI.prototype.$enablePreferScopeForDataBinding=function(){this.$getParams().$preferScopeForDataBinding=!0},AWRScopeAPI.prototype.$disablePreferScopeForDataBinding=function(){this.$getParams().$preferScopeForDataBinding=!1},$export("class:ScopeAPI@api@AwrScope",AWRScopeAPI),stats.scopeAPIRegisTime=(new Date).getTime()}__$loadErrors__("$$scope@kernel"),__$require__(__$$requires$$__,["function:awr.registerClass","class:ScopeBindAPI@api@AwrScope","class:ScopeAPIUtils@api@AwrScope","class:ScopeCoreAPI@api@AwrScope","class:ScopeValidationAPI@api@AwrScope","class:ScopeExecAPI@api@AwrScope","class:ScopeSegmentAPI@api@AwrScope","class:ScopeInsertAPI@api@AwrScope","class:ScopeWatchableAPI@api@AwrScope","object:awr.registryManager"]),__callModuleMainFn__($main,__$$requires$$__)})}(),function(){var __$$requires$$__=[],__$$errors$$__=null;function $errorOut(errName,replaces){return __$errorOut__(__$$errors$$__,errName,replaces)}__pushToBootQueue__(function(){__$require__(__$$requires$$__,["object:awr.$$core.$$class","object:awr.eventManager","object:awr.watchableConsts@event"]);const superScopeId="__SUPER__@AWRScope";window.awr;function $main(){let Q=this,events=($import("window:jQuery"),$import("object:awr.eventManager")),watchableConsts=$import("object:awr.watchableConsts@event"),$on=events.$on,$off=(events.$emit,events.$off);class ScopeAPIUtils{constructor(){}static runBeforeRecompileCallbacks(scope){let params=scope.$getParams();Q.$objectExist(params.$$beforeRecompiles$$)&&Q.$forEachProperty(params.$$beforeRecompiles$$,(val,key)=>{try{Q.$functionExist(val)&&val.call(scope,params.$$compileCount)}catch(e){$errorOut("badBeforeRecompileCallback",[{key:"scopeId",value:scope.$getScopeId()},{key:"errMsg",value:e}])}})}static emitScopeEvent(scope,eventName,evtMessage){let eventSvc=$import("object:awr.eventManager");Q.$objectExist(eventSvc)&&Q.$functionExist(eventSvc.$emit)&&eventSvc.$emit(`${scope.$getScopeId()}:${eventName}`,evtMessage)}static addEventListener(scope,eventName,fn,id){Q.$waitForComps(["object:awr.eventManager"],6e3).then(msg=>{let eventSvc=$import("object:awr.eventManager");Q.$objectExist(eventSvc)&&Q.$functionExist(eventSvc.$on)&&eventSvc.$on(`${scope.$getScopeId()}:${eventName}`,fn,id)},err=>{})}static removeEventListener(scope,eventName,fn){Q.$waitForComps(["object:awr.eventManager"],6e3).then(msg=>{let eventSvc=$import("object:awr.eventManager");Q.$objectExist(eventSvc)&&Q.$functionExist(eventSvc.$off)&&eventSvc.$off(`${scope.$getScopeId()}:${eventName}`,fn)},err=>{})}static scopeInit(scope,{constTable:constTable,SCOPE_ID:SCOPE_ID,scopeManager:scopeManager,paramsKey:paramsKey}){scope[Symbol.for(paramsKey)]={$$dom:null,$$isReady:!1,$$isFlushed:!1,$$recompileAfterDomAction:!0,$$readyWaitTime:0,$$compileCount:0,$$validations:Q.$asCollection([]),$$segments:Q.$asCollection([])},scope.scopeManager=scopeManager;let wDieSignalListenerId,params=scope.$getParams();params.$$AWR_SCOPE_ID$$=null,params.$isIsolated=!1,params.$preferScopeForDataBinding=!1,params.$readyCheckInterval=setInterval(()=>{let scopeId=scope.$getScopeId();Q.$booleanTrue(params.$$isReady)?clearInterval(params.$readyCheckInterval):(scope.$isPresent()?(Q.$defineConstForRegistry(params,"$$isReady",!0),clearInterval(params.$readyCheckInterval),ScopeAPIUtils.emitScopeEvent(scope,"ready",{message:`scope ${scope.$getScopeId()} is ready!`})):Q.$objectExist(scopeManager)&&(params.$$readyWaitTime>3e3&&!Q.$objectExist(scopeManager.$getScope(scopeId))?(params.$$readyWaitTime=Q.$numberExist(Number.MAX_SAFE_INTEGER)?Number.MAX_SAFE_INTEGER:1e7,clearInterval(params.$readyCheckInterval)):params.$$readyWaitTime>5e3&&scopeManager.$flush()),params.$$readyWaitTime+=100)},100),(Q.$stringEqual(SCOPE_ID,superScopeId)||Q.$stringEqual(SCOPE_ID,"SUPER_INIT"))&&Q.$booleanTrue(constTable.$$SUPER_SCOPE_INIT$$)?$errorOut("scopeForbiddenSuperSet"):Q.$stringExist(SCOPE_ID)?(Q.$defineConstForRegistry(params,"$$AWR_SCOPE_ID$$",Q.$stringEqual(SCOPE_ID,"SUPER_INIT")?superScopeId:SCOPE_ID,!0),Q.$stringEqual(params.$$AWR_SCOPE_ID$$,superScopeId)?(params.$isSuperScope=!0,params.$isIsolated=!1,Q.$defineConstForRegistry(constTable,"$$SUPER_SCOPE_INIT$$",!0,!0),Q.$defineConstForRegistry(params,"$isSuperScope",!0,!0),Q.$defineConstForRegistry(params,"$isIsolated",!1,!0),Q.$defineConstForRegistry(params,"$$parent",null,!0)):Q.$defineConstForRegistry(params,"$isSuperScope",!1,!0),wDieSignalListenerId=`scp-w-die-sig-listener${params.$$AWR_SCOPE_ID$$}`,$on(watchableConsts.wUpdateEventName,event=>{if(event.message!==watchableConsts.wDiedMessage)return;let tobeRemovedSubscriptions=Q.$asCollection([]);Q.$each(scope.$getParams().$$subscriptions$$,(sub,subId)=>{subId.startsWith(event.subscriptionPrefix)&&tobeRemovedSubscriptions.push({id:subId,timestamp:sub&&Q.$numberExists(sub.timestamp)?sub.timestamp:null})}),function(scope,list){setTimeout(_=>{list.$each(rmSub=>{Q.$each(scope.$getParams().$$subscriptions$$,(sub,subId)=>{if(Q.$objectExists(sub)&&Q.$numberExists(sub.timestamp)&&subId===rmSub.id&&sub.timestamp===rmSub.timestamp&&Q.$functionExists(sub.$unsubscribe))try{sub.$unsubscribe(),delete scope.$getParams().$$subscriptions$$[subId]}catch(err){$errorOut("errorInWatchableUnsubscribe",[{key:"scopeId",value:scope.$getScopeId()},{key:"subscriptionId",value:subId},{key:"errMsg",value:err}])}})})},2e3)}(scope,tobeRemovedSubscriptions)},wDieSignalListenerId),scope.$addFlushListener(_=>{$off(watchableConsts.wUpdateEventName,wDieSignalListenerId)})):$errorOut("scopeBadIDForReg")}}$export("class:ScopeAPIUtils@api@AwrScope",ScopeAPIUtils)}__$$errors$$__=__$loadErrors__("$$scope@kernel"),__callModuleMainFn__($main,__$$requires$$__)})}(),function(){var __$$requires$$__=[],__$$errors$$__=null;function $errorOut(errName,replaces){return __$errorOut__(__$$errors$$__,errName,replaces)}__pushToBootQueue__(function(){let Q=(window.awr||{}).Q;function $main(){let bindUtils=$import("class:ScopeBindUtils@api@AwrScope"),$=$import("window:jQuery");$export("class:ScopeBindAPI@api@AwrScope",class{constructor(){}static flushBinders(scope){let params=scope.$getParams(),subscriptions=params.$$subscriptions$$,anoSubscriptions=params.$$anoSubscriptions$$;Q.$objectExist(subscriptions)&&(Q.$forEachProperty(subscriptions,(val,key)=>{if(Q.$functionExist(val.$unsubscribe))try{val.$unsubscribe()}catch(e){$errorOut("failedUnsubscribeAttempt",[{key:"scopeId",value:scope.$getScopeId()},{key:"errMsg",value:e},{key:"element",value:$(`[awr-scope-id="${scope.$getScopeId()}"]`)}])}}),subscriptions={}),Q.$arrayExist(anoSubscriptions)&&(Q.$forEachIndex(anoSubscriptions,(val,index)=>{if(Q.$functionExist(val.$unsubscribe))try{val.$unsubscribe()}catch(e){$errorOut("failedUnsubscribeAttempt",[{key:"scopeId",value:scope.$getScopeId()},{key:"errMsg",value:e},{key:"element",value:$(`[awr-scope-id="${scope.$getScopeId()}"]`)}])}}),anoSubscriptions=[])}static bind(scope,key,{scopeName:scopeName,uniqueRegisKey:uniqueRegisKey,isFindAll:isFindAll=!1,query:query,acceptEmptyQuery:acceptEmptyQuery=!1,queryAcceptor:queryAcceptor,onEvent:onEvent}={}){let subscription,oldSubscription,regisKey,noCompileObservables,decidedScopeName,params=scope.$getParams(),observable=Q.$stringExist(key)?$import(key):null;return noCompileObservables=["observable:states@router","observable:start@states@router","observable:success@states@router","observable:error@states@router","observable:notFound@states@router","observable:notAuthorized@states@router"],Q.$objectExist(key)&&Q.$functionExist(key.$subscribe)&&(observable=key),decidedScopeName=Q.$stringExist(scopeName)?scopeName:bindUtils.makeDefaultScopeNameForWatchable(key),!(!(Q.$stringExist(scopeName)||Q.$functionExist(onEvent)||Q.$stringExist(decidedScopeName))||(Q.$functionExist(onEvent)||Q.$stringExist(scopeName)||(scopeName=decidedScopeName),Q.$objectExist(observable)&&Q.$functionExist(observable.$subscribe)?(Q.$setContainsString(["__$$params$$__","scopeManager"],scopeName)&&(scopeName=null),params.$$subscriptions$$=Q.$objectExist(params.$$subscriptions$$)?params.$$subscriptions$$:{},params.$$anoSubscriptions$$=Q.$arrayExist(params.$$anoSubscriptions$$)?params.$$anoSubscriptions$$:[],regisKey=bindUtils.getRegisKey({observable:observable,scopeName:scopeName,key:key,uniqueRegisKey:uniqueRegisKey}),subscription=observable.$subscribe({next:event=>{bindUtils.observableBinderNext({scopeName:scopeName,scope:scope,observable:observable,event:event,isFindAll:isFindAll,query:query,acceptEmptyQuery:acceptEmptyQuery,queryAcceptor:queryAcceptor,noCompileObservables:noCompileObservables,key:key,isNoCompile:!1,onEvent:onEvent})},error:err=>{},complete:msg=>{}}),Q.$functionExist(subscription.$unsubscribe)?(Q.$stringExist(regisKey)?(oldSubscription=params.$$subscriptions$$[regisKey],Q.$objectExist(oldSubscription)&&Q.$functionExist(oldSubscription.$unsubscribe)&&oldSubscription.$unsubscribe(),params.$$subscriptions$$[regisKey]=subscription):params.$$anoSubscriptions$$.push(subscription),0):($errorOut("badSubscriptionObject",[{key:"scopeId",value:scope.$getScopeId()},{key:"element",value:$(`[awr-scope-id="${scope.$getScopeId()}"]`)}]),1)):($errorOut("badObservableObject",[{key:"scopeId",value:scope.$getScopeId()},{key:"element",value:$(`[awr-scope-id="${scope.$getScopeId()}"]`)}]),1)))}})}__$require__(__$$requires$$__,["function:awr.registerClass","object:awr.registryManager","class:ScopeBindUtils@api@AwrScope"]),__$$errors$$__=__$loadErrors__("$$scope@kernel"),__callModuleMainFn__($main,__$$requires$$__)})}(),function(){var __$$requires$$__=[],__$$errors$$__=null;function $errorOut(errName,replaces){return __$errorOut__(__$$errors$$__,errName,replaces)}__pushToBootQueue__(function(){let Q=(window.awr||{}).Q;function $main(){let watchableConsts=$import("object:awr.watchableConsts@event"),registry=$import("object:awr.registryManager");class ScopeBindUtils{constructor(){}static observableBinderNext({scope:scope,scopeName:scopeName,observable:observable,event:event,isFindAll:isFindAll,query:query,acceptEmptyQuery:acceptEmptyQuery,queryAcceptor:queryAcceptor,noCompileObservables:noCompileObservables,key:key,isNoCompile:isNoCompile,onEvent:onEvent}){let recompile=!1,Model=$import("class:Model@model"),Watchable=$import("function:awr.Watchable"),hasSameQuery=!1,isTarget=!1,scopeNameIsCollection=!1,scopeMember=Q.$stringExist(scopeName)?scope[scopeName]:null,wKey=null,wInstance=null;if(observable instanceof Model?Q.$setContainsString(["create","save","remove","get"],event.requestType)?Q.$objectExist(scopeMember)&&Q.$objectExist(event.modelInstance)&&Q.$stringEqual(`${scopeMember.id}`,`${event.modelInstance.id}`)&&(scope[scopeName]=event.modelInstance,recompile=!0,isTarget=!0):ScopeBindUtils.isProperFindAllCall({isFindAll:isFindAll,event:event,scopeName:scopeName})&&(hasSameQuery=ScopeBindUtils.eventHasSameQuery({event:event,query:query,queryAcceptor:queryAcceptor,acceptEmptyQuery:acceptEmptyQuery}),Q.$booleanTrue(hasSameQuery)&&(scope[scopeName]=Q.$arrayExist(event.modelCollection)?event.modelCollection:scope[scopeName],recompile=!0,isTarget=!0)):observable instanceof Watchable?(registry.$getKeys(watchableConsts.registryName).$each(nxtWKey=>{try{let nxtWID,nxtWInstance=registry.$get(watchableConsts.registryName,nxtWKey);nxtWID=nxtWInstance[Symbol.for(watchableConsts.wIdSymbolName)],Q.$objectExist(event)&&nxtWID===event.wId&&(wKey=nxtWKey.substring(0,nxtWKey.length-watchableConsts.wItemRegistrySuffix.length),wInstance=nxtWInstance)}catch(err){console.error(err)}}),Q.$exists(wInstance)&&(Q.$stringExist(scopeName)&&(Q.$arrayExists(scope[scopeName])?(scopeNameIsCollection=scope[scopeName].$isQCollection,scope[scopeName]=Q.$asCollection(scope[scopeName]).$reduce(nxtWItem=>nxtWItem[Symbol.for(watchableConsts.wIdSymbolName)]!==wInstance[Symbol.for(watchableConsts.wIdSymbolName)]),scope[scopeName].push(wInstance),scopeNameIsCollection||(scope[scopeName]=scope[scopeName].$asNewArray())):scope[scopeName]=wInstance),recompile=!0,isTarget=!0)):Q.$stringExist(scopeName)&&(scope[scopeName]=event,recompile=!0,isTarget=!0),(Q.$setContainsString(noCompileObservables,key)||Q.$setContainsString(noCompileObservables,`observable:${observable.name}`))&&(recompile=!1,isNoCompile=!0),Q.$functionExist(onEvent))try{onEvent.apply(scope,[event,()=>recompile=!1,isTarget,Q.$booleanTrue(recompile)])}catch(e){$errorOut("scopeBindCallbackError",[{key:"scopeId",value:scope.$getScopeId()},{key:"errMsg",value:e}])}Q.$booleanTrue(recompile)&&Q.$booleanFalse(isNoCompile)&&scope.$recompile()}static makeDefaultScopeNameForWatchable(watchable){let wKey=null,wId=null;return watchable instanceof $import("function:awr.Watchable")&&(wId=watchable[Symbol.for(watchableConsts.wIdSymbolName)]),Q.$stringExist(wId)?(Q.$each(registry.$getKeys(watchableConsts.registryName),nxtWKey=>{try{registry.$get(watchableConsts.registryName,nxtWKey)[Symbol.for(watchableConsts.wIdSymbolName)]===wId&&(wKey=nxtWKey.substring(0,nxtWKey.length-watchableConsts.wItemRegistrySuffix.length))}catch(err){console.error(err)}}),wKey):null}static getRegisKey({observable:observable,scopeName:scopeName,key:key,uniqueRegisKey:uniqueRegisKey}){let modelGlobals,regisKey=null,Model=$import("class:Model@model"),WatchableClass=$import("function:awr.Watchable");return uniqueRegisKey=Q.$stringExist(uniqueRegisKey)?uniqueRegisKey.trim():null,observable instanceof Model?(modelGlobals=Q.$objectExist(observable.model)?observable.model.globals:null,Q.$objectExist(modelGlobals)&&Q.$stringExist(modelGlobals.name)?regisKey=Q.$stringExist(scopeName)?`model@${modelGlobals.name}@${scopeName}`:`model@${modelGlobals.name}`:Q.$stringExist(key)&&(regisKey=Q.$stringExist(scopeName)?`${key.replace(":","@")}@${scopeName}`:`${key.replace(":","@")}`)):observable instanceof WatchableClass?regisKey=`${watchableConsts.makeWatchableSubscriptionPrefix(observable)}@${scopeName}`:Q.$stringExist(observable.name)?regisKey=Q.$stringExist(scopeName)?`observable@${observable.name}@${scopeName}`:`observable@${observable.name}`:Q.$stringExist(key)&&(regisKey=Q.$stringExist(scopeName)?`${key.replace(":","@")}@${scopeName}`:`${key.replace(":","@")}`),Q.$stringExist(regisKey)&&Q.$stringExist(uniqueRegisKey)?`${regisKey}@${uniqueRegisKey}`:Q.$stringExist(uniqueRegisKey)?uniqueRegisKey:regisKey}static isProperFindAllCall({isFindAll:isFindAll,event:event,scopeName:scopeName}){return Q.$booleanTrue(isFindAll)&&Q.$stringEqual(event.requestType,"findAll")&&Q.$stringExist(scopeName)&&Q.$arrayExist(event.modelInstance)}static eventHasSameQuery({event:event,query:query,queryAcceptor:queryAcceptor,acceptEmptyQuery:acceptEmptyQuery}){let ok=!1;if(!Q.$objectExist(event))return!1;if(!Q.$stringExist(event.requestQuery)&&Q.$booleanTrue(acceptEmptyQuery))return!0;if(!(Q.$stringExist(query)&&!Q.$isEmpty(query)||Q.$stringExist(event.requestQuery)))return!0;if(Q.$stringExist(query)&&Q.$stringEqual(query,event.requestQuery))return!0;if(Q.$arrayNotEmpty(query))return Q.$setContainsString(query,event.requestQuery);if(Q.$functionExist(queryAcceptor))try{ok=queryAcceptor.call(scope,event.requestQuery)}catch(e){ok=!1,$errorOut("badBindQueryAcceptor",[{key:"scopeId",value:scope.$getScopeId()},{key:"errMsg",value:e}])}return ok}}$export("class:ScopeBindUtils@api@AwrScope",ScopeBindUtils)}__$require__(__$$requires$$__,["function:awr.registerClass","object:awr.registryManager","object:awr.watchableConsts@event"]),__$$errors$$__=__$loadErrors__("$$scope@kernel"),__callModuleMainFn__($main,__$$requires$$__)})}(),function(){var __$$requires$$__=[],__$$errors$$__=null;function $errorOut(errName,replaces){return __$errorOut__(__$$errors$$__,errName,replaces)}__pushToBootQueue__(function(){__$require__(__$$requires$$__,["object:awr.$$core.$$class","class:ScopeAPIUtils@api@AwrScope"]);window.awr;function $main(){let Q=this,$=$import("window:jQuery"),utils=$import("class:ScopeAPIUtils@api@AwrScope");$export("class:ScopeCoreAPI@api@AwrScope",class{constructor(){}static $destroy(scope,{compManager:compManager,scopeManager:scopeManager}){scopeManager.$removeScope(scope),Q.$objectExist(compManager)&&Q.$functionExist(compManager.$flush)&&compManager.$flush()}static $clean(scope,{eventManager:eventManager,bindAPI:bindAPI,watchableAPI:watchableAPI}){utils.emitScopeEvent(scope,"flush",{message:`scope ${scope.$getScopeId()} flushed!`});let params=scope.$getParams();clearInterval(scope.$getParams().$readyCheckInterval),Q.$objectExist(eventManager)&&(eventManager.$flush(`${scope.$getScopeId()}:recompile`),eventManager.$flush(`${scope.$getScopeId()}:validation`),eventManager.$flush(`${scope.$getScopeId()}:ready`),eventManager.$flush(`${scope.$getScopeId()}:flush`)),Q.$objectExist(params.$$beforeRecompiles$$)&&(params.$$beforeRecompiles$$=null),scope.$getAllSegments().$each(nxt=>{nxt.$remove()}),scope.$getParams().$$segments=Q.$asCollection([]),bindAPI.flushBinders(scope),watchableAPI.removeScopeWatchables(scope),Q.$defineConstForRegistry(scope.$getParams(),"$$isFlushed",!0)}static $hasAncestor(scope,{scopeManager:scopeManager,potentialParentScope:potentialParent}){let nxtParent;if(potentialParent=Q.$stringExist(potentialParent)?scopeManager.$getScope(potentialParent):potentialParent,!Q.$exist(potentialParent)||!scopeManager.$isAWRScopeInstance(potentialParent))return!1;if(nxtParent=scope.$getParent(),Q.$stringEqual(nxtParent.$getScopeId(),potentialParent.$getScopeId()))return!0;for(;Q.$objectExist(nxtParent)&&!Q.$stringEqual(potentialParent.$getScopeId(),nxtParent.$getScopeId());)nxtParent=nxtParent.$getParent();return Q.$objectExist(nxtParent)&&Q.$stringEqual(nxtParent.$getScopeId(),potentialParent.$getScopeId())}static $addBeforeRecompileListener(scope,{fn:fn,id:id}){let params=scope.$getParams();return params.$$beforeRecompiles$$=Q.$objectExist(params.$$beforeRecompiles$$)?params.$$beforeRecompiles$$:{},Q.$stringExist(id)?(params.$$beforeRecompiles$$[id]=fn,!0):($errorOut("badBeforeRecompileListenerID",[{key:"scopeId",value:scope.$getScopeId()}]),!1)}static $recompile(scope){scope.$getParams().$$compileCount++;let params=scope.$getParams(),compileCount=params.$$compileCount;if(Q.$functionExist(params.$recompileAction)){utils.runBeforeRecompileCallbacks(scope),scope.$getAllSegments().$each(nxt=>{nxt.$remove()}),scope.$getParams().$$segments=Q.$asCollection([]);try{params.$recompileAction(compileCount)}catch(e){$errorOut("errorInRecompileAction",[{key:"errMsg",value:e}])}clearInterval(params.$recompileInterval),params.$recompileInterval=setInterval(()=>{let hiddenElem=$(scope.$getDom()).find("> [awr-compile-count]"),foundCount=parseInt($(hiddenElem).attr("awr-compile-count"));hiddenElem.length>0&&!isNaN(foundCount)&&foundCount>=compileCount&&(clearInterval(params.$recompileInterval),utils.emitScopeEvent(scope,"recompile",{message:`${scope.$getScopeId()} recompiled!`}))},50)}else $errorOut("earlyRecompileRequest")}static $importProperty(scope,{scopeManager:scopeManager,keys:keys}){keys=Q.$arrayExist(keys)?keys:Q.$stringExist(keys)?[keys]:Q.$isQPrimitiveVal(keys)?[Q.$getQPrimitiveVal(keys)]:[],Q.$forEachIndex(keys,n=>{let nxt=Q.$isQPrimitiveVal(n)?Q.$getQPrimitiveVal(n):n;Q.$exist(scope[nxt])||delete scope[nxt],scope[nxt]=scopeManager.$getProperty(scope,nxt)})}static $findProperty(scope,{scopeManager:scopeManager,key:key,removeNull:removeNull}){key=Q.$exist(key)&&Q.$isQPrimitiveVal(key)?Q.$getQPrimitiveVal(key):Q.$stringExist(key)?key:null;let scopeContext=scope;return Q.$booleanTrue(removeNull)&&null===scopeContext[key]&&delete scopeContext[key],Q.$exist(scopeContext[key])||null===scopeContext[key]?scopeContext[key]:scopeManager.$getProperty(scopeContext.$getScopeId(),key)}static $getOwnData(scope){let data,params=scope.$getParams(),setExist=Q.$arrayExist(params.$$set$$)||Q.$objectExist(params.$$set$$),hasIndex=Q.$numberExist(params.$$index$$)||Q.$stringExist(params.$$index$$);return Q.$booleanTrue(hasIndex)&&Q.$booleanTrue(setExist)&&Q.$exist(params.$$set$$[params.$$index$$])?params.$$set$$[params.$$index$$]:(data={},Q.$forEachProperty(scope,(val,key)=>{Q.$setContainsString(["__$$params$$__","scopeManager"],key)||(data[key]=val)}),data)}})}__$$errors$$__=__$loadErrors__("$$scope@kernel"),__callModuleMainFn__($main,__$$requires$$__)})}(),function(){var __$$requires$$__=[],__$$errors$$__=null;__pushToBootQueue__(function(){__$require__(__$$requires$$__,["object:awr.$$core.$$class","class:ScopeAPIUtils@api@AwrScope"]);window.awr;function $main(){let Q=this;$import("window:jQuery"),$import("class:ScopeAPIUtils@api@AwrScope");$export("class:ScopeExecAPI@api@AwrScope",class{constructor(){}static $fn(scope,{fnInterface:fnInterface}){Q.$objectExist(fnInterface)&&Q.$forEachProperty(fnInterface,(value,key)=>{Q.$functionExist(value)&&scope.$define(key,value,"decide")})}static $define(scope,{key:key,val:val,recompile:recompile=!0}){let args;return!!Q.$stringExist(key)&&(Q.$exist(val)?void(Q.$functionExist(val)?scope[key]=function(){args=[];for(let a of arguments)args.push(a);scope.$safeCall(val,args,recompile,key)}:scope[key]=val):(scope[key]=null,!0))}static $setTimeout(scope,{fn:fn,time:time,recompile:recompile=!0}){time=parseInt(time),Q.$numberExist(time)&&Q.$functionExist(fn)&&(recompile=Q.$booleanTrue(recompile)?"decide":recompile,window.setTimeout(()=>{scope.$safeCall(fn,[],recompile,`${Q.$stringExist(fn.name)?fn.name:"anonymous"}@$timeout`)},time))}static $setInterval(scope,{fn:fn,time:time,recompile:recompile=!0}){if(time=parseInt(time),!Q.$numberExist(time)||!Q.$functionExist(fn))return-1;let intervalId=window.setInterval(()=>{scope.$isFlushed()?clearInterval(intervalId):(recompile=Q.$booleanTrue(recompile)?"decide":recompile,scope.$safeCall(fn,[],recompile,`${Q.$stringExist(fn.name)?fn.name:"anonymous"}@$interval`,err=>{clearInterval(intervalId)}))},time);return intervalId}static $safeCall(scope,{fnName:fnName,args:args,recompile:recompile=!0,key:key="",onErr:onErr=null}){args=Q.$arrayExist(args)?args:[];let savedPreventDefault=scope.$preventDefaultImplementor,fn=Q.$stringExist(fnName)?scope[fnName]:fnName;if(key=Q.$stringExist(key)?key:Q.$functionExist(fnName)?fnName.name:fnName,Q.$stringExist(key)||(key="anonymous"),!scope.$isFlushed()&&Q.$functionExist(fn)){Q.$stringEqual(recompile,"decide")?(recompile=Q.$booleanTrue(scope.$getParams().$$recompileAfterDomAction),scope.$preventDefaultImplementor=(()=>{recompile=!1})):recompile=!Q.$booleanFalse(recompile);try{fn.apply(scope,args)}catch(e){errName="scopeFunctionError",replaces=[{key:"fnName",value:key},{key:"scopeId",value:scope.$getScopeId()},{key:"errMsg",value:e}],__$errorOut__(__$$errors$$__,errName,replaces),Q.$functionExist(onErr)&&onErr.call(scope,e)}var errName,replaces;Q.$booleanTrue(recompile)&&scope.$recompile(),Q.$exist(savedPreventDefault)?scope.$preventDefaultImplementor=savedPreventDefault:delete scope.$preventDefaultImplementor,delete scope.$$event,delete scope.$segment,delete scope.$hasSegment}}static $defineSubtype(scope,{typeName:typeName,type:type}){if(!Q.$stringExist(typeName)||!Q.$objectExist(type))return!1;let paramsTypes,params=scope.$getParams();Q.$objectExist(params.$$types$$)||(params.$$types$$={}),paramsTypes=params.$$types$$,Q.$objectExist(paramsTypes[typeName])||(paramsTypes[typeName]={}),Q.$forEachProperty(type,(val,key)=>{Q.$functionExist(val)?paramsTypes[typeName][key]=function(){let args=[],scope=this;scope.$isSegment&&(scope=this.$getActualParent());for(let a of arguments)args.push(a);scope.$safeCall(val,args,"decide",key)}:paramsTypes[typeName][key]=val})}static $hasDefinedSubType(scope,{typeName:typeName}){if(!Q.$stringExist(typeName))return!1;if(!Q.$objectExist(scope.$getParams())||!Q.$objectExist(scope.$getParams().$$types$$))return!1;let paramsTypes=scope.$getParams().$$types$$;return paramsTypes.hasOwnProperty(typeName)&&Q.$objectExist(paramsTypes[typeName])}static $setType(scope,{typeName:typeName}){if(!Q.$stringExist(typeName))return!1;scope.$getParams().$$TYPE$$=typeName}static $getType(scope){let type=null,typeName=scope.$getParams().$$TYPE$$,parent=scope.$getParent();if(!Q.$stringExist(typeName))return null;for(;!Q.$objectExist(type)&&Q.$objectExist(parent);){let pParams=parent.$getParams();Q.$objectExist(pParams.$$types$$)&&(type=pParams.$$types$$[typeName]),parent=parent.$getParent()}return type}static $getFromType(scope,{key:key}){let property=null,typeName=scope.$getParams().$$TYPE$$,parent=scope.$getParent();if(!Q.$stringExist(typeName)||!Q.$stringExist(key))return null;for(;!Q.$exist(property)&&Q.$objectExist(parent);){let pParams=parent.$getParams(),pTypes=pParams.$$types$$;Q.$objectExist(pTypes)&&pTypes[typeName]&&(property=pParams.$$types$$[typeName][key]),parent=parent.$getParent()}return property}})}__$$errors$$__=__$loadErrors__("$$scopeDom@kernel"),__callModuleMainFn__($main,__$$requires$$__)})}(),function(){var __$$requires$$__=[];__pushToBootQueue__(function(){__$require__(__$$requires$$__,["object:awr.$$core.$$class","object:awr.$$scopeDom","class:CompInserter@dom@AwrScope","class:SegmentInserter@segment@dom@AwrScope","class:LoopCompileUtils@loop@dom@AwrScope"]);window.awr;function $main(){let Q=this,$=$import("window:jQuery"),domManager=$import("object:awr.$$scopeDom"),compInserter=$import("class:CompInserter@dom@AwrScope"),loopCompileUtils=$import("class:LoopCompileUtils@loop@dom@AwrScope"),segmentInserter=$import("class:SegmentInserter@segment@dom@AwrScope");function proceedWithInsert(scope,insertType,{selector:selector,compName:compName,parentVars:parentVars,nodeName:nodeName,scopeType:scopeType,isSegment:isSegment,setItemAs:setItemAs,dataContext:dataContext,setupName:setupName,templatePath:templatePath,html:html,attributes:attributes,bind:bind,bindOptions:bindOptions,segment:segment}){let u3seg;return isSegment=!Q.$stringExist(compName)||isSegment,Q.$stringExist(segment)&&(isSegment=!0,setupName=(u3seg=loopCompileUtils.buildSegmentEnv(segment,{setupName:setupName,templatePath:templatePath,setItemAs:setItemAs,bindKey:bind,bindOptionsKey:bindOptions,nodeName:nodeName})).setupName,setItemAs=u3seg.setItemAs,templatePath=u3seg.templatePath,bind=u3seg.bindKey,bindOptions=u3seg.bindOptionsKey,nodeName=u3seg.nodeName),isSegment?(Q.$stringExist(selector)&&(selector=$(scope.$getDom()).find(selector)),segmentInserter.$insert(domManager,scope,insertType,{setItemAs:setItemAs,dataContext:dataContext,setupName:setupName,templatePath:templatePath,html:html,nodeName:nodeName,attributes:attributes,bind:bind,bindOptions:bindOptions,selector:selector})):compInserter.$insert(scope,insertType,{selector:selector,compName:compName,parentVars:parentVars,nodeName:nodeName,scopeType:scopeType})}$export("class:ScopeInsertAPI@api@AwrScope",class{constructor(){}static $append(scope,{selector:selector,compName:compName,parentVars:parentVars,nodeName:nodeName,scopeType:scopeType,isSegment:isSegment,setItemAs:setItemAs,dataContext:dataContext,setupName:setupName,templatePath:templatePath,html:html,attributes:attributes,bind:bind,bindOptions:bindOptions,segment:segment}){return proceedWithInsert(scope,"append",{selector:selector,compName:compName,parentVars:parentVars,nodeName:nodeName,scopeType:scopeType,isSegment:isSegment,setItemAs:setItemAs,dataContext:dataContext,setupName:setupName,templatePath:templatePath,html:html,attributes:attributes,bind:bind,bindOptions:bindOptions,segment:segment})}static $prepend(scope,{selector:selector,compName:compName,parentVars:parentVars,nodeName:nodeName,scopeType:scopeType,isSegment:isSegment,setItemAs:setItemAs,dataContext:dataContext,setupName:setupName,templatePath:templatePath,html:html,attributes:attributes,bind:bind,bindOptions:bindOptions,segment:segment}){return proceedWithInsert(scope,"prepend",{selector:selector,compName:compName,parentVars:parentVars,nodeName:nodeName,scopeType:scopeType,isSegment:isSegment,setItemAs:setItemAs,dataContext:dataContext,setupName:setupName,templatePath:templatePath,html:html,attributes:attributes,bind:bind,bindOptions:bindOptions,segment:segment})}static $replace(scope,{selector:selector,compName:compName,parentVars:parentVars,nodeName:nodeName,scopeType:scopeType,isSegment:isSegment,setItemAs:setItemAs,dataContext:dataContext,setupName:setupName,templatePath:templatePath,html:html,attributes:attributes,bind:bind,bindOptions:bindOptions,segment:segment}){return proceedWithInsert(scope,"replace",{selector:selector,compName:compName,parentVars:parentVars,nodeName:nodeName,scopeType:scopeType,isSegment:isSegment,setItemAs:setItemAs,dataContext:dataContext,setupName:setupName,templatePath:templatePath,html:html,attributes:attributes,bind:bind,bindOptions:bindOptions,segment:segment})}})}__$loadErrors__("$$scope@kernel"),__callModuleMainFn__($main,__$$requires$$__)})}(),function(){var __$$requires$$__=[];__pushToBootQueue__(function(){__$require__(__$$requires$$__,["object:awr.$$core.$$class","class:DomSegment@segment@dom@AwrScope","object:awr.watchableConsts@event"]);window.awr;function $main(){let Q=this,watchableConsts=($import("window:jQuery"),$import("object:awr.watchableConsts@event")),DomSegment=$import("class:DomSegment@segment@dom@AwrScope");class ScopeSegmentAPI{constructor(){}static $containsSegment(scope,segmentId){return scope.$getAllSegments().$count(nxt=>Q.$stringEqual(nxt.segmentId,segmentId))>0}static $getUniqueSegmentId(scope){let serial=$import("object:serial"),segmentId=`SMT-${serial.basicPrime.generateOne()}`;for(;ScopeSegmentAPI.$containsSegment(scope,segmentId);)segmentId=`SMT-${serial.basicPrime.generateOne()}`;return segmentId}static $registerSegment(scope,segment){let segments=scope.$getAllSegments();segment instanceof DomSegment&&!ScopeSegmentAPI.$containsSegment(scope,segment.segmentId)&&segments.push(segment)}static $getSegment(scope,segmentId){let segments=scope.$getAllSegments();return ScopeSegmentAPI.$containsSegment(scope,segmentId)?segments.$find("segmentId",segmentId):null}static $removeSegments(scope,segmentId){let tobeRemoved=reduceByArgument(scope.$getAllSegments(),segmentId,!1).$map(nxt=>(nxt.$remove(),nxt.segmentId));scope.$getParams().$$segments=scope.$getAllSegments().$reduce(nxt=>!Q.$setContainsString(tobeRemoved,nxt.segmentId))}static $updateSegments(scope,segmentId){reduceByArgument(scope.$getAllSegments(),segmentId,!1).$each(nxt=>{nxt.$update()})}static $bindSegments(scope,key,{scopeName:scopeName,isFindAll:isFindAll=!1,query:query,acceptEmptyQuery:acceptEmptyQuery,queryAcceptor:queryAcceptor,onItemCreated:onItemCreated,itemRemoveSignal:itemRemoveSignal,scopeHoldVariable:scopeHoldVariable,onNotRecognizedTypeEvent:onNotRecognizedTypeEvent}){let segments,typeOk,foundInCollection,onEvent,segmentsContainsInstance=!1,someSegmentsRemoved=!1,Model=$import("class:Model@model"),Watchable=$import("function:awr.Watchable"),uniqueRegisKey=`segments@binder${isFindAll?"@collection":"@instance"}`,observable=Q.$stringExist(key)?$import(key):null;return Q.$objectExist(key)&&Q.$functionExist(key.$subscribe)&&(observable=key),!(!Q.$objectExist(observable)||!Q.$functionExist(observable.$subscribe))&&(!!(observable instanceof Model||observable instanceof Watchable||Q.$functionExist(onNotRecognizedTypeEvent))&&(observable instanceof Model||observable instanceof Watchable||(scopeName=null,isFindAll=!1,query=null,acceptEmptyQuery=!1,queryAcceptor=null,onEvent=function(event,preventDefault){if(preventDefault(),!Q.$stringExist(scopeHoldVariable)||!Q.$booleanTrue(scope[scopeHoldVariable]))try{onNotRecognizedTypeEvent(event,scope.$getAllSegments())}catch(e){console.error(e)}}),onEvent=observable instanceof Watchable?function(event,preventDefault,isTarget){preventDefault(),Q.$stringExist(scopeHoldVariable)&&Q.$booleanTrue(scope[scopeHoldVariable])||(segments=scope.$getAllSegments()).$each(nxtSegment=>{nxtSegment.dataContext[Symbol.for(watchableConsts.wIdSymbolName)]===event.wId&&(event.message&&event.message===watchableConsts.wDiedMessage?nxtSegment.$remove():nxtSegment.$update())})}:function(event,preventDefault,isTarget){if(preventDefault(),!Q.$stringExist(scopeHoldVariable)||!Q.$booleanTrue(scope[scopeHoldVariable])){if((segments=scope.$getAllSegments()).$each(nxtSegment=>{if(typeOk=function(segment,observableModel){let ModelClass=$import("class:Model@model"),ModelObjectClass=$import("class:RemoteModelObject");if(!(Q.$objectExist(segment)&&Q.$objectExist(segment.dataContext)&&Q.$objectExist(observableModel)&&segment.dataContext instanceof ModelObjectClass&&observableModel instanceof ModelClass))return!1;return Q.$stringEqual(segment.dataContext.__$$globals$$__.name,observableModel.model.globals.name)}(nxtSegment,observable))if("findAll"===event.requestType)if((foundInCollection=event.modelCollection.$reduce(nxtModel=>Q.$idEqual(nxtModel.id,nxtSegment.dataContext.id))).$count()<1&&(!Q.$stringExist(event.requestQuery)||"?"===event.requestQuery)){if(Q.$functionExist(itemRemoveSignal))try{itemRemoveSignal(nxtSegment)}catch(e){console.error(e)}nxtSegment.$remove(),someSegmentsRemoved=!0}else foundInCollection.$count()>0&&nxtSegment.$upgrade(foundInCollection.$first());else if("remove"===event.requestType&&Q.$idEqual(nxtSegment.dataContext.id,event.requestId)){if(Q.$functionExist(itemRemoveSignal))try{itemRemoveSignal(nxtSegment)}catch(e){console.error(e)}nxtSegment.$remove(),someSegmentsRemoved=!0}else Q.$setContainsString(["get","save"],event.requestType)&&Q.$idEqual(nxtSegment.dataContext.id,event.requestId)?nxtSegment.$upgrade(event.modelInstance):"create"===event.requestType&&Q.$idEqual(nxtSegment.dataContext.id,event.requestId)&&(segmentsContainsInstance=!0)}),!segmentsContainsInstance&&Q.$functionExist(onItemCreated)&&"create"===event.requestType)try{onItemCreated(event)}catch(e){console.error(e)}someSegmentsRemoved&&(scope.$getParams().$$segments=scope.$getAllSegments().$reduce(nxtSegment=>!nxtSegment.isRemoved))}},scope.$bind(observable,{scopeName:scopeName,uniqueRegisKey:uniqueRegisKey,isFindAll:isFindAll,query:query,queryAcceptor:queryAcceptor,acceptEmptyQuery:acceptEmptyQuery,onEvent:onEvent}),!0))}}function reduceByArgument(segments,arg,emptyOnNull=!1){return Q.$arrayExist(arg)?segments.$reduce(nxt=>Q.$setContainsString(arg,nxt.segmentId)):Q.$functionExist(arg)?segments.$reduce(arg):Q.$stringExist(arg)?segments.$reduce(nxt=>nxt.segmentId===arg):emptyOnNull?Q.$asCollection([]):segments}$export("class:ScopeSegmentAPI@api@AwrScope",ScopeSegmentAPI)}__$loadErrors__("$$scopeDom@kernel"),__callModuleMainFn__($main,__$$requires$$__)})}(),function(){var __$$requires$$__=[],__$$errors$$__=null;function $errorOut(errName,replaces){return __$errorOut__(__$$errors$$__,errName,replaces)}__pushToBootQueue__(function(){__$require__(__$$requires$$__,["object:awr.$$core.$$class","class:ScopeAPIUtils@api@AwrScope"]);window.awr;function $main(){let Q=this,$=$import("window:jQuery"),utils=$import("class:ScopeAPIUtils@api@AwrScope");$export("class:ScopeValidationAPI@api@AwrScope",class{constructor(){}static $addValidation(scope,{validatorName:validatorName="",val:val,context:context,key:key,elem:elem}={}){validatorName.startsWith("validator:")&&(validatorName=validatorName.replace("validator:",""));let validator=$import(`validator:${validatorName}`);Q.$objectExist(validator)&&Q.$functionExist(validator.isValid)||$errorOut("badValidator",[{key:"validatorName",value:validatorName}]),scope.$getParams().$$validations=Q.$reduce(scope.$getParams().$$validations,nxt=>!(nxt.context===context&&nxt.validatorName===validatorName&&nxt.key===key)),scope.$getParams().$$validations.push({validator:validator,validatorName:validatorName,value:val,context:context,key:key,element:elem})}static $validate(scope,{keys:keys,confirmVal:confirmVal}){Q.$stringExist(keys)&&(keys=[keys]),keys=keys||[];let v_set=scope.$getParams().$$validations,v_res={errors:[],validSet:[]};return Q.$arrayNotEmpty(keys)&&(v_set=Q.$reduce(v_set,nxt=>Q.$exist(nxt.key)&&Q.$setContainsString(keys,nxt.key))),Q.$forEachIndex(v_set,nxt=>{let compareFieldVal,compareFiledName,nxtRes,nxtMsg,key,value=nxt?nxt.value:null;if(Q.$exist(nxt)){nxt&&Q.$objectExist(nxt.context)&&Q.$stringExist(nxt.key)?(value=nxt.context[nxt.key],key=nxt.key):key="$$value_inject$$";try{nxt.validatorName.endsWith("ConfirmValidator")||nxt.validatorName.endsWith("Confirm")?(compareFiledName=nxt.validatorName.replace(nxt.validatorName.endsWith("Confirm")?"Confirm":"ConfirmValidator",""),compareFieldVal=Q.$collect(v_set,(collected,nxtSearch)=>(nxtSearch&&Q.$stringEqual(nxtSearch.key,compareFiledName)&&(collected=nxtSearch.element?$(nxtSearch.element).val():collected),collected)),Q.$exist(confirmVal)&&(compareFieldVal=confirmVal),nxtRes=nxt.validator.isValid(value,nxt.element,compareFieldVal)):nxtRes=nxt.validator.isValid(value,nxt.element),nxtMsg=`Validator[${nxt.validatorName}](key: ${key}) returned ${nxtRes} for value: ${value}.`}catch(e){nxtRes=!1,nxtMsg=`Validator[${nxt?nxt.validatorName:"anonymous"}](key: ${key}) failed with error ${e}.`,$errorOut("badValidatorFunction",[{key:"validatorName",value:nxt?nxt.validatorName:"anonymous"},{key:"errMsg",value:e}])}utils.emitScopeEvent(scope,"validation",{message:nxtMsg,key:key,value:value,isValid:nxtRes,element:nxt.element,skipVisited:scope.skipVisited}),Q.$booleanTrue(nxtRes)?v_res.validSet.push({message:nxtMsg,key:key,value:value,context:nxt.context,element:nxt.element}):v_res.errors.push({message:nxtMsg,key:key,value:value,context:nxt.context,element:nxt.element})}}),v_res}})}__$$errors$$__=__$loadErrors__("$$scope@kernel"),__callModuleMainFn__($main,__$$requires$$__)})}(),function(){var __$$requires$$__=[];__pushToBootQueue__(function(){__$require__(__$$requires$$__,["object:awr.$$core.$$class","object:awr.registryManager","class:ScopeAPIUtils@api@AwrScope","object:awr.watchableConsts@event","object:awr.serial"]);window.awr;function $main(){let Q=this,serial=$import("object:awr.serial"),registry=$import("object:awr.registryManager"),watchableConsts=$import("object:awr.watchableConsts@event");$import("window:jQuery");const scopeWSetName="ScopeWatchables";function makeWatchableRegistryItemName(name){return Q.$stringExists(name)&&name.endsWith(watchableConsts.wItemRegistrySuffix)?name:`${name}${watchableConsts.wItemRegistrySuffix}`}$export("class:ScopeWatchableAPI@api@AwrScope",class{constructor(){}static makeWatchable(scope,context){let wInstance,Watchable=$import("function:awr.Watchable"),wName=function(scope){let newWName=()=>`${Q.$last(serial.bp.generateOne().split("-"))}@${scope.$getScopeId()}${watchableConsts.wItemRegistrySuffix}`,wName=newWName();for(Q.$arrayExist(scope[Symbol.for(scopeWSetName)])||(scope[Symbol.for(scopeWSetName)]=[]);Q.$asCollection(scope[Symbol.for(scopeWSetName)]).$count(nxt=>nxt===wName)>0;)wName=newWName();return scope[Symbol.for(scopeWSetName)].push(wName),wName}(scope);class W extends Watchable{static get $require(){return{}}static get name(){return wName}constructor(){super(W.$require),Q.$arrayExist(context)?this.set=context:Q.$stringExist(context)||Q.$numberExist(context)||Q.$booleanTrue(context)||Q.$booleanFalse(context)||null===context?this.value=context:Q.$objectExist(context)&&Q.$each(context,(value,key)=>{Object.defineProperty(this,key,Object.getOwnPropertyDescriptor(context,key))})}}return wInstance=new W,registry.$add(watchableConsts.registryName,makeWatchableRegistryItemName(wName),wInstance),wInstance}static removeScopeWatchables(scope){Q.$each(scope[Symbol.for(scopeWSetName)],nxt=>{registry.$remove(watchableConsts.registryName,makeWatchableRegistryItemName(nxt))})}static removeWatchable(scope,wInstance){let tobeRemovedWSetNames=Q.$asCollection([]);Q.$each(scope[Symbol.for(scopeWSetName)],nxt=>{let nxtSetItmName=makeWatchableRegistryItemName(nxt),nxtW=registry.$get(watchableConsts.registryName,nxtSetItmName);Q.$objectExists(nxtW)&&wInstance[Symbol.for(watchableConsts.wIdSymbolName)]===nxtW[Symbol.for(watchableConsts.wIdSymbolName)]&&(tobeRemovedWSetNames.push(nxtSetItmName),nxtW[Symbol.for(watchableConsts.wItemHasDiedKey)]=!0)}),scope[Symbol.for(scopeWSetName)]=Q.$asCollection(scope[Symbol.for(scopeWSetName)]).$reduce(nxt=>!tobeRemovedWSetNames.$contains(nxt)).$asNewArray()}})}__$loadErrors__("$$scope@kernel"),__callModuleMainFn__($main,__$$requires$$__)})}(),function(){var __$$requires$$__=[],__$$errors$$__=null;function $errorOut(errName,replaces){return __$errorOut__(__$$errors$$__,errName,replaces)}__pushToBootQueue__(function(){__$require__(__$$requires$$__,["object:awr.$$core.$$class","function:awr.scopeDomFunctions.compileEventHandlers","function:awr.scopeDomFunctions.bindClasses","function:awr.scopeDomFunctions.setDataBindListener"]);let awr=window.awr||{};function $main(){let Q=this,$=$import("window:jQuery");class BasicCompileUtils{constructor(){}static compileAuthorized(scope,scopeManager,silent=!1){return scope&&(scopeManager.$isAWRScopeInstance(scope)||scope.$isDomSegment||scope.$isSegment)?!!Q.$objectExist(scope.$getDom())||(silent||$errorOut("prematureDom"),!1):($errorOut("badScopeObject"),!1)}static compileEventHandlers(scopeManager,scope){$import("function:awr.scopeDomFunctions.compileEventHandlers")({scopeManager:scopeManager,scope:scope,BasicCompileUtils:BasicCompileUtils})}static attachEventHandler({element:element,eventType:eventType,scope:scope,scopeManager:scopeManager}){let attach,handler=BasicCompileUtils.processEventString($(element).attr(`awr-${eventType}`))||{};attach=(event=>{scopeManager.$applyHandler(scope,handler.$name,handler.$args,event)}),$(element).off(eventType),$(element).on(eventType,attach)}static setDataBindListener(elem,scope,eventType,domManager){$import("function:awr.scopeDomFunctions.setDataBindListener")({elem:elem,scope:scope,eventType:eventType,domManager:domManager,BasicCompileUtils:BasicCompileUtils})}static recompileClassBinders(scope,silent=!1){let dom,scopeManager=$import("object:awr.scopeManager");BasicCompileUtils.compileAuthorized(scope,scopeManager,silent)&&(dom=scope.$getDom(),$(dom).find("[awr-class]").removeClass("bad-class-zone"),$(dom).find(".awr-scope-block [awr-class], .awr-segment-block [awr-class], .awr-segment-block[awr-class]").addClass("bad-class-zone"),Q.$eachInDom(dom,"[awr-class]",nxt=>{$(nxt).hasClass("bad-class-zone")?$(nxt).removeClass("bad-class-zone"):BasicCompileUtils.bindClasses(nxt,scope)}),Q.$stringExists($(dom).attr("awr-class"))&&BasicCompileUtils.bindClasses($(dom)[0],scope))}static bindClasses(elem,scope){$import("function:awr.scopeDomFunctions.bindClasses")({elem:elem,scope:scope})}static processEventString(str){if(!Q.$stringExist(str))return null;let parsedCaller=Q.$parseAwrCallerStr.call(Q,str);return{$name:parsedCaller.fnName,$args:parsedCaller.argStr.split(",")}}static getEventTarget(event){let target=null;return event&&(event.preventDefault(),event.stopPropagation(),target=event.target,$(target).attr("awr-link")||(target=event.currentTarget)),target}static OnAWRLinkTriggered(){let link,routeManager=$import("object:routeManager");this.target?(link=$(this.target).attr("awr-link"),Q.$stringExist(link)?routeManager.$pushStateLink(link):awr.errorLog("links@compileDomAttributes","Bad value for awr-link attribute.")):awr.errorLog("links@compileDomAttributes","Bad target setup for awr-link attribute.")}}$export("class:BasicCompileUtils@dom@AwrScope",BasicCompileUtils)}__$$errors$$__=__$loadErrors__("$$scopeDom@kernel"),__callModuleMainFn__($main,__$$requires$$__)})}(),function(){var __$$requires$$__=[];__pushToBootQueue__(function(){__$require__(__$$requires$$__,["object:awr.$$core.$$class","class:BasicCompileUtils@dom@AwrScope","class:DomFilters@dom@AwrScope","class:SegmentInserter@segment@dom@AwrScope","class:LoopCompileUtils@loop@dom@AwrScope"]);let awr=window.awr||{};function $main(){let Q=this,$=$import("window:jQuery"),utils=$import("class:BasicCompileUtils@dom@AwrScope"),segmentInserter=$import("class:SegmentInserter@segment@dom@AwrScope"),loopUtils=$import("class:LoopCompileUtils@loop@dom@AwrScope"),domFilters=$import("class:DomFilters@dom@AwrScope");class BasicCompiler{constructor(){}static $compileAwrSegmentBlocks(domManager,scope){$(scope.$getDom()).find("awr-segment").removeClass("bad-segment-tag-zone"),$(scope.$getDom()).find("awr-segment awr-segment").addClass("bad-segment-tag-zone"),Q.$eachInDom(scope.$getDom(),"awr-segment",tag=>{$(tag).hasClass("bad-segment-tag-zone")||BasicCompiler.$compileSegmentTag(domManager,scope,tag)})}static $compileSegmentTag(domManager,scope,tag){let segmentEnv,html=Q.$getHtml(tag),templatePath=$(tag).attr("template"),bind=$(tag).attr("bind"),bindOptionsName=$(tag).attr("bind-options"),bindOptions=scope.$findProperty(bindOptionsName),nodeName=$(tag).attr("node-name"),dataName=$(tag).attr("data"),dataContext=scope.$findProperty(dataName),setupName=$(tag).attr("setup"),setItemAs=$(tag).attr("item-as"),segmentKey=$(tag).attr("segment");$(tag).closest(".awr-if-block-to-be-removed").length>0||(Q.$exist(dataContext)||console.error("DomSegment: no data context found in parent!\n\t + Details: This error occurred at $compileSegment@BasicCompiler@dom@AwrScope"),segmentEnv=loopUtils.buildSegmentEnv(segmentKey,{setupName:setupName,templatePath:templatePath,setItemAs:setItemAs,nodeName:nodeName,bindKey:bind,bindOptionsKey:bindOptionsName}),segmentInserter.$insert(domManager,scope,"replace",{dataContext:dataContext,html:html,templatePath:segmentEnv.templatePath,setItemAs:segmentEnv.setItemAs,nodeName:segmentEnv.nodeName,selector:tag,bind:segmentEnv.bindKey,bindOptions:Q.$objectExist(segmentEnv.bindOptionsKey)?segmentEnv.bindOptionsKey:bindOptions,setupName:segmentEnv.setupName}))}static $compileAttributes(domManager,scope){let scopeManager=$import("object:awr.scopeManager");utils.compileAuthorized(scope,scopeManager)&&utils.compileEventHandlers(scopeManager,scope)}static $compileClassBinders(domManager,scope){let roofEl,dom,scopeManager=$import("object:awr.scopeManager");utils.compileAuthorized(scope,scopeManager)&&(roofEl=getScopeRoofElement(scope),scope.$isSegment&&Q.$objectExist(roofEl)&&Q.$stringExist($(roofEl).attr("awr-class"))&&utils.bindClasses(roofEl,scope),dom=scope.$getDom(),$(scope.$getDom()).find(".awr-segment-block [awr-class], .awr-segment-block[awr-class]").addClass("bad-zone"),Q.$eachInDom(dom,"[awr-class]",nxt=>{$(nxt).hasClass("bad-zone")?$(nxt).removeClass("bad-zone"):utils.bindClasses(nxt,scope)}),scope.$isSegment&&utils.bindClasses(dom,scope))}static $compileLinkBinders(domManager,scope){let roofEl,routeManager=$import("object:routeManager"),domSection=scope.$getDom();Q.$objectExist(routeManager)||awr.warningLog("links@compileDomAttributes","Bad routeManager instance."),roofEl=getScopeRoofElement(scope),scope.$isSegment&&Q.$objectExist(roofEl)&&Q.$stringExist($(roofEl).attr("awr-link"))&&($(roofEl).off("click"),$(roofEl).on("click",function(event){event.preventDefault(),utils.OnAWRLinkTriggered.call({target:utils.getEventTarget(event)})})),domSection&&$(domSection)?$.each($(domSection).find("[awr-link]"),function(){$(this).off("click"),$(this).on("click",function(event){event.preventDefault(),utils.OnAWRLinkTriggered.call({target:utils.getEventTarget(event)})})}):awr.errorLog("links@compileDomAttributes","Bad dom section for search@awr-link. Aborting.")}static $compileDataBinders(domManager,scope){let roofEl,dom,scopeManager=$import("object:awr.scopeManager");utils.compileAuthorized(scope,scopeManager)&&((roofEl=getScopeRoofElement(scope))&&$(roofEl).closest(".awr-if-block-to-be-removed").length>0||(scope.$isSegment&&Q.$objectExist(roofEl)&&Q.$stringExist(roofEl.nodeName)&&Q.$stringExist($(roofEl).attr("awr-data"))&&("input"!==roofEl.nodeName.toLowerCase()||Q.$setContainsString(["button","submit","reset"],roofEl.type)?"button"===roofEl.nodeName.toLowerCase()?utils.setDataBindListener(roofEl,scope,"click",domManager):"textarea"===roofEl.nodeName.toLowerCase()?(utils.setDataBindListener(roofEl,scope,"keypress",domManager),utils.setDataBindListener(roofEl,scope,"keyup",domManager),utils.setDataBindListener(roofEl,scope,"paste",domManager),utils.setDataBindListener(roofEl,scope,"change",domManager)):"select"===roofEl.nodeName.toLowerCase()&&utils.setDataBindListener(roofEl,scope,"change",domManager):(utils.setDataBindListener(roofEl,scope,"keypress"),utils.setDataBindListener(roofEl,scope,"keyup"),utils.setDataBindListener(roofEl,scope,"paste"),utils.setDataBindListener(roofEl,scope,"change"))),dom=scope.$getDom(),Q.$eachInDom(dom,"input[awr-data]",function(nxt,nxtIndex){this.type&&Q.$setContainsString(["button","submit","reset"],this.type)||$(this).closest(".awr-if-block-to-be-removed").length>0||(utils.setDataBindListener(this,scope,"keypress"),utils.setDataBindListener(this,scope,"keyup"),utils.setDataBindListener(this,scope,"paste"),utils.setDataBindListener(this,scope,"change"))}),Q.$eachInDom(dom,"textarea[awr-data]",function(nxt,nxtIndex){$(this).closest(".awr-if-block-to-be-removed").length>0||(utils.setDataBindListener(this,scope,"keypress",domManager),utils.setDataBindListener(this,scope,"keyup",domManager),utils.setDataBindListener(this,scope,"paste",domManager),utils.setDataBindListener(this,scope,"change",domManager))}),Q.$eachInDom(dom,"select[awr-data]",function(nxt,nxtIndex){$(this).closest(".awr-if-block-to-be-removed").length>0||utils.setDataBindListener(this,scope,"change",domManager)}),Q.$eachInDom(dom,"button[awr-data]",function(nxt,nxtIndex){$(this).closest(".awr-if-block-to-be-removed").length>0||utils.setDataBindListener(this,scope,"click",domManager)})))}static $compileIfBlocks(domManager,scope,removePolicy="remove"){let dom,scopeManager=$import("object:awr.scopeManager");utils.compileAuthorized(scope,scopeManager)&&(dom=scope.$getDom(),$(dom).find("awr-if").removeClass("bad-if-zone"),$(dom).find("awr-each awr-if").addClass("bad-if-zone"),$(dom).find("[awr-each] awr-if").addClass("bad-if-zone"),$(dom).find("awr-repeat awr-if").addClass("bad-if-zone"),$(dom).find("[awr-repeat] awr-if").addClass("bad-if-zone"),$(dom).find(".awr-segment-block awr-if").addClass("bad-if-zone"),Q.$eachInDom(dom,"awr-if",function(nxtIfBlock,nxtIfBlockIndex){if($(this).hasClass("bad-if-zone"))return void $(this).removeClass("bad-if-zone");let domContainer,ifGroupResult,ifGroup,ifBlock=this,ifBlockContent=$(this).html(),attributes=Q.$getDomAttributes(ifBlock),processedAttrs=[];$(ifBlock).hasClass("awr-if-block-to-be-removed")&&$(ifBlock).removeClass("awr-if-block-to-be-removed"),Q.$forEachIndex(attributes,function(val,index){let nxtKey=val.key;val.value&&Q.$forEachIndex(val.value.split("|"),function(p_val,p_index){processedAttrs.push({key:nxtKey,value:p_val.trim()})})}),ifGroup=Q.$map(processedAttrs,function(){if(this.key&&"class"!==this.key)return Q.$parseIfParams(this.key,this.value,scope)}),ifGroupResult=domFilters.$decideIfExclude(ifGroup),Q.$booleanTrue(ifGroupResult)?($(ifBlockContent).length<2?(domContainer=$(ifBlockContent),$(domContainer).addClass("awr-truthy-block")):(domContainer=$('<div class="awr-truthy-block"></div>'),$(domContainer).html(ifBlockContent)),Q.$replaceDom(ifBlock,domContainer)):removePolicy&&"class-tag"===removePolicy?$(ifBlock).addClass("awr-if-block-to-be-removed"):$(ifBlock).remove()}))}static $compileScreenBlocks(domManager,scope){let dom,$=$import("window:jQuery"),scopeManager=$import("object:awr.scopeManager");utils.compileAuthorized(scope,scopeManager)&&(dom=scope.$getDom(),$(Q.$findInDom(dom,"awr-screen")).removeClass("bad-screen-zone"),$(Q.$findInDom(dom,"awr-each awr-screen, awr-repeat awr-screen")).addClass("bad-screen-zone"),$(Q.$findInDom(dom,"[awr-each] awr-screen, [awr-repeat] awr-screen")).addClass("bad-screen-zone"),Q.$eachInDom(dom,"awr-screen",function(nxtScreenBlock,nxtScreenBlockIndex){if($(this).hasClass("bad-screen-zone"))return;let domContainer,screenBlockContent=$(this).html(),awrScreens=["mobile","tablet","min-tablet","max-tablet","medium","min-medium","max-medium","large","min-large","max-large","x-large"],screenClasses=$(this).attr("display"),nodeName=$(this).attr("node-name"),defaultNode=!Q.$stringExist(nodeName);(1!==$(screenBlockContent).length||"awr-if"!==$(screenBlockContent)[0].nodeName)&&$(screenBlockContent).length<2&&defaultNode?domContainer=$(screenBlockContent):(nodeName=Q.$stringExist(nodeName)?nodeName:"div",domContainer=$(`<${nodeName} class="awr-screen" ></${nodeName}>`),$(domContainer).html(screenBlockContent)),Q.$stringExist(screenClasses)&&Q.$forEachIndex(screenClasses.split(" "),function(n,i){let nxtClass=Q.$isQPrimitiveVal(n)?Q.$getQPrimitiveVal(n):n;Q.$setContainsString(awrScreens,nxtClass)&&$(domContainer).addClass("awr-screen-"+nxtClass)}),Q.$replaceDom(this,domContainer)}))}}function getScopeRoofElement(scope){let el=scope.$getDom();return $(el).length>0?el[0]:null}$export("class:BasicCompiler@dom@AwrScope",BasicCompiler)}__$loadErrors__("$$scopeDom@kernel"),__callModuleMainFn__($main,__$$requires$$__)})}(),function(){var __$$requires$$__=[],__$$errors$$__=null;function $errorOut(errName,replaces){return __$errorOut__(__$$errors$$__,errName,replaces)}__pushToBootQueue__(function(){__$require__(__$$requires$$__,["object:awr.$$core.$$class"]);window.awr;function $main(){let Q=this,$=$import("window:jQuery");$export("class:CompInserter@dom@AwrScope",class{constructor(){}static $insert(scope,type,{selector:selector,compName:compName,parentVars:parentVars,nodeName:nodeName,scopeType:scopeType}){let container,oldScope,oldSegment,newScope,missingContainer=Q.$isEmpty($(scope.$getDom()).find(selector)),comp=$import(`component:${compName}`);Q.$stringExist(selector)&&missingContainer?$errorOut("append"===type?"badAppendSelector":"replace"===type?"badReplaceSelector":"badPrependSelector",[{key:"scopeId",value:scope.$getScopeId()}]):Q.$objectExist(comp)?(container=Q.$stringExist(selector)?$(scope.$getDom()).find(selector):$(scope.$getDom()),"replace"!==type||container[0]!==scope.$getDom()[0]?(parentVars=Q.$objectExist(parentVars)?parentVars:{},comp.$compile(scope,parentVars,nodeName).then(compiledHtml=>{newScope=$import("scope:"+$(compiledHtml).attr("awr-scope-id")),Q.$objectExist(newScope)&&Q.$stringExist(scopeType)&&Q.$functionExist(newScope.$setType)&&newScope.$setType(scopeType),"replace"===type?(oldScope=$import("scope:"+$(container).attr("awr-scope-id")),oldSegment=scope.$getSegment($(container).attr("awr-segment-id")),$(container).replaceWith(compiledHtml),Q.$objectExist(oldScope)&&Q.$functionExist(oldScope.$destroy)?oldScope.$destroy():Q.$objectExist(oldSegment)&&Q.$stringExist(oldSegment.segmentId)&&scope.$removeSegments(oldSegment.segmentId)):"append"===type?$(container).append(compiledHtml):$(container).prepend(compiledHtml)},err=>{$errorOut("append"===type?"errorInAppendCompile":"replace"===type?"errorInReplaceCompile":"errorInPrependCompile",[{key:"scopeId",value:scope.$getScopeId()},{key:"errMsg",value:err}])})):$errorOut("illegalReplaceContainer",[{key:"scopeId",value:scope.$getScopeId()}])):$errorOut("append"===type?"badAppendComp":"replace"===type?"badReplaceComp":"badPrependComp",[{key:"scopeId",value:scope.$getScopeId()}])}})}__$$errors$$__=__$loadErrors__("$$scope@kernel"),__callModuleMainFn__($main,__$$requires$$__)})}(),function(){var __$$requires$$__=[],__$$errors$$__=null;function $errorOut(errName,replaces){return __$errorOut__(__$$errors$$__,errName,replaces)}__pushToBootQueue__(function(){__$require__(__$$requires$$__,["object:awr.$$core.$$class","class:VariableCompiler@dom@AwrScope"]);let awr=window.awr||{};function $main(){let domFilters,Q=this,variableCompiler=$import("class:VariableCompiler@dom@AwrScope");function ScopeDomFilters(){}$export("class:DomFilters@dom@AwrScope",class{constructor(){}static $applyLoopFilters(set,execRequestStr,scope){let tSet,result=Q.$arrayExist(set)?Q.$asCollection(set):Q.$asCollection([]);return variableCompiler.$getPipesFromExecRequest(execRequestStr,scope).$each(one=>{tSet=variableCompiler.$computeOnePipe(result,one),Q.$arrayExist(tSet)?result=tSet:$errorOut("badSetTransformPipe",[{key:"pipeName",value:Q.$stringExist(one.fnName)?one.fnName:"Unknown Pipe"}])}),result}static $decideIfExclude(ifGroup){let resultSet=[];return!!Q.$arrayNotEmpty(ifGroup)&&(Q.$each(ifGroup,(n,i)=>{let nxtRes,nxtFnCtx=Q.$objectExist(n.fnContext)?n.fnContext:Q;if(Q.$functionExist(n.ifFn))try{nxtRes=n.ifFn.apply(nxtFnCtx,n.ifArgs),Q.$booleanTrue(n.isNegation)&&(nxtRes=!nxtRes),(res=>!Q.$booleanTrue(res)||!Q.$exist(res))(nxtRes)?resultSet.push(!1):resultSet.push(!0)}catch(err){resultSet.push(!1),$errorOut("badIfFunction",{key:"errMsg",value:err})}else resultSet.push(!1)}),Q.$reduce(resultSet,function(){return Q.$booleanTrue(this)}).length===resultSet.length)}}),ScopeDomFilters.prototype.$applyLoopFilters=function(set,filterGroup,scope){console.warn("Departed: stop using awr.$$domFilters, use class DomFilters@dom@AwrScope instead!");let context=$import("object:scopeManager").$getScopeContext(scope),filteredSet=set;return Q.$forEachIndex(filterGroup,function(n,i){let filterName,cleanFunc,cleanArgs,nxtSurround,nxtResult=null,nxtArgs=n.filterArgs,contextFn=Q.$stringExist(n.filterFn)?context[n.filterFn]:null;nxtArgs=Q.$map(nxtArgs,function(){return Q.$setContainsString(["true","false"],this.value)?this.value="true"===this.value:isNaN(parseInt(this.value))?(nxtSurround=this.value.substring(0,1)+this.value.substring(this.value.length-1),Q.$setContainsString(["''",'""'],nxtSurround)?this.value=this.value.substring(1,this.value.length-1):this.value=scope.$findProperty(this.value)):this.value=parseInt(this.value),this}),filterName=n.filterType.startsWith("$")?n.filterType:"$"+n.filterType,Q.$functionExist(contextFn)&&Q.$setContainsString(["$reduce","reduce","$map","map"],n.filterType)?(cleanFunc=Q[filterName],cleanArgs=[filteredSet,contextFn]):Q.$functionExist(Q[filterName])&&(cleanFunc=Q[filterName],cleanArgs=Q.$arrayMerge([[filteredSet],nxtArgs])),Q.$functionExist(cleanFunc)&&Q.$arrayExist(cleanArgs)&&(Q.$qTry(function(){nxtResult=cleanFunc.apply(Q,cleanArgs)},function(err){nxtResult=null,$errorOut("badFilterFunction",[{key:"errMsg",value:err}])}),filteredSet=Q.$arrayExist(nxtResult)?nxtResult:filteredSet)}),Q.$arrayExist(filteredSet)?filteredSet:[]},ScopeDomFilters.prototype.$decideIfExclude=function(ifGroup){console.warn("Departed: stop using awr.$$domFilters, use class DomFilters@dom@AwrScope instead!");let resultSet=[];return!!Q.$arrayNotEmpty(ifGroup)&&(Q.$forEachIndex(ifGroup,function(n,i){let nxtRes,nxtFnCtx=Q.$objectExist(n.fnContext)?n.fnContext:Q;Q.$functionExist(n.ifFn)?Q.$qTry(function(){nxtRes=n.ifFn.apply(nxtFnCtx,n.ifArgs),Q.$booleanTrue(n.isNegation)&&(nxtRes=!nxtRes),(res=>!Q.$booleanTrue(res)||!Q.$exist(res))(nxtRes)?resultSet.push(!1):resultSet.push(!0)},function(err){resultSet.push(!1),$errorOut("badIfFunction",{key:"errMsg",value:err})}):resultSet.push(!1)}),Q.$reduce(resultSet,function(){return Q.$booleanTrue(this)}).length===resultSet.length)},domFilters=new ScopeDomFilters,awr.$$domFilters=domFilters,$export("$$domFilters",domFilters,{takeEasy:!1})}__$$errors$$__=__$loadErrors__("$$domFilters@kernel"),__callModuleMainFn__($main,__$$requires$$__)})}(),function(){var __$$requires$$__=[];__pushToBootQueue__(function(){__$require__(__$$requires$$__,["object:awr.$$core.$$class","object:awr.$$domFilters","class:BasicCompiler@dom@AwrScope","class:DomSegment@segment@dom@AwrScope","class:SegmentContext@segment@dom@AwrScope","class:SegmentUtils@segment@dom@AwrScope","class:Looper@loop@dom@AwrScope","class:VariableCompiler@dom@AwrScope"]);let awr=window.awr||{};function $main(){let scopeDom,Q=this,$=$import("window:jQuery"),handlebars=$import("window:Handlebars"),variableCompiler=$import("class:VariableCompiler@dom@AwrScope"),basicCompiler=$import("class:BasicCompiler@dom@AwrScope"),segmentUtils=$import("class:SegmentUtils@segment@dom@AwrScope"),looper=$import("class:Looper@loop@dom@AwrScope");function ScopeDom(){}function getFramedDom(scopeId,domHtml,nodeName,domAttrs,scopeContext){let node=Q.$stringExist(nodeName)?nodeName:"div",domFrame=$("<"+node+' class="awr-scope-block"></'+node+">");return Q.$forEachIndex(Q.$arrayExist(domAttrs)?domAttrs:[],function(n,i){let value=Q.$stringExist(n.value)?n.value:"";Q.$objectExist(n)&&(Q.$stringEqual(n.key,"class")?$(domFrame).addClass(value):$(domFrame).attr(n.key,value))}),$(domFrame).attr("awr-scope-id",scopeId),$(domFrame).html(domHtml),domFrame}ScopeDom.prototype.$compileDom=function(scope,preparedHtml,nodeName,domAttrs){let lateProcessedHtml,context,savedRepeatLoopsContent,savedSegmentTagsContent,scopeManager=$import("object:scopeManager"),framedDom=getFramedDom(scope.$getScopeId(),preparedHtml,nodeName,domAttrs);return scope.$setDom($(framedDom)),this.$compileIfBlocks(scope,"class-tag"),this.$compileScreenBlocks(scope),savedSegmentTagsContent=segmentUtils.$pickSegmentTagsContent(scope.$getDom()),savedRepeatLoopsContent=segmentUtils.$pickRepeatLoopsContent(scope.$getDom()),this.$compileAwrEachLoops(scope),lateProcessedHtml=scope.$getDom().html(),lateProcessedHtml=variableCompiler.$compileVariables({scope:scope,content:lateProcessedHtml}),context=scopeManager.$getScopeContext(scope),lateProcessedHtml=handlebars.compile(lateProcessedHtml)(context),framedDom=getFramedDom(scope.$getScopeId(),lateProcessedHtml,nodeName,domAttrs,context),scope.$setDom($(framedDom)),this.$compileLinkBinders(scope),this.$compileAttributes(scope),this.$compileDataBinders(scope),this.$compileClassBinders(scope),segmentUtils.$restoreSegmentTagsContent(scope.$getDom(),savedSegmentTagsContent),this.$compileAwrSegmentBlocks(scope),segmentUtils.$restoreRepeatLoopsContent(scope.$getDom(),savedRepeatLoopsContent),this.$compileAwrRepeatLoops(scope),$(framedDom).find("awr-if.awr-if-block-to-be-removed").remove(),$(framedDom).find("[awr-src]").each((idx,elem)=>{$(elem).attr("src",$(elem).attr("awr-src"))}),$(framedDom)},ScopeDom.prototype.$insertSegment=function(scope,insertType,{setItemAs:setItemAs,dataContext:dataContext,setupName:setupName,templatePath:templatePath,html:html,nodeName:nodeName,attributes:attributes,bind:bind,bindOptions:bindOptions,selector:selector}){return segmentUtils.$insertSegment(this,scope,{setItemAs:setItemAs,dataContext:dataContext,setupName:setupName,templatePath:templatePath,html:html,nodeName:nodeName,attributes:attributes,bind:bind,bindOptions:bindOptions,selector:selector})},ScopeDom.prototype.$createSegment=function(scope,{setItemAs:setItemAs,dataContext:dataContext,setupName:setupName,templatePath:templatePath,html:html,nodeName:nodeName,attributes:attributes}){return segmentUtils.$createSegment(this,scope,{setItemAs:setItemAs,dataContext:dataContext,setupName:setupName,templatePath:templatePath,html:html,nodeName:nodeName,attributes:attributes})},ScopeDom.prototype.$compileSegment=function(scope,{context:context,html:html,nodeName:nodeName,attributes:attributes,segmentId:segmentId}){return segmentUtils.$compileSegment(this,scope,{context:context,html:html,nodeName:nodeName,attributes:attributes,segmentId:segmentId})},ScopeDom.prototype.$compileAwrSegmentBlocks=function(scope){basicCompiler.$compileAwrSegmentBlocks(this,scope)},ScopeDom.prototype.$compileAwrEachLoops=function(scope){return looper.$compileAwrEachLoops.apply(looper,[scope])},ScopeDom.prototype.$compileAwrRepeatLoops=function(scope){return looper.$compileAwrRepeatLoops.apply(looper,[scope,this])},ScopeDom.prototype.$compileAttributes=function(scope){basicCompiler.$compileAttributes(this,scope)},ScopeDom.prototype.$compileClassBinders=function(scope){basicCompiler.$compileClassBinders(this,scope)},ScopeDom.prototype.$compileLinkBinders=function(scope){basicCompiler.$compileLinkBinders(this,scope)},ScopeDom.prototype.$compileDataBinders=function(scope){basicCompiler.$compileDataBinders(this,scope)},ScopeDom.prototype.$compileIfBlocks=function(scope,removePolicy){basicCompiler.$compileIfBlocks(this,scope,removePolicy)},ScopeDom.prototype.$compileScreenBlocks=function(scope){basicCompiler.$compileScreenBlocks(this,scope)},scopeDom=new ScopeDom,awr.$$scopeDom=scopeDom,$export("$$scopeDom",scopeDom)}__$loadErrors__("$$scopeDom@kernel"),__callModuleMainFn__($main,__$$requires$$__)})}(),function(){var __$$requires$$__=[],__$$errors$$__=null;__pushToBootQueue__(function(){__$require__(__$$requires$$__,["object:awr.$$core.$$class"]);window.awr;function $main(){let Q=this;class VariableCompiler{constructor(){}static $computeOnePipe(input,one){let newRes,result=input;if(!Q.$objectExist(one.pipe)||!Q.$functionExist(one.pipe.transform))return result;try{result=newRes=one.pipe.transform.apply(one.pipe,[result].concat(Q.$isEmpty(one.args)?[]:one.args))}catch(err){errName="errorInPipeTransform",replaces=[{key:"errMsg",value:err},{key:"pipeName",value:Q.$stringExist(one.fnName)?one.fnName:"Unknown Pipe"}],__$errorOut__(__$$errors$$__,errName,replaces)}var errName,replaces;return result}static $computePipes(input,pipes){let result=input;return Q.$isEmpty(pipes)?input:(Q.$asCollection(pipes).$each(nxt=>{result=VariableCompiler.$computeOnePipe(result,nxt)}),result)}static $getDisplayableValue(variable){if(Q.$isQPrimitiveVal(variable))return Q.$getQPrimitiveVal(variable);if(Q.$objectExist(variable)&&Q.$functionExist(variable.toString)){try{variable=variable.toString()}catch(err){variable="[ object ]"}return variable}return Q.$objectExist(variable)?"[ object ]":Q.$functionExist(variable)?"[ function ]":Q.$booleanTrue(variable)||Q.$booleanFalse(variable)?`${variable}`:Q.$stringExist(variable)||Q.$numberExist(variable)?variable:"[ no value ]"}static $compileVariables({scope:scope,content:content,onItem:onItem=null}){let initialVal,computedVal,pipes,res,pipedRegex=new RegExp(/\${\s*([a-zA-Z0-9_$.]*(\s*[|]\s*[a-zA-Z0-9:',@+!*=?\-~`^%#;\]\[()&_$.\s]*)+)+\s*}/,"g"),regex=new RegExp(/\${\s*([a-zA-Z0-9_$.]*)\s*}/,"g");return Q.$stringExist(content)?content.replace(pipedRegex,(match,group)=>(initialVal=safeValue(Q.$getValueFromScopePath(group.split("|")[0].trim(),scope)),pipes=VariableCompiler.$getPipesFromExecRequest(group,scope),computedVal=VariableCompiler.$computePipes(initialVal,pipes),VariableCompiler.$getDisplayableValue(computedVal))).replace(regex,(match,group)=>{if(Q.$functionExist(onItem))try{onItem(group)}catch(e){}return res=Q.$getValueFromScopePath(group,scope),safeValue(Q.$exist(res)?res:"")}):""}static $getPipesFromExecRequest(request,scope){let p;return Q.$stringExist(request)?Q.$asCollection(request.split("|")).$map((nxt,idx)=>{if(!(idx<1)&&Q.$stringExist(nxt))return(p=Q.$buildFnExecRequest(nxt,scope)).pipe=$import(`pipe:${p.fnName}`),p}):Q.$asCollection([])}}function safeValue(value){if(!Q.$stringExists(value))return value;let tagStart=new RegExp(/</,"g"),tagEnd=new RegExp(/>/,"g");return Q.$exists(value)?`${value}`.replace(tagStart,match=>"&lt;").replace(tagEnd,match=>"&gt;"):""}$export("class:VariableCompiler@dom@AwrScope",VariableCompiler)}__$$errors$$__=__$loadErrors__("$$domFilters@kernel"),__callModuleMainFn__($main,__$$requires$$__)})}(),function(){var __$$requires$$__=[];__pushToBootQueue__(function(){__$require__(__$$requires$$__,["object:awr.$$core.$$class"]);let awr=window.awr||{};function $main(){class BPUtils{static addZeroPrefix(xstr){return xstr.length>3?xstr.substring(xstr.length-4):BPUtils.addZeroPrefix("0"+xstr)}static getFourRandomInts(maxIndex){let arr=[];for(;arr.length<4;){let nxt=Math.floor(Math.random()*maxIndex);arr.includes(nxt)||arr.push(nxt)}return arr}static findIndexInDelta(delta){if(delta instanceof Array&&4===delta.length){for(let d=delta.length-1;d>=0;d--)if(parseInt(delta[d])<4)return parseInt(delta[d]);return 0}}static findPrimes(){let primes=[],nxt=0;for(;primes.length<26;)if(2===++nxt)primes.push(nxt);else if(nxt>2){let isPrime=!0;for(let x in primes)primes[x]<nxt&&nxt%primes[x]==0&&(isPrime=!1);isPrime&&primes.push(nxt)}return primes}}awr.BPUtils=BPUtils,$export("class:BPUtils@bp@AwrSerial",BPUtils)}__$loadErrors__("$$serial@kernel"),__callModuleMainFn__($main,__$$requires$$__)})}(),function(){var __$$requires$$__=[];__pushToBootQueue__(function(){window.awr;function $main(){let Q=this,bpUtils=$import("class:BPUtils@bp@AwrSerial"),_abc=["a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z"],_primes=[];$export("class:BasicPrime@bp@AwrSerial",class{constructor(){}generateOne(opts){if(_primes=_primes instanceof Array&&_primes.length===_abc.length?_primes:bpUtils.findPrimes(),opts=opts||{},Q.$stringExist(opts.alpha)&&(opts.alpha=opts.alpha.split("")),Q.$stringExist(opts.delta)&&(opts.delta=opts.delta.split("")),Q.$arrayNotEmpty(opts.alpha)){let alphaRegex=/\b[A-Za-z]{4}(?!.)/;if(opts.alpha=alphaRegex.test(opts.alpha.toString().replace(/\,/g,""))?opts.alpha:null,opts.alpha)for(let od in opts.alpha)opts.alpha[od]=opts.alpha[od].toLowerCase()}if(Q.$arrayNotEmpty(opts.delta)){let alphaRegex=/\b[0-9]{4}(?!.)/;opts.delta=alphaRegex.test(opts.delta.toString().replace(/\,/g,""))?opts.delta:null}let primeArray=_primes,alpha=opts.alpha||function(){let alphaIndices=bpUtils.getFourRandomInts(26),alphaX=[];for(let a=0;a<4;a++)alphaX[a]=_abc[alphaIndices[a]];return alphaX}(),delta=opts.delta||bpUtils.getFourRandomInts(10),deltaValue=parseInt(delta.toString().replace(/\,/g,"")),deltaIndex=bpUtils.findIndexInDelta(delta)||0,deltaIndex2=deltaIndex<3?deltaIndex+1:0,alphaKey=alpha[deltaIndex],alphaKey2=alpha[deltaIndex2],prime=primeArray[_abc.indexOf(alphaKey)],prime2=primeArray[_abc.indexOf(alphaKey2)],epsilon=function(){let fx_str=""+deltaValue*prime/prime2;return(fx_str=fx_str.replace(/\./,"")).substring(0,4)}(),result=deltaIndex+""+delta[deltaIndex]+epsilon.charAt(deltaIndex)+alphaKey2;return(alpha.toString().replace(/\,/g,"")+"-"+bpUtils.addZeroPrefix(deltaValue)+"-"+epsilon+"-"+result).toUpperCase()}check(str){if(!str||"string"!=typeof str||19!==str.length)return!1;if(!/\b[A-Za-z]{4}-[0-9]{4}-[0-9]{4}-[0-9]{3}[A-Za-z]{1}(?!.)/.test(str))return!1;let parts=str.split("-"),alpha=parts[0],delta=parts[1];return parts[2],parts[3],alpha=void 0!==typeof alpha?alpha.toLowerCase():alpha,this.generateOne({alpha:alpha.split(""),delta:delta.split("")}).toString().toLowerCase()===str.toString().toLowerCase()}startsWithPattern(str,level){level=level||4;let full_regex=/\b[A-Za-z]{4}-[0-9]{4}-[0-9]{4}-[0-9]{3}[A-Za-z]{1}/,delta_regex=/\b[A-Za-z]{4}-[0-9]{4}/,epsilon_regex=/\b[A-Za-z]{4}-[0-9]{4}-[0-9]{4}/;return!!str&&(1===level?/\b[A-Za-z]{4}/.test(str):2===level?delta_regex.test(str):3===level?epsilon_regex.test(str):full_regex.test(str))}generate(amount){let serials=[];for(;serials.length<amount;){let next=this.generateOne();serials.includes(next)||serials.push(next)}return serials}})}__$require__(__$$requires$$__,["object:awr.registryManager","object:awr.$$core.$$class","class:BPUtils@bp@AwrSerial"]),__$loadErrors__("$$serial@kernel"),__callModuleMainFn__($main,__$$requires$$__)})}(),function(){var __$$requires$$__=[],__$$errors$$__=null;function $errorOut(errName,replaces){return __$errorOut__(__$$errors$$__,errName,replaces)}__pushToBootQueue__(function(){window.awr;function $main(){let Q=this;$import("window:jQuery");$export("function:awr.scopeDomFunctions.applyHandler",function({scopeManager:scopeManager,scope:scope,name:name,args:args,event:event}){scope.$$event=event,scope.$segment=scope.$isSegment?scope.$getRegisteredInstance():null,scope.$hasSegment=Q.$objectExist(scope.$segment),args=Q.$map(args,nxt=>("event"===nxt?nxt="$$event":"segment"===nxt&&(nxt="$segment"),nxt));let parsedGroup=Q.$parseIfParams(name,args,scope,!0),segmentParent=scope.$isSegment?scope.$getActualParent():null,typeFn=scope.$isSegment?segmentParent.$getFromType(name):scope.$getFromType(name),fn=parsedGroup.ifFn,fnContext=Q.$objectExist(parsedGroup.fnContext)?parsedGroup.fnContext:scope,cleanArgs=parsedGroup.ifArgs;if(scope.$isSegment&&((fnContext=segmentParent).$$event=scope.$$event,fnContext.$segment=scope.$actualSegment,fnContext.$hasSegment=scope.$hasSegment,delete scope.$$event,delete scope.$segment,delete scope.$hasSegment),Q.$functionExist(typeFn))fn=typeFn,fnContext=scope.$isSegment?scope.$getActualParent():scope;else for(;Q.$objectExist(fnContext.$getParent())&&!fnContext.hasOwnProperty(name)&&!Q.$functionExist(fnContext.__proto__[name]);)fnContext=fnContext.$getParent();Q.$functionExist(fn)?function({context:context,func:func,funcName:funcName,args:args}){!function(fnContext,fn,name,cleanArgs){if(Q.$isUX3Type(fnContext)&&fnContext.__proto__[name]===fn)fnContext.$safeCall.apply(fnContext,[fn,cleanArgs,"decide",name,err=>{}]);else try{fn.apply(fnContext,cleanArgs)}catch(err){$errorOut("errorInHandler",[{key:"handlerName",value:name},{key:"errMsg",value:err}])}}(context,func,funcName,args)}({context:fnContext,func:fn,funcName:name,args:cleanArgs}):$errorOut("badHandler",[{key:"handlerName",value:name}])})}__$$errors$$__=__$loadErrors__("$$scopeDom@kernel"),__callModuleMainFn__($main,__$$requires$$__)})}(),function(){var __$$requires$$__=[];__pushToBootQueue__(function(){window.awr;function $main(){let Q=this,$=$import("window:jQuery");function restoreOriginalVars(context,originalPreventDefault,originalSegment){context&&(Q.$exist(originalPreventDefault)?context.$preventDefault=originalPreventDefault:delete context.$preventDefault,Q.$exist(originalSegment)?context.$segment=originalSegment:delete context.$segment)}$export("function:awr.scopeDomFunctions.bindClasses",function({elem:elem,scope:scope}){let str=$(elem).attr("awr-class"),arr=Q.$stringExist(str)?str.split("]"):[];scope.$isDomSegment&&!Q.$objectExists(scope.$segmentContextInstance)||(scope.$isDomSegment&&(scope=scope.$segmentContextInstance),Q.$each(arr,v=>{let nxtParsedCaller,nxtRes,nxtFnCtx,nxtDecider,segment,originalSegment,originalPreventDefault,nxtClass=v.split("[")[0],nxtExecStr=v.split("[")[1];if(Q.$stringExist(v.split("[")[1]))try{nxtParsedCaller=Q.$parseAwrCallerStr(nxtExecStr),nxtDecider=Q.$parseIfParams(nxtParsedCaller.fnName,nxtParsedCaller.argStr,scope),(nxtFnCtx=Q.$objectExist(nxtDecider.fnContext)?nxtDecider.fnContext:Q).$isSegment&&(originalSegment=(nxtFnCtx=(segment=nxtFnCtx).$getActualParent()).$segment,nxtFnCtx.$segment=segment),originalPreventDefault=nxtFnCtx.$preventDefault,nxtFnCtx.$preventDefault=(()=>void 0),nxtRes=nxtDecider.ifFn.apply(nxtFnCtx,nxtDecider.ifArgs),Q.$booleanTrue(nxtDecider.isNegation)&&(nxtRes=!nxtRes),restoreOriginalVars(nxtFnCtx,originalPreventDefault,originalSegment)}catch(e){nxtRes=!1,console.error(e),restoreOriginalVars(nxtFnCtx,originalPreventDefault,originalSegment)}else nxtRes=!0;Q.$booleanTrue(nxtRes)?$(elem).addClass(nxtClass):$(elem).removeClass(nxtClass)}))})}__$loadErrors__("$$scopeDom@kernel"),__callModuleMainFn__($main,__$$requires$$__)})}(),function(){var __$$requires$$__=[];__pushToBootQueue__(function(){window.awr;function $main(){let Q=this,$=$import("window:jQuery");$export("function:awr.scopeDomFunctions.compileEventHandlers",function({scopeManager:scopeManager,scope:scope,BasicCompileUtils:BasicCompileUtils}){let allEvents,badZone,allZone,domSection=scope.$getDom();allEvents=[].concat(["mouseenter","mouseover","mousemove","mousedown","mouseup","auxclick","click","dbclick","contextmenu","wheel","mouseleave","mouseout","select","pointerlockchange","pointerlockerror","double-click","doubleclick"],["keydown","keypress","keyup"],["dragstart","drag","dragend","dragenter","dragover","dragleave","drop"],["durationchange","loadedmetadata","loadeddata","canplay","canplaythrough","ended","emptied","stalled","suspend","play","playing","pause","waiting","seeking","seeked","ratechange","timeupdate","volumechange","complete","audioprocess"],["load","scroll","reset","submit","focus","blur","change","error"]),Q.$forEachIndex(allEvents,(v,index)=>{let handlerRoof=BasicCompileUtils.processEventString.call(Q,$(domSection).attr(`awr-${v}`));Q.$objectExist(handlerRoof)&&($(domSection[0]).off(v),$(domSection[0]).on(v,event=>{scopeManager.$applyHandler(scope,handlerRoof.$name,handlerRoof.$args,event)})),allZone=`[awr-${v}]`,badZone=`.awr-segment-block [awr-${v}], .awr-segment-block[awr-${v}]`,$(domSection).find(allZone).removeClass("bad-evt-zone"),$(domSection).find(badZone).addClass("bad-evt-zone"),Q.$eachInDom(domSection,`[awr-${v}]`,nxt=>{$(nxt).hasClass("bad-evt-zone")?$(nxt).removeClass("bad-evt-zone"):BasicCompileUtils.attachEventHandler({element:nxt,eventType:Q.$setContainsString(["doubleclick","double-click"],v)?"dbclick":v,scope:scope,scopeManager:scopeManager})})})})}__$loadErrors__("$$scopeDom@kernel"),__callModuleMainFn__($main,__$$requires$$__)})}(),function(){var __$$requires$$__=[];__pushToBootQueue__(function(){window.awr;function $main(){let Q=this,$=$import("window:jQuery");$export("function:awr.scopeDomFunctions.setDataBindListener",function({elem:elem,scope:scope,eventType:eventType,BasicCompileUtils:BasicCompileUtils}){let segment,dataPath,dataKey,dataStr=$(elem).attr("awr-data"),validatorName=$(elem).attr("awr-valid"),scopeManager=$import("object:scopeManager"),originalScope=scope,dataContext=scope,preferScope=!1;if(dataPath=dataStr.split("."),!Q.$isEmpty(dataPath)){dataPath.reverse(),dataKey=dataPath.shift(),dataPath.reverse(),dataContext.$isSegment&&(originalScope=dataContext,scope=dataContext.$getActualParent(),segment=dataContext.$segment,!Q.$exists(dataContext[dataPath[0]])&&Q.$exists(scope[dataPath[0]])?dataContext=scope:scope&&Q.$booleanTrue(scope.$getParams().$preferScopeForDataBinding)?(dataContext=scope,preferScope=!0):dataContext=dataContext.$dataContext);for(let p of dataPath)Q.$exist(dataContext[p])||(dataContext[p]={}),dataContext=dataContext[p];if(Q.$stringExist(validatorName)&&scope.$addValidation({validatorName:validatorName,context:dataContext,key:dataKey,elem:elem}),Q.$stringExist(elem.nodeName)&&"button"===elem.nodeName.toLowerCase()&&$(elem).hasClass("group-member"))$(elem).toggleClass("active-btn",dataContext[dataKey]===$(elem).val());else if(Q.$stringExist(elem.nodeName)&&"input"===elem.nodeName.toLowerCase()&&"checkbox"===elem.type)$(elem).hasClass("ignore-default-set")||!0!==dataContext[dataKey]&&"true"!==dataContext[dataKey]&&1!=dataContext[dataKey]||$(elem).attr("checked","checked");else if(Q.$stringExist(elem.nodeName)&&"input"===elem.nodeName.toLowerCase()&&"radio"===elem.type)dataContext[dataKey]===$(elem).val()?$(elem).attr("checked","checked"):$(elem).removeAttr("checked");else if(Q.$exist(dataContext[dataKey]))try{"file"!==$(elem).attr("type")&&($(elem).val(dataContext[dataKey]),elem&&Q.$stringExist(elem.nodeName)&&"select"===elem.nodeName.toLowerCase()&&setTimeout(_=>{$(elem).val(dataContext[dataKey])},250))}catch(err){console.error(err)}$(elem).on(eventType,function(event){"click"===eventType&&event.preventDefault(),"checkbox"===$(elem).attr("type")?dataContext[dataKey]=$(elem).is(":checked"):"file"===$(elem).attr("type")?elem.files&&elem.files.length>0&&(dataContext[dataKey]=elem.files):Q.$stringExist(elem.nodeName)&&"button"===elem.nodeName.toLowerCase()&&$(elem).hasClass("group-member")?!1===$(elem).data("required")&&$(elem).hasClass("active-btn")?(dataContext[dataKey]=null,$((preferScope?scope:originalScope).$getDom()).find(`button.group-member[name="${dataKey}"]`).removeClass("active-btn")):(dataContext[dataKey]=$(elem).val(),$((preferScope?scope:originalScope).$getDom()).find(`button.group-member[name="${dataKey}"]`).removeClass("active-btn"),$(elem).addClass("active-btn")):"__$$placeholder$$__"!==$(elem).val()?dataContext[dataKey]=$(elem).val():dataContext[dataKey]=null,originalScope!==scope&&BasicCompileUtils.recompileClassBinders(scope,!0),BasicCompileUtils.recompileClassBinders(originalScope,!0),Q.$eachInDom(originalScope.$getDom(),".awr-scope-block",nxt=>{let nxtScpId=$(nxt).attr("awr-scope-id"),nxtScope=scopeManager.$getScope(nxtScpId);nxtScope&&scopeManager.$isAWRScopeInstance(nxtScope)&&BasicCompileUtils.recompileClassBinders(nxtScope,!0)}),scope.$getAllSegments().$each(nxtSeg=>{BasicCompileUtils.recompileClassBinders(nxtSeg,!0)})})}})}__$loadErrors__("$$scopeDom@kernel"),__callModuleMainFn__($main,__$$requires$$__)})}(),function(){var __$$requires$$__=[];__pushToBootQueue__(function(){__$require__(__$$requires$$__,["object:awr.$$core.$$class"]);window.awr;function $main(){let Q=this,$=$import("window:jQuery");$export("class:LoopCompileUtils@loop@dom@AwrScope",class{constructor(){}static getSetEnvironment(scope,name){let setName,setContext,setPath=name.split(".");setPath.reverse(),setName=setPath.shift(),setPath.reverse(),setContext=scope;for(let p of setPath)setContext=Q.$functionExist(setContext.$findProperty)?scope.$findProperty(p):Q.$exist(setContext)&&Q.$exist(setContext[p])?setContext[p]:null;return{setName:setName,setContext:setContext}}static defineValueForComplexObjects(set){Q.$forEachIndex(set,function(n,nIndex){Q.$exist(n)&&n.hasOwnProperty("value")&&(n.__$$saved_value$$__=n.value),(n instanceof Date||Q.$functionExist(n)||Q.$arrayExist(n))&&(n.value=Q.$functionExist(n.toString)?n.toString():"!NO VALUE FUNCTION!")})}static cleanValueFromComplexObjects(set){Q.$forEachIndex(set,function(n,nIndex){(n instanceof Date||Q.$functionExist(n)||Q.$arrayExist(n))&&delete n.value,Q.$exist(n)&&n.hasOwnProperty("__$$saved_value$$__")&&(n.value=n.__$$saved_value$$__,delete n.__$$saved_value$$__)})}static resolveSetFromContext(setContext,setName){let set=setContext[setName];return!Q.$arrayExist(set)&&Q.$functionExist(setContext.$findProperty)&&(set=setContext.$findProperty(setName)),set}static bindSegment(scope,{bindKey:bindKey,setEnv:setEnv,setName:setName,bindOptionsKey:bindOptionsKey}){let bindOptions;Q.$stringExist(bindKey)&&((bindOptions=Q.$objectExist(bindOptionsKey)?bindOptionsKey:Q.$stringExist(bindOptionsKey)&&Q.$objectExist(setEnv.setContext[bindOptionsKey])?setEnv.setContext[bindOptionsKey]:{}).scopeName=setName,bindOptions.isFindAll=!0,scope.$bindSegments(bindKey,bindOptions))}static filterAttributes(attributes){return Q.$isEmpty(attributes)?Q.$asCollection([]):Q.$asCollection(attributes).$reduce(nxt=>!Q.$setContainsString(["awr-each","awr-scope-id","awr-each","awr-repeat","bind","item-as","scope-type","controller","setup","template"],nxt.key))}static getTemporaryCompConfig(scope,{set:set,html:html,templatePath:templatePath,newScopeFrame:newScopeFrame,dataContextIDX:dataContextIDX,nodeName:nodeName,controllerName:controllerName,domAttributes:domAttributes,scopeType:scopeType}){let cnf={html:html,template:Q.$stringExist(templatePath)?templatePath:null,data:newScopeFrame,index:dataContextIDX,set:set,parentScope:scope,scopeType:Q.$stringExist(scopeType)?scopeType:null,controller:Q.$stringExist(controllerName)?controllerName:null,afterCompile(){setTimeout(_=>{let tableHolders=$(".placeholder-level-1 > .placeholder-level-2 > .awr-scope-block");$.each(tableHolders,(i,n)=>{$($(n).parent().parent()).replaceWith(n)})},100)}};return Q.$stringExist(nodeName)&&(cnf.nodeName=nodeName),Q.$isEmpty(domAttributes)&&(cnf.domAttributes=domAttributes),cnf}static buildSegmentEnv(segmentKey=null,{setupName:setupName,templatePath:templatePath,setItemAs:setItemAs,bindKey:bindKey,bindOptionsKey:bindOptionsKey,nodeName:nodeName}){let segment=$import(`segment:${segmentKey}`);return Q.$objectExist(segment)?{setupName:Q.$objectExist(segment)?segment:setupName,setItemAs:Q.$stringExist(segment.itemAs)?segment.itemAs:setItemAs,bindKey:Q.$stringExist(segment.bind)?segment.bind:bindKey,bindOptionsKey:Q.$objectExist(segment.bindOptions)?segment.bindOptions:bindOptionsKey,templatePath:Q.$stringExist(segment.template)?segment.template:templatePath,nodeName:Q.$stringExist(segment.nodeName)?segment.nodeName:nodeName}:{setupName:setupName,templatePath:templatePath,setItemAs:setItemAs,bindKey:bindKey,bindOptionsKey:bindOptionsKey,nodeName:nodeName}}})}__$loadErrors__("$$scopeDom@kernel"),__callModuleMainFn__($main,__$$requires$$__)})}(),function(){var __$$requires$$__=[];__pushToBootQueue__(function(){__$require__(__$$requires$$__,["object:awr.$$core.$$class","class:LoopCompileUtils@loop@dom@AwrScope"]);window.awr;function $main(){let Q=this,$=$import("window:jQuery"),utils=$import("class:LoopCompileUtils@loop@dom@AwrScope");function compileAuthorized(loop){return!(!Q.$exists(loop)||$(loop).hasClass("bad-zone")||$(loop).closest(".awr-if-block-to-be-removed").length>0)}function getCleanDataContext(dataContext){return Q.$objectExist(dataContext)?dataContext:{this:dataContext,value:dataContext}}function makeDefaultBindName(watchable){let wName,bindUtils=$import("class:ScopeBindUtils@api@AwrScope");return bindUtils&&Q.$functionExist(bindUtils.makeDefaultScopeNameForWatchable)?(wName=bindUtils.makeDefaultScopeNameForWatchable(watchable),Q.$stringExist(wName)?`watchable:${wName}`:null):null}$export("class:LoopCompiler@loop@dom@AwrScope",class{constructor(){}static $compileLoopsInAttributeForm({scope:scope,dom:dom,compManager:compManager,domFilters:domFilters}){Q.$eachInDom(dom,"[awr-each]",loop=>{if(!compileAuthorized(loop))return;let set,newCompDom,parentNodeName,nodeName=loop.nodeName,html=Q.$getHtml(loop),attributes=Q.$getDomAttributes(loop),execRequest=$(loop).attr("awr-each"),setName=Q.$stringExist(execRequest)?execRequest.split("|")[0].trim():"",controllerName=$(loop).attr("controller"),templatePath=$(loop).attr("template"),setAs=$(loop).attr("item-as"),scopeType=$(loop).attr("scope-type"),setEnv=utils.getSetEnvironment(scope,setName),setContext=setEnv.setContext,specialLoopParents=["tbody","select"];Q.$exist(setContext)&&Q.$stringExist(setName)&&(set=utils.resolveSetFromContext(setContext,setEnv.setName),Q.$arrayExist(set)&&(utils.defineValueForComplexObjects(set),set=domFilters.$applyLoopFilters(set,execRequest,scope),Q.$each(set,(dataContext,dataContextIDX)=>{let newCmp,newScopeFrame;if(Q.$stringExist(setAs)?(newScopeFrame={})[setAs]=dataContext:newScopeFrame=getCleanDataContext(dataContext),newCmp=compManager.$createTemporaryComponent(utils.getTemporaryCompConfig(scope,{set:set,html:html,templatePath:templatePath,newScopeFrame:newScopeFrame,dataContextIDX:dataContextIDX,nodeName:nodeName,controllerName:controllerName,scopeType:scopeType,domAttributes:utils.filterAttributes(attributes)})),newCompDom=$("\x3c!--START NESTED SCOPE BLOCK--\x3e<"+Q.$toDashCase(newCmp)+" />\x3c!--END NESTED SCOPE BLOCK--\x3e"),parentNodeName=$(loop).parent()[0].nodeName.toLowerCase(),Q.$arrayNotEmpty($(loop).parent())&&Q.$setContainsString(specialLoopParents,parentNodeName)){let placeholder;Q.$stringEqual("tbody",parentNodeName)&&((placeholder=$('<tr class="placeholder-level-1 hidden"><th class="placeholder-level-2"></th></tr>')).find("> th").append(newCompDom),$(loop).parent().prepend(placeholder))}else $(loop).before(newCompDom)}),utils.cleanValueFromComplexObjects(set)))})}static $compileLoopsInTagForm({scope:scope,dom:dom,compManager:compManager,domFilters:domFilters}){Q.$eachInDom(dom,"awr-each",loop=>{if(!compileAuthorized(loop))return;let newCompDom,set,html=Q.$getHtml(loop),execRequest=$(loop).attr("data"),setName=Q.$stringExist(execRequest)?execRequest.split("|")[0].trim():"",explicitInclude=$(loop).attr("include"),controllerName=$(loop).attr("controller"),templatePath=$(loop).attr("template"),setAs=$(loop).attr("item-as"),scopeType=$(loop).attr("scope-type"),explicitWaitQueue=[],setEnv=utils.getSetEnvironment(scope,setName),setContext=setEnv.setContext;Q.$exist(setContext)&&Q.$stringExist(setName)&&(set=utils.resolveSetFromContext(setContext,setEnv.setName),Q.$arrayExist(set)&&(utils.defineValueForComplexObjects(set),set=domFilters.$applyLoopFilters(set,execRequest,scope),Q.$each(set,(dataContext,dataContextIDX)=>{let newCmp,newScopeFrame;Q.$stringExist(setAs)?(newScopeFrame={})[setAs]=dataContext:newScopeFrame=getCleanDataContext(dataContext),newCmp=compManager.$createTemporaryComponent(utils.getTemporaryCompConfig(scope,{set:set,html:html,templatePath:templatePath,newScopeFrame:newScopeFrame,dataContextIDX:dataContextIDX,scopeType:scopeType,controllerName:controllerName})),newCompDom=$("\x3c!--START NESTED SCOPE BLOCK--\x3e<"+Q.$toDashCase(newCmp)+" />\x3c!--END NESTED SCOPE BLOCK--\x3e"),Q.$stringExist(explicitInclude)?explicitWaitQueue.push(newCmp):$(loop).before(newCompDom)}),Q.$stringExist(explicitInclude)&&Q.$arrayNotEmpty(explicitWaitQueue)&&Q.$waitForComps(["dom:"+explicitInclude],2e3,!0).then(readyMsg=>{let nxtComp,container=$import("dom:"+explicitInclude);Q.$each(explicitWaitQueue,importStr=>{(nxtComp=$import("component:"+importStr)).$getInstance().$compile(scope,{}).then(compiledHtml=>{Q.$stringEqual(container.nodeName.toLowerCase(),"select")?$(container).append($(compiledHtml).find("option")):$(container).append(compiledHtml)},err=>{console.error(err)})})},err=>{console.error(err)}),utils.cleanValueFromComplexObjects(set)))})}static $compileRepeatLoopsInAttributeForm({scope:scope,dom:dom,domManager:domManager,domFilters:domFilters}){Q.$eachInDom(dom,"[awr-repeat]",loop=>{if(!compileAuthorized(loop))return;let set,segmentEnv,segment,loopNodeName=loop.nodeName,html=Q.$getHtml(loop),Watchable=$import("function:awr.Watchable"),attributes=Q.$getDomAttributes(loop),execRequest=$(loop).attr("awr-repeat"),setName=Q.$stringExist(execRequest)?execRequest.split("|")[0].trim():"",setupName=$(loop).attr("setup"),templatePath=$(loop).attr("template"),setItemAs=$(loop).attr("item-as"),bindKey=$(loop).attr("bind"),bindOptionsKey=$(loop).attr("bind-options"),segmentKey=$(loop).attr("awr-segment"),setEnv=utils.getSetEnvironment(scope,setName),setContext=setEnv.setContext,watchableBindName=null;Q.$exist(setContext)&&Q.$stringExist(setName)&&(set=utils.resolveSetFromContext(setContext,setEnv.setName),Q.$isEmpty(set)||(utils.defineValueForComplexObjects(set),set=domFilters.$applyLoopFilters(set,$(loop).attr("awr-repeat"),scope),attributes=utils.filterAttributes(attributes),segmentEnv=utils.buildSegmentEnv(segmentKey,{templatePath:templatePath,setItemAs:setItemAs,setupName:setupName,bindKey:bindKey,bindOptionsKey:bindOptionsKey,nodeName:null}),Q.$each(set,dataContext=>{dataContext instanceof Watchable&&(watchableBindName=makeDefaultBindName(dataContext)),Q.$stringExist(watchableBindName)&&utils.bindSegment(scope,{bindKey:watchableBindName,bindOptionsKey:segmentEnv.bindOptionsKey,setEnv:setEnv,setName:setName}),segment=domManager.$createSegment(scope,{setItemAs:segmentEnv.setItemAs,dataContext:getCleanDataContext(dataContext),setupName:segmentEnv.setupName,templatePath:segmentEnv.templatePath,nodeName:loopNodeName,html:html,attributes:attributes}),$(loop).before(segment&&Q.$functionExist(segment.$compile)?segment.$compile():"no content!")}),utils.bindSegment(scope,{bindKey:segmentEnv.bindKey,bindOptionsKey:segmentEnv.bindOptionsKey,setEnv:setEnv,setName:setName}),utils.cleanValueFromComplexObjects(set)))})}static $compileRepeatLoopsInTagForm({scope:scope,dom:dom,domManager:domManager,domFilters:domFilters}){Q.$eachInDom(dom,"awr-repeat",loop=>{if(!compileAuthorized(loop))return;let set,segmentEnv,segment,html=Q.$getHtml(loop),Watchable=$import("function:awr.Watchable"),execRequest=$(loop).attr("data"),setName=Q.$stringExist(execRequest)?execRequest.split("|")[0].trim():"",setupName=$(loop).attr("setup"),templatePath=$(loop).attr("template"),setItemAs=$(loop).attr("item-as"),bindKey=$(loop).attr("bind"),bindOptionsKey=$(loop).attr("bind-options"),segmentKey=$(loop).attr("awr-segment"),setEnv=utils.getSetEnvironment(scope,setName),setContext=setEnv.setContext,watchableBindName=null;Q.$exist(setContext)&&Q.$stringExist(setName)&&(set=utils.resolveSetFromContext(setContext,setEnv.setName),Q.$isEmpty(set)||(utils.defineValueForComplexObjects(set),set=domFilters.$applyLoopFilters(set,execRequest,scope),segmentEnv=utils.buildSegmentEnv(segmentKey,{templatePath:templatePath,setItemAs:setItemAs,setupName:setupName,bindKey:bindKey,bindOptionsKey:bindOptionsKey,nodeName:null}),Q.$each(set,dataContext=>{dataContext instanceof Watchable&&(watchableBindName=makeDefaultBindName(dataContext)),Q.$stringExist(watchableBindName)&&utils.bindSegment(scope,{bindKey:watchableBindName,bindOptionsKey:segmentEnv.bindOptionsKey,setEnv:setEnv,setName:setName}),segment=domManager.$createSegment(scope,{setupName:segmentEnv.setupName,templatePath:segmentEnv.templatePath,setItemAs:segmentEnv.setItemAs,dataContext:getCleanDataContext(dataContext),html:html}),$(loop).before(segment&&Q.$functionExist(segment.$compile)?segment.$compile():"no content!")}),utils.bindSegment(scope,{bindKey:segmentEnv.bindKey,bindOptionsKey:segmentEnv.bindOptionsKey,setEnv:setEnv,setName:setName}),utils.cleanValueFromComplexObjects(set)))})}})}__$loadErrors__("$$scopeDom@kernel"),__callModuleMainFn__($main,__$$requires$$__)})}(),function(){var __$$requires$$__=[],__$$errors$$__=null;function $errorOut(errName,replaces){return __$errorOut__(__$$errors$$__,errName,replaces)}__pushToBootQueue__(function(){__$require__(__$$requires$$__,["object:awr.$$core.$$class","object:awr.$$domFilters","class:LoopCompiler@loop@dom@AwrScope"]);window.awr;function $main(){let Q=this,$=$import("window:jQuery"),domFilters=$import("class:DomFilters@dom@AwrScope"),loopCompiler=$import("class:LoopCompiler@loop@dom@AwrScope");$export("class:Looper@loop@dom@AwrScope",class{constructor(){}static $compileAwrRepeatLoops(scope,domManager){let dom;$import("object:awr.scopeManager").$isAWRScopeInstance(scope)||scope.$isSegment?Q.$objectExist(scope.$getDom())?(dom=scope.$getDom(),$(Q.$findInDom(dom,"awr-repeat")).removeClass("bad-zone"),$(Q.$findInDom(dom,"[awr-repeat]")).removeClass("bad-zone"),$(Q.$findInDom(dom,"[awr-repeat] [awr-repeat]")).addClass("bad-zone"),$(Q.$findInDom(dom,"awr-repeat [awr-repeat]")).addClass("bad-zone"),$(Q.$findInDom(dom,"[awr-repeat] awr-repeat")).addClass("bad-zone"),$(Q.$findInDom(dom,"awr-repeat awr-repeat")).addClass("bad-zone"),this.$compileRepeatLoopsInAttributeForm(scope,dom,domManager),this.$compileRepeatLoopsInTagForm(scope,dom,domManager),Q.$eachInDom(dom,"awr-repeat",function(){$(this).hasClass("bad-zone")||$(this).remove()}),Q.$eachInDom(dom,"[awr-repeat]",function(){$(this).hasClass("bad-zone")||$(this).remove()})):$errorOut("prematureDom"):$errorOut("badScopeObject")}static $compileAwrEachLoops(scope){let dom,$=$import("window:jQuery"),scopeManager=($import("object:$$domFilters"),$import("object:awr.scopeManager"));$import("object:awr.compManager"),scopeManager.$isAWRScopeInstance(scope)?Q.$objectExist(scope.$getDom())?(dom=scope.$getDom(),$(Q.$findInDom(dom,"awr-each")).removeClass("bad-zone"),$(Q.$findInDom(dom,"[awr-each]")).removeClass("bad-zone"),$(Q.$findInDom(dom,"[awr-each] [awr-each]")).addClass("bad-zone"),$(Q.$findInDom(dom,"awr-each [awr-each]")).addClass("bad-zone"),$(Q.$findInDom(dom,"[awr-each] awr-each")).addClass("bad-zone"),$(Q.$findInDom(dom,"awr-each awr-each")).addClass("bad-zone"),this.$compileLoopsInAttributeForm(scope,dom),this.$compileLoopsInTagForm(scope,dom),Q.$eachInDom(dom,"awr-each",function(){$(this).remove()}),Q.$eachInDom(dom,"[awr-each]",function(){$(this).remove()})):$errorOut("prematureDom"):$errorOut("badScopeObject")}static $compileLoopsInAttributeForm(scope,dom){let compManager=$import("object:awr.compManager");loopCompiler.$compileLoopsInAttributeForm({scope:scope,dom:dom,compManager:compManager,domFilters:domFilters})}static $compileLoopsInTagForm(scope,dom){let compManager=$import("object:awr.compManager");loopCompiler.$compileLoopsInTagForm({scope:scope,dom:dom,compManager:compManager,domFilters:domFilters})}static $compileRepeatLoopsInAttributeForm(scope,dom,domManager){loopCompiler.$compileRepeatLoopsInAttributeForm({scope:scope,dom:dom,domManager:domManager,domFilters:domFilters})}static $compileRepeatLoopsInTagForm(scope,dom,domManager){loopCompiler.$compileRepeatLoopsInTagForm({scope:scope,dom:dom,domManager:domManager,domFilters:domFilters})}})}__$$errors$$__=__$loadErrors__("$$scopeDom@kernel"),__callModuleMainFn__($main,__$$requires$$__)})}(),function(){var __$$requires$$__=[],__$$errors$$__=null;function $errorOut(errName,replaces){return __$errorOut__(__$$errors$$__,errName,replaces)}__pushToBootQueue__(function(){__$require__(__$$requires$$__,["object:awr.$$core.$$class"]);window.awr;__$$errors$$__=__$loadErrors__("$$segment@AwrScope@kernel");const segCtxInstSym=Symbol("SegmentContextInstance");function $main(){let Q=this,$=$import("window:jQuery");$export("class:DomSegment@segment@dom@AwrScope",class{constructor({scope:scope,segmentId:segmentId,compilerFn:compilerFn,dataContext:dataContext,setItemAs:setItemAs,setupName:setupName,templatePath:templatePath,html:html,nodeName:nodeName,attributes:attributes}){this.scope=scope,this.compilerFn=compilerFn,this.setItemAs=setItemAs,this.dataContext=dataContext,this.setupName=setupName,this.templatePath=templatePath,this.html=html,this.nodeName=nodeName,this.attributes=attributes,this.setupFn=null,this.isRemoved=!1,this.segmentId=segmentId,this.initDone=!1,this[segCtxInstSym]=null}get $isDomSegment(){return!0}set $segmentContextInstance(segmentContextInstance){let Clz=$import("class:SegmentContext@segment@dom@AwrScope");Q.$objectExists(segmentContextInstance)&&segmentContextInstance instanceof Clz&&(this[segCtxInstSym]=segmentContextInstance)}get $segmentContextInstance(){return this[segCtxInstSym]}$getDom(){return this.isRemoved||!Q.$exist(this.scope.$getDom())?null:$(this.scope.$getDom()).find(`[awr-segment-id="${this.segmentId}"]`)}$upgrade(dataContext){return!(this.isRemoved||!Q.$exist(this.scope.$getDom()))&&(this.dataContext=dataContext,this.$update())}$update(){if(this.isRemoved||!Q.$exist(this.scope.$getDom()))return!1;let readyHtml=this.$compile();return $(this.$getDom()).replaceWith(readyHtml),!0}$compile(){if(this.isRemoved||!Q.$exist(this.scope.$getDom()))return null;let readyHtml,template,contextFrame,setupRes,u3SegInterval,u3Segment=null;Q.$stringExist(this.setItemAs)?(contextFrame={})[this.setItemAs]=this.dataContext:contextFrame=Q.$objectExist(this.dataContext)?this.dataContext:Q.$exist(this.dataContext)?Q.$asQPrimitive(this.dataContext):{value:null},Q.$isUX3Type(this.setupName)&&Q.$functionExist(this.setupName.setup)?((u3Segment=this.setupName).$setScope(null),u3Segment.$setContext(null),u3Segment.$setDom(null)):this.setupFn=this.scope.$findProperty(this.setupName);try{Q.$objectExist(u3Segment)?(u3Segment.$setScope(this.scope),u3Segment.$setContext(contextFrame),u3Segment.setup()):Q.$functionExist(this.setupFn)&&(setupRes=this.setupFn.apply(this,[contextFrame])),Q.$objectExist(setupRes)&&(contextFrame=setupRes)}catch(err){$errorOut("segmentSetupError",[{key:"errMsg",value:err}])}if(!this.initDone&&Q.$objectExist(u3Segment)&&Q.$functionExist(u3Segment.start))try{u3Segment.start()}catch(err){console.error(err)}template=$import(`template:${this.templatePath}`),!Q.$stringExist(this.templatePath)||Q.$functionExist(template)||Q.$stringExist(template)||$errorOut("badTemplate",[{key:"templatePath",value:this.templatePath}]);try{readyHtml=this.compilerFn(this.scope,{context:contextFrame,nodeName:this.nodeName,attributes:this.attributes,html:Q.$functionExist(template)||Q.$stringExist(template)?template:this.html,segmentId:this.segmentId})}catch(err){readyHtml=null,$errorOut("badSegmentCompilerFn",[{key:"errMsg",value:err}])}var u3Seg,u3SegId,u3Dom,u3Scope,u3CtxFrame;return!Q.$objectExist(u3Segment)||!Q.$objectExist(readyHtml)&&Q.$isEmpty(readyHtml)||(u3Segment.$setDom(readyHtml),Q.$functionExist(u3Segment.ready)&&(u3Seg=u3Segment,u3SegId=this.segmentId,u3Dom=readyHtml,u3Scope=this.scope,u3CtxFrame=contextFrame,u3SegInterval=setInterval(_=>{if(!Q.$isEmpty($(`[awr-segment-id="${u3SegId}"]`)))try{u3Segment.$setScope(u3Scope),u3Segment.$setContext(u3CtxFrame),u3Segment.$setDom(u3Dom),clearInterval(u3SegInterval),u3Seg.ready.call(u3Seg)}catch(err){clearInterval(u3SegInterval),console.error(err)}},100))),Q.$booleanTrue(this.initDone)||Object.defineProperty(this,"initDone",{get:()=>!0,configurable:!1,enumerable:!0}),readyHtml}$remove(){Q.$exist(this.scope.$getDom())&&$(this.scope.$getDom()).find(`[awr-segment-id="${this.segmentId}"]`).remove(),Object.defineProperty(this,"isRemoved",{value:!0,writable:!1,configurable:!1,enumerable:!0})}})}__callModuleMainFn__($main,__$$requires$$__)})}(),function(){var __$$requires$$__=[];__pushToBootQueue__(function(){__$require__(__$$requires$$__,["object:awr.$$core.$$class"]);window.awr;__$loadErrors__("$$scopeDom@kernel");const dataCtxSym=Symbol("dataContext"),segIdSym=Symbol("segmentId"),domSegSym=Symbol("domSegmentInstance");function $main(){let Q=this;$import("window:jQuery");class SegmentContext{constructor({scope:scope,context:context,segmentId:segmentId,dom:dom=null}){Q.$each(context,(val,key)=>{this[key]=val}),this.scope=scope,this.segmentId=segmentId,this.dom=Q.$objectExist(dom)?dom:null,this[dataCtxSym]=context,this[segIdSym]=segmentId,this[domSegSym]=null,Q.$objectExists(this.$segment)&&this.$segment.$isDomSegment&&(this.$segment.$segmentContextInstance=this)}get $isSegment(){return!0}get $dataContext(){return this[dataCtxSym]}get $actualSegment(){let scope=this.$getActualParent(),segmentCtx=this;for(;segmentCtx.scope instanceof SegmentContext;)segmentCtx=segmentCtx.scope;return Q.$objectExists(scope)&&Q.$functionExists(scope.$getAllSegments)?scope.$getAllSegments().$find("segmentId",segmentCtx[segIdSym]):null}get $segment(){if(Q.$objectExists(this[domSegSym])&&this[domSegSym].$isDomSegment)return this[domSegSym];let scope=this.$getActualParent();return Q.$objectExists(scope)&&Q.$functionExists(scope.$getAllSegments)?scope.$getAllSegments().$find("segmentId",this[segIdSym]):null}set $segment(domSeg){Q.$objectExists(domSeg)&&domSeg.$isDomSegment&&(this[domSegSym]=domSeg)}$getParent(){return this.scope}$getActualParent(){let parent=this.$getParent();for(;Q.$objectExist(parent)&&parent.$isSegment;)parent=parent.$getParent();return parent}$getRegisteredInstance(){let parent,registeredId,parentSegments=this.$getActualParent().$getAllSegments();if(this[segIdSym]&&this[segIdSym].startsWith("SMT-")&&(registeredId=this[segIdSym]),!Q.$stringExist(registeredId)){for(parent=this.$getParent();Q.$objectExist(parent)&&parent.$isSegment&&parent[segIdSym]&&parent[segIdSym].startsWith("SMT-");)parent=parent.$getParent();registeredId=parent[segIdSym]}return Q.$stringExist(registeredId)?parentSegments.$find("segmentId",registeredId):null}$findProperty(key){return this.hasOwnProperty(key)?this[key]:this.scope.$findProperty(key)}$importProperty(keys){Q.$stringExist(keys)?this[keys]=this.$findProperty(keys):Q.$isEmpty(keys)||Q.$each(keys,nxt=>{this[nxt]=this.$findProperty(nxt)})}$setDom(dom){Q.$objectExist(dom)&&(this.dom=dom)}$getDom(){return Q.$objectExist(this.dom)?this.dom:null}}$export("class:SegmentContext@segment@dom@AwrScope",SegmentContext)}__callModuleMainFn__($main,__$$requires$$__)})}(),function(){var __$$requires$$__=[],__$$errors$$__=null;__pushToBootQueue__(function(){__$require__(__$$requires$$__,["object:awr.$$core.$$class"]);window.awr;function $main(){let Q=this,$=$import("window:jQuery");$export("class:SegmentInserter@segment@dom@AwrScope",class{constructor(){}static $insert(domManager,scope,insertType,{setItemAs:setItemAs,dataContext:dataContext,setupName:setupName,templatePath:templatePath,html:html,nodeName:nodeName,attributes:attributes,bind:bind,bindOptions:bindOptions,selector:selector}){let compiledHtml,oldSegment,oldScope,segment,container,scopeManager=$import("object:awr.scopeManager"),Watchable=$import("function:awr.Watchable");if(function(scope,scopeManager){return scopeManager.$isAWRScopeInstance(scope)||scope&&scope.$isSegment}(scope,scopeManager)){if(insertType=Q.$stringExist(insertType)&&Q.$setContainsString(["append","prepend","replace"],insertType)?insertType:"append",container=Q.$objectExist(selector)&&!Q.$isEmpty($(selector))?$(selector):Q.$stringExist(selector)?$(scope.$getDom()).find(selector):$(scope.$getDom()),"replace"===insertType&&container[0]===scope.$getDom()[0]&&scopeManager.$isAWRScopeInstance(scope))return errName="illegalReplaceContainer",replaces=[{key:"scopeId",value:scope.$getScopeId()},{key:"selector",value:selector}],void __$errorOut__(__$$errors$$__,errName,replaces);var errName,replaces;compiledHtml=(segment=domManager.$createSegment.apply(domManager,[scope,{setItemAs:setItemAs,dataContext:dataContext,setupName:setupName,templatePath:templatePath,html:html,nodeName:nodeName,attributes:attributes}])).$compile(),"replace"===insertType?(oldScope=$import("scope:"+$(container).attr("awr-scope-id")),Q.$objectExist(oldScope)&&Q.$functionExist(oldScope.$destroy)?oldScope.$destroy():Q.$functionExist(scope.$getSegment)&&(oldSegment=scope.$getSegment($(container).attr("awr-segment-id")),Q.$objectExist(oldSegment)&&Q.$stringExist(oldSegment.segmentId)&&scope.$removeSegments(oldSegment.segmentId)),$(container).replaceWith(compiledHtml)):"append"===insertType?$(container).append(compiledHtml):$(container).prepend(compiledHtml),bindOptions=Q.$objectExist(bindOptions)?bindOptions:{preferWatchablesOverDefaultBind:!1},(!Q.$stringExist(bind)||bindOptions.preferWatchablesOverDefaultBind)&&dataContext instanceof Watchable&&(bind=function(watchable){let wName,bindUtils=$import("class:ScopeBindUtils@api@AwrScope");return bindUtils&&Q.$functionExist(bindUtils.makeDefaultScopeNameForWatchable)?(wName=bindUtils.makeDefaultScopeNameForWatchable(watchable),Q.$stringExist(wName)?`watchable:${wName}`:null):null}(dataContext)),Q.$stringExist(bind)&&(bindOptions.isFindAll=!1,scope.$bindSegments(bind,bindOptions))}}})}__$$errors$$__=__$loadErrors__("$$scope@kernel"),__callModuleMainFn__($main,__$$requires$$__)})}(),function(){var __$$requires$$__=[];__pushToBootQueue__(function(){__$require__(__$$requires$$__,["object:awr.$$core.$$class","class:DomSegment@segment@dom@AwrScope","class:SegmentContext@segment@dom@AwrScope","class:VariableCompiler@dom@AwrScope"]);window.awr;function $main(){let Q=this,$=$import("window:jQuery"),handlebars=$import("window:Handlebars"),variableCompiler=$import("class:VariableCompiler@dom@AwrScope"),DomSegment=$import("class:DomSegment@segment@dom@AwrScope"),SegmentContext=$import("class:SegmentContext@segment@dom@AwrScope");class SegmentUtils{constructor(){}static $createSegment(domManager,scope,{setItemAs:setItemAs,dataContext:dataContext,setupName:setupName,templatePath:templatePath,html:html,nodeName:nodeName,attributes:attributes}){let segment,segmentId=`NESTED-SMT-${(new Date).getTime()}`;if(scope.$isSegment||(segmentId=scope.$getUniqueSegmentId()),segment=new DomSegment({scope:scope,segmentId:segmentId,compilerFn:(...args)=>domManager.$compileSegment.apply(domManager,args),dataContext:dataContext,setItemAs:setItemAs,setupName:setupName,templatePath:templatePath,html:html,nodeName:nodeName,attributes:attributes}),!scope.$isSegment)try{scope.$registerSegment(segment)}catch(e){console.error(e)}return segment}static $compileSegment(domManager,scope,{context:context,html:html,nodeName:nodeName,attributes:attributes,segmentId:segmentId}){let wrapperNode,safeNodeName,segmentContext,xhtml,dom,savedRepeatLoopsContent,savedSegmentTagsContent,requestedKeys=[],decideNodeName=!Q.$stringExist(nodeName);try{$(html)}catch(e){html=`<${safeNodeName=Q.$stringExist(nodeName)?nodeName:"div"} class="__safe__block__">${html}</${safeNodeName}>`}if(1===$(html).length&&("awr-if"===$(html)[0].nodeName.toLowerCase()||"awr-screen"===$(html)[0].nodeName.toLowerCase()))try{html=`<${safeNodeName=Q.$stringExist(nodeName)?nodeName:"div"} class="__safe__block__">${html}</${safeNodeName}>`}catch(e){console.error(e)}return html=Q.$functionExist(html)?html(context):html,savedSegmentTagsContent=SegmentUtils.$pickSegmentTagsContent($(html)),savedRepeatLoopsContent=SegmentUtils.$pickRepeatLoopsContent($(html)),segmentContext=new SegmentContext({scope:scope,context:context,segmentId:segmentId}),xhtml=variableCompiler.$compileVariables({scope:segmentContext,content:html,onItem(item){requestedKeys.push(item.split(".")[0])}}),nodeName=Q.$stringExist(nodeName)?nodeName.toLowerCase():"div",attributes=Q.$isEmpty(attributes)?Q.$asCollection([]):Q.$asCollection(attributes),dom=handlebars.compile(xhtml)(segmentContext),1!==$(dom).length||$(dom)[0].nodeName.toLowerCase()!==nodeName&&!decideNodeName?(wrapperNode=$(`<${nodeName} />`)).html(dom):wrapperNode=$(dom),$(wrapperNode).removeClass("__safe__block__"),attributes.$each(nxt=>{let nxtAttrVal;Q.$exist($(wrapperNode).attr(nxt.key))?"class"===nxt.key&&$(wrapperNode).addClass(nxt.value):(nxtAttrVal=function({content:content,getPipedValue:getPipedValue=null,onItem:onItem=null}){let regex=new RegExp(/\$\{\s*([a-zA-Z0-9\$_\.*]*)\s*\}/,"g");return Q.$stringExist(content)?content.replace(regex,function(match,group){if(Q.$functionExist(onItem))try{onItem(group)}catch(e){}return"{{"+group+"}}"}):""}({content:nxt.value}),nxtAttrVal=handlebars.compile(nxtAttrVal)(segmentContext),$(wrapperNode).attr(nxt.key,nxtAttrVal))}),$(wrapperNode).addClass("awr-segment-block"),$(wrapperNode).attr("awr-segment-id",segmentId),segmentContext.$setDom(wrapperNode),domManager.$compileIfBlocks(segmentContext,"class-tag"),domManager.$compileScreenBlocks(segmentContext),domManager.$compileLinkBinders(segmentContext),domManager.$compileAttributes(segmentContext),domManager.$compileDataBinders(segmentContext),domManager.$compileClassBinders(segmentContext),SegmentUtils.$restoreSegmentTagsContent($(wrapperNode),savedSegmentTagsContent),$(wrapperNode).find("awr-segment").length>0&&($(wrapperNode).find("awr-segment").removeClass("bad-segment-tag-zone"),domManager.$compileAwrSegmentBlocks(segmentContext)),SegmentUtils.$restoreRepeatLoopsContent($(wrapperNode),savedRepeatLoopsContent),$(wrapperNode).find("awr-repeat, [awr-repeat]").length>0&&($(wrapperNode).find("awr-repeat, [awr-repeat]").removeClass("bad-zone"),domManager.$compileAwrRepeatLoops(segmentContext)),$(wrapperNode).find("awr-if.awr-if-block-to-be-removed").remove(),$(wrapperNode).find("[awr-src]").each((idx,elem)=>{$(elem).attr("src",$(elem).attr("awr-src"))}),wrapperNode}static $pickSegmentTagsContent(html){let picks=Q.$asCollection([]);return Q.$eachInDom($(html),"awr-segment",tag=>{picks.push({content:$(tag).html()})}),picks}static $pickRepeatLoopsContent(html){let attributes,picks=Q.$asCollection([]);return Q.$eachInDom($(html),"awr-repeat, [awr-repeat]",nxt=>{attributes=Q.$getDomAttributes(nxt),attributes=Q.$asCollection(attributes).$reduce(nxt=>!Q.$setContainsString(["awr-each","awr-scope-id","awr-each","awr-repeat","item-as","scope-type","controller","setup","template"],nxt.key)),picks.push({attributes:attributes,content:$(nxt).html()})}),picks}static $restoreRepeatLoopsContent(html,picks){return Q.$eachInDom($(html),"awr-repeat, [awr-repeat]",(nxt,idx)=>{let pick=picks[idx];$(nxt).html(pick.content),Q.$each(pick.attributes,attr=>{$(nxt).attr(attr.key,attr.value)})}),picks}static $restoreSegmentTagsContent(html,picks){return Q.$eachInDom($(html),"awr-segment",(tag,idx)=>{$(tag).html(picks[idx].content)}),picks}}$export("class:SegmentUtils@segment@dom@AwrScope",SegmentUtils)}__$loadErrors__("$$segment@AwrScope@kernel"),__callModuleMainFn__($main,__$$requires$$__)})}()}(window,jQuery);