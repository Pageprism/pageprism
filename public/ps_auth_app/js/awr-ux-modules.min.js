!function(window,$){"use strict";window.awr=window.awr||{},window.awr.bootQueue=window.awr.bootQueue||[];var console=window.console;function $export(path,exp,opts){opts=opts||{takeEasy:!0,appExport:!1};let sta=window.awr.$static,q=window.awr.Q;return opts.appExport=!1,opts.takeEasy=!q.$booleanFalse(opts.takeEasy),sta.$export(path,exp,opts)}function $import(ref){return window.awr.$static.$import(ref)}function __$require__(requires,obj){return window.awr.$static.$require(requires,obj)}function __$loadErrors__(name){return window.awr.$static.$loadErrors(name,!0)}function __$errorOut__(errors,errName,replaces){return window.awr.$static.$errorOut(errors,errName,replaces)}function __onModuleBootTimeoutError__(err){window.console.error("initModule@CORE@AWR: Failed to instantiate core module. \n\t + Details: Init process interrupted by timeout. \n\t + Hint: Required components were not ready  before maximum wait time."),window.console.error(err)}function __callModuleMainFn__(mainFn,requires){try{"function"==typeof mainFn&&(!function(requires){return window.awr.Q.$arrayNotEmpty(requires)||window.awr.Q.$objectExist(requires)}(requires)?mainFn.call(window.awr.Q):window.awr.Q.$commonWaitAndProceedOperation(requires,function(){mainFn.call(window.awr.Q)},3e3,__onModuleBootTimeoutError__))}catch(e){console.error(e)}}function __pushToBootQueue__(init){window.awr.bootQueue.push({moduleName:"basicCoreModule@AWR",requires:["object:awr.$$coreEssentials","object:awr.$static"],wTime:24e5,init:init,QAsContext:!0})}!function(){var __$$requires$$__=[];__pushToBootQueue__(function(){let ux,awr=window.awr||{},Q=(window.awr.$static.$app(),awr.Q);function AwrUX(){}function showDeprecatedWarn(msg){console.warn(`AWR WARN deprecated ${msg}`)}AwrUX.prototype.Lock=function(...args){return showDeprecatedWarn("function ux.Lock use Q.$execControl.LockObject instead"),Q.$execControl.LockObject.apply(Q,args)},AwrUX.prototype.copyToClipboard=function(...args){return showDeprecatedWarn("function ux.copyToClipboard use Q.$copyToClipboard instead"),Q.$copyToClipboard.apply(Q,args)},AwrUX.prototype.capitalizeName=function(...args){return showDeprecatedWarn("function ux.copyToClipboard use Q.$copyToClipboard instead"),Q.$capitalizeName.apply(Q,args)},AwrUX.prototype.execWithLock=function(...args){return showDeprecatedWarn("function ux.execWithLock use Q.$execControl.execWithLock instead"),Q.$execControl.execWithLock.apply(Q,args)},AwrUX.prototype.initLock=function(...args){return showDeprecatedWarn("function ux.initLock use Q.$execControl.initLock instead"),Q.$execControl.initLock.apply(Q,args)},ux=new AwrUX,awr.ux=ux,$export("object:awr.ux",ux),__callModuleMainFn__("function"==typeof $main?$main:null,__$$requires$$__)})}(),function(){var __$$requires$$__=[];__pushToBootQueue__(function(){__$require__(__$$requires$$__,["object:awr.$$core.$$class","class:StartRoutines@AwrAppView","object:awr.eventManager","class:AppStatsSetup@AppView"]);const timeoutDelay=6e5;let awr=window.awr||{};function $main(){let Q=awr.Q,stats=awr.basicStats,events=$import("object:awr.eventManager"),AppStatsSetup=$import("class:AppStatsSetup@AppView"),$emit=(events.$on,events.$emit),routines=(events.$off,$import("class:StartRoutines@AwrAppView"));function continueWithAppStart(originalRootHtml,opts){let ctrlName,ctrlObject,requires,controller=opts.controller;$import("window:jQuery")("#rootLoadingSpinner").remove(),!Q.$functionExist(controller)&&Q.$stringExist(opts.controller)&&(ctrlObject=$import(ctrlName=(ctrlName=opts.controller).startsWith("controller:")?ctrlName:"controller:"+ctrlName),Q.$objectExist(ctrlObject)&&Q.$functionExist(ctrlObject.fn)&&(controller=ctrlObject.fn,requires=Q.$arrayExist(ctrlObject.requires)?ctrlObject.requires:[]),opts.requires=requires),Q.$stringExist(opts.controller)&&Q.$isUX3TypeClass(controller)?routines.startUX3App(opts.controller,opts,originalRootHtml):Q.$functionExist(controller)?routines.startTheApp(controller,opts,originalRootHtml):routines.startTheApp(null,opts,originalRootHtml),$emit("appView:routine-event",{name:"ux-app-type-detected",originalEventPublisher:"appStart@AppView",time:new Date,uxAppType:Q.$stringExist(opts.controller)&&Q.$isUX3TypeClass(controller)?"UX3App":"legacyUXApp"})}AppStatsSetup.setupBootStats(stats),AppStatsSetup.setupBootReport(stats),Q.$installInAppGlobal("$start","$start",{$start:function(opts){if(opts=opts||{},Q.$booleanTrue(awr.isTestSession))return;$emit("appView:routine-event",{name:"app-boot-began",originalEventPublisher:"appStart@AppView",time:new Date}),stats.enterBoot=(new Date).getTime(),Q.$commonWaitAndProceedOperation(["object:awr.$$appEssentials","object:awr.routeManager","object:awr.ux","object:awr.factory"],()=>{let waitForRoot,originalRootHtml=Q.$getHtml(Q.$findInDom("body","> div[awr-app]"));Q.$stringExist(originalRootHtml)?continueWithAppStart(originalRootHtml,opts):(waitForRoot=setInterval(_=>{originalRootHtml=Q.$getHtml(Q.$findInDom("body","> div[awr-app]")),Q.$stringExist(originalRootHtml)&&(clearInterval(waitForRoot),continueWithAppStart(originalRootHtml,opts))},0),$emit("appView:routine-event",{name:"app-boot-wait",reason:"missing-root",originalEventPublisher:"appStart@AppView",time:new Date}))},timeoutDelay,"AWR: APP START FAILED DUE TO DEPENDENCY WAIT TIMEOUT.")}},!1),Q.$installInAppGlobal("$view","$view",{$view:function(opts){if(opts=opts||{},Q.$booleanTrue(awr.isTestSession))return;stats.enterViewBoot=(new Date).getTime(),$emit("appView:routine-event",{name:"view-boot-began",originalEventPublisher:"appView@AppView",time:new Date}),Q.$commonWaitAndProceedOperation(["object:awr.$$appEssentials","object:awr.ux","object:awr.factory"],()=>{let ctrlName,ctrlObject,requires,controller=opts.controller;!Q.$functionExist(controller)&&Q.$stringExist(opts.controller)&&(ctrlObject=$import(ctrlName=(ctrlName=opts.controller).startsWith("controller:")?ctrlName:"controller:"+ctrlName),Q.$objectExist(ctrlObject)&&Q.$functionExist(ctrlObject.fn)&&(controller=ctrlObject.fn,requires=Q.$arrayExist(ctrlObject.requires)?ctrlObject.requires:[]),opts.requires=requires,opts.originalControllerName=ctrlName),Q.$stringExist(ctrlName)&&Q.$isUX3TypeClass(controller)?routines.startUX3View(ctrlName,opts):Q.$functionExist(controller)?routines.startTheView(controller,opts):routines.startTheView(null,opts),$emit("appView:routine-event",{name:"ux-view-type-detected",originalEventPublisher:"appStart@AppView",time:new Date,uxViewType:Q.$stringExist(ctrlName)&&Q.$isUX3TypeClass(controller)?"UX3View":"legacyUXView"})},timeoutDelay,"AWR: APP VIEW FAILED DUE TO DEPENDENCY WAIT TIMEOUT.")}},!1)}__callModuleMainFn__($main,__$$requires$$__)})}(),function(){var __$$requires$$__=[],__$$errors$$__=null;function $errorOut(errName,replaces){return __$errorOut__(__$$errors$$__,errName,replaces)}__pushToBootQueue__(function(){window.awr;function $main(){let Q=this,ModelClass=$import("class:Model@model"),registry=$import("object:awr.registryManager");$export("object:awr.modelTypeManager",{importModel:function(name){let modelName=name,modelRegName=ModelClass.$modelRegistryName;if(Q.$stringExist(modelName)){if(modelName=Q.$appendAWRNameSpace(name,"Model"),registry.$inRegistry(modelRegName,modelName))return registry.$get(modelRegName,modelName);$errorOut("badImportModel",[{key:"modelName",value:modelName}])}else $errorOut("badImportModelName")},modelAvailable:function(name){let modelName=name,modelRegName=ModelClass.$modelRegistryName;return Q.$stringExist(modelName)?(modelName=Q.$appendAWRNameSpace(modelName,"Model"),Q.$exist(registry.$get(modelRegName,modelName))):($errorOut("badAvailableModelName"),!1)},exportModel:function(name,modelConfig,opts){let requires,item,modelRegName=ModelClass.$modelRegistryName;Q.$arrayExist(modelConfig)?(requires=Q.$reduce(modelConfig,nxt=>Q.$stringExist(nxt)),item=Q.$reduce(modelConfig,nxt=>Q.$functionExist(nxt)).$first()):item=modelConfig,Q.$commonWaitAndProceedOperation(requires,()=>{!function(modelRegName,{name:name,modelClass:modelClass,modelConfig:modelConfig,opts:opts}){let modelName,model;if(Q.$stringExist(name)&&(Q.$isUX3TypeClass(modelConfig)||Q.$objectExist(modelConfig))&&!Q.$setContainsString(["__NULL__","__NULL__@AWRModel"],name))if(modelName=Q.$appendAWRNameSpace(name,"Model"),registry.$inRegistry(modelRegName,modelName))$errorOut("modelAlreadyInReg");else{if(Q.$isUX3TypeClass(modelConfig))try{modelConfig=new modelConfig}catch(err){modelConfig=null,$errorOut("badUX3TypeModelConstructor",[{key:"modelName",value:modelName},{key:"errMsg",value:err}])}Q.$objectExist(modelConfig)&&(Q.$stringExist(modelConfig.url)?(modelConfig.name=name,model=new modelClass(modelConfig),registry.$add(modelRegName,modelName,model)):$errorOut("badModelUrlReg",[{key:"modelName",value:modelName}]))}else $errorOut("badModelReg")}(modelRegName,{name:name,modelClass:ModelClass,modelConfig:item,opts:opts})},3e3,err=>{$errorOut("modelConstructorDependencyTimeout",[{key:"modelName",value:name},{key:"errMsg",value:err}])})}},{takeEasy:!1})}__$require__(__$$requires$$__,["function:awr.registerClass","class:Model@model","object:awr.registryManager"]),__$$errors$$__=__$loadErrors__("$$model@kernel"),__callModuleMainFn__($main,__$$requires$$__)})}(),function(){var __$$requires$$__=[],__$$errors$$__=null;__pushToBootQueue__(function(){window.awr;function $main(){let Q=this,observerId=0,modelManager=$import("object:awr.modelManager"),events=$import("object:awr.eventManager"),Observable=$import("class:Observable@event");const modelRegName="AppModel",defaultHeaders={accept:"application/json","content-type":"application/json"},eventListenerNames={save:"onSave",get:"onGet",remove:"onRemove",create:"onCreate",findAll:"onFindAll",error:"onError"};$import("object:awr.registryManager").$create(modelRegName);$export("class:Model@model",class{constructor({name:name,url:url,headers:headers,pipes:pipes}){let _self=this;this.headers=Q.$objectExist(headers)?headers:{},this.url=Q.$stringExist(url)?url:"",this.pipes=pipes,Q.$forEachProperty(defaultHeaders,(val,key)=>{_self.headers.hasOwnProperty(key)||(_self.headers[key]=val)}),this.model=modelManager.$defineModel({url:_self.url,headers:_self.headers,name:name,pipes:pipes});let eventListeners={};Q.$forEachProperty(eventListenerNames,(val,key)=>{eventListeners[val]=((modelObject,query,type,message)=>{Q.$objectExist(events)&&Q.$functionExist(events.$emit)&&events.$emit(`model:${name}-events`,{requestType:Q.$stringEqual(key,"error")?type:key,requestId:!Q.$stringEqual(key,"findAll")&&modelObject?modelObject.id:null,requestStatus:Q.$stringEqual(key,"error")?"error":"success",requestQuery:query,requestMessage:message,modelName:name,modelInstance:Q.$objectExist(modelObject)?modelObject:null,modelCollection:Q.$arrayExist(modelObject)?Q.$asCollection(modelObject):Q.$asCollection([])})})}),_self.model.$setEventListeners(eventListeners),this.observable=new Observable(observer=>{let listenerId=`${name}-model-events-listener-${observerId+=1}`;return Q.$objectExist(events)&&Q.$functionExist(events.$on)&&events.$on(`model:${name}-events`,event=>observer.next(event),listenerId),()=>{Q.$objectExist(events)&&Q.$functionExist(events.$off)&&events.$off(`model:${name}-events`,listenerId)}})}static get $modelRegistryName(){return modelRegName}$emitModelEvent({modelInstance:modelInstance=null,eventType:eventType,query:query=null,message:message}){let globals=this.model.globals,listener=null,args=[Q.$objectExists(modelInstance)?modelInstance:null,query,eventType,message];var errName,replaces;if(Q.$each(eventListenerNames,(fnName,key)=>{key===eventType&&(listener=fnName)}),Q.$stringExists(listener)&&Q.$functionExist(globals[listener]))try{globals[listener].apply(Q.$objectExists(modelInstance)?modelInstance:void 0,args)}catch(e){errName="badModelListenerCall",replaces=[{key:"errMsg",value:e},{key:"listenerName",value:listener},{key:"modelName",value:globals.name?globals.name:"unknown"}],__$errorOut__(__$$errors$$__,errName,replaces)}}$subscribe(next,error,complete){return this.observable.$subscribe({next:Q.$objectExist(next)&&Q.$functionExist(next.next)?next.next:next,error:Q.$objectExist(next)&&Q.$functionExist(next.error)?next.error:error,complete:Q.$objectExist(next)&&Q.$functionExist(next.complete)?next.complete:complete})}$create(data,query,opts){return this.model.$create(data,query,opts)}$template(data){return this.model.$template(data)}$findOne(model_id,query,opts){return this.model.$findOne(model_id,query,opts)}$findAll(query,opts){return this.model.$findAll(query,opts)}})}__$require__(__$$requires$$__,["object:awr.$$core","function:awr.registerClass","object:awr.registryManager","object:awr.modelManager","object:awr.eventManager","class:Observable@event"]),__$$errors$$__=__$loadErrors__("$$model@kernel"),__callModuleMainFn__($main,__$$requires$$__)})}(),function(){var __$$requires$$__=[];__pushToBootQueue__(function(){window.awr;function $main(){let Q=this,RemoteModel=$import("class:RemoteModel@model"),Observable=$import("class:Observable@event"),globalAPI=null,globalHeaders=null;$export("object:awr.modelManager",function(){let mainObservable=new Observable(observer=>{let events=$import("service:eventManager");return events.$on("modelManager:model-call-started",({modelObject:modelObject,query:query,type:type,name:name})=>{observer.next({requestType:type,requestId:Q.$objectExist(modelObject)?modelObject.id:null,requestStatus:"busy",requestQuery:query,listenerType:"onCall",modelName:name,modelInstance:modelObject})},"model-manager-on-call-started-listener"),events.$on("modelManager:model-call-completed",({modelObject:modelObject,query:query,type:type,status:status,message:message,name:name})=>{observer.next({requestType:type,requestId:Q.$objectExist(modelObject)?modelObject.id:null,requestStatus:status,requestQuery:query,requestMessage:message,listenerType:"onCallCompleted",modelName:name,modelInstance:modelObject})},"model-manager-on-call-completed-listener"),()=>{events.$off("modelManager:model-call-started","model-manager-on-call-started-listener"),events.$off("modelManager:model-call-completed","model-manager-on-call-completed-listener")}});return{$subscribe:(next,error,complete)=>mainObservable.$subscribe({next:Q.$objectExist(next)&&Q.$functionExist(next.next)?next.next:next,error:Q.$objectExist(next)&&Q.$functionExist(next.error)?next.error:error,complete:Q.$objectExist(next)&&Q.$functionExist(next.complete)?next.complete:complete}),$defineModel(opts){let model;return Q.$stringExist(globalAPI)&&Q.$stringExist(opts.url)&&!opts.url.startsWith("http://")&&!opts.url.startsWith("https://")&&(opts.url=`${globalAPI}${opts.url}`),opts.headers=opts.headers||{},Q.$objectExist(globalHeaders)&&Q.$forEachProperty(globalHeaders,(value,key)=>{opts.headers.hasOwnProperty(key)||(opts.headers[key]=value)}),Object.defineProperty(opts,"globalConfig",{get:()=>({api:globalAPI,headers:globalHeaders}),configurable:!1}),(model=new RemoteModel(opts)).$setEventListeners({onCall:(modelObject,query,type,name)=>{let events=$import("service:eventManager");Q.$objectExist(events)&&Q.$functionExist(events.$emit)&&events.$emit("modelManager:model-call-started",{modelObject:modelObject,query:query,type:type,name:name})},onCallComplete:(modelObject,query,type,status,message,name)=>{let events=$import("service:eventManager");Q.$objectExist(events)&&Q.$functionExist(events.$emit)&&events.$emit("modelManager:model-call-completed",{modelObject:modelObject,query:query,type:type,status:status,message:message,name:name})}}),model},$setGlobalPrefix(path){globalAPI=path},$setGlobalHeaders(headers){headers=headers||{},Q.$objectExist(globalHeaders)?Q.$forEachProperty(headers,(value,key)=>{globalHeaders[key]=value}):globalHeaders=headers}}}(),{takeEasy:!1}),$export("service:modelManager",function(){return $import("object:awr.modelManager")})}__$require__(__$$requires$$__,["object:awr.$$core","function:awr.registerClass","class:RemoteModel@model","object:awr.eventManager","class:Observable@event","function:awr.factory.$registerService"]),__$loadErrors__("$$model@kernel"),__callModuleMainFn__($main,__$$requires$$__)})}(),function(){var __$$requires$$__=[];__pushToBootQueue__(function(){let Q=(window.awr||{}).Q;__$require__(__$$requires$$__,["object:awr.$$core","object:awr.serial"]),__$loadErrors__("$$model@kernel");function $main(){let serial=$import("object:awr.serial"),compressor=$import("window:LZString");function importToken(name){if(!Q.$stringExist(name))return null;let token,decoded,arr=name.split("@decoder:"),nameStr=arr[0].trim(),decoder=arr[1]&&Q.$stringExist(arr[1].trim())?arr[1].trim():null;return token=localStorage.getItem(nameStr),Q.$stringExist(token)&&"null"!==token&&"undefined"!==token||(token=sessionStorage.getItem(nameStr)),Q.$stringExist(token)?(compressor&&Q.$functionExist(compressor.decompressFromUTF16)&&token.endsWith(".UTF16")&&(token=compressor.decompressFromUTF16(token.split(".UTF16")[0])),"null"===(decoded=Q.$stringExist(decoder)?function(str,bp,decoder){let res,decoderLogic=getBase64Content(decoder);if(!Q.$stringExist(decoderLogic))return str;try{res=new Function("str","bp","Q",decoderLogic)(str,bp,Q)}catch(e){res=null}return res}(token,serial.basicPrime,decoder):token)||"undefined"===decoded?null:decoded):null}$export("object:awr.tokenManager",{exportToken:function(name,token,opts){let remember=!1;if(!Q.$stringExist(name))return;if(!Q.$stringExist(token))return localStorage.setItem(name,null),void sessionStorage.setItem(name,null);let encoded,arr=token.split("@encoder:"),str=arr[0].trim(),encoder=Q.$stringExist(arr[1])?arr[1]:null;if(!Q.$stringExist(str))return localStorage.setItem(name,null),void sessionStorage.setItem(name,null);str.endsWith("@remember")&&(remember=!0,str=str.split("@remember")[0]),encoded=Q.$stringExist(encoder)?function(str,bp,encoder){let res,encoderLogic=getBase64Content(encoder);if(!Q.$stringExist(encoderLogic))return str;try{res=new Function("str","bp","Q",encoderLogic)(str,bp,Q)}catch(e){res=null}return res}(str.trim(),serial.basicPrime,encoder):str,compressor&&Q.$functionExist(compressor.compressToUTF16)&&(encoded=`${compressor.compressToUTF16(encoded)}.UTF16`),Q.$booleanTrue(remember)?(localStorage.setItem(name,encoded),sessionStorage.setItem(name,null)):(localStorage.setItem(name,null),sessionStorage.setItem(name,encoded))},importToken:importToken,tokenAvailable:function(name){return Q.$stringExist(importToken(name))}},{takeEasy:!1,appExport:!1})}function getBase64Content(str){if(!Q.$stringExist(str))return null;let arr=str.trim().startsWith("base64:")?str.split("base64:"):null;return Q.$arrayExist(arr)?arr.length>1?window.atob(arr[1].trim()):null:str}__callModuleMainFn__($main,__$$requires$$__)})}(),function(){var __$$requires$$__=[],__$$errors$$__=null;function $errorOut(errName,replaces){return __$errorOut__(__$$errors$$__,errName,replaces)}__pushToBootQueue__(function(){let serverCall,awr=window.awr||{},Q=awr.Q,$=$import("window:jQuery");function $main(){function BasicHttpClient(){}BasicHttpClient.prototype.basicCall=basicCall,BasicHttpClient.prototype.basicGET=basicGET,BasicHttpClient.prototype.basicPOST=basicPOST,BasicHttpClient.prototype.basicPUT=basicPUT,BasicHttpClient.prototype.basicDELETE=basicDELETE,BasicHttpClient.prototype.basicFormPOST=basicFormPOST,BasicHttpClient.prototype.basicPOSTLike=basicPOSTLike,BasicHttpClient.prototype.basicFileUpload=basicFileUpload,BasicHttpClient.prototype.$get=function(opts){return function(opts){return(opts=opts||{}).contentType=opts.contentType||"application/json",opts.accept=opts.accept||"application/json",opts.processData=!0,opts.cache=!1,opts.async=!0,opts.type="GET",opts.afterPipes=Q.$stringExist(opts.pipes)||Q.$objectExist(opts.pipes)?[opts.pipes]:Q.$isEmpty(opts.pipes)?[]:opts.pipes,promiseCall(opts)}(opts)},BasicHttpClient.prototype.$post=function(opts){return promisePOSTLike("POST",opts)},BasicHttpClient.prototype.$delete=function(opts){return promisePOSTLike("DELETE",opts)},BasicHttpClient.prototype.$put=function(opts){return promisePOSTLike("PUT",opts)},BasicHttpClient.prototype.$upload=function(opts){return function({url:url,type:type="POST",data:data,async:async=!0,cache:cache=!1,contentType:contentType=!1,processData:processData=!1,encType:encType="multipart/form-data",dataType:dataType,accept:accept,authorization:authorization,headers:headers,progress:progress}){(headers=Q.$objectExist(headers)?headers:{}).accept=Q.$stringExist(headers.accept)?headers.accept:accept,headers.authorization=Q.$stringExist(headers.authorization)?headers.authorization:authorization;let csrf=getCRSFToken();Q.$stringExist(csrf)&&(headers["X-CSRF-TOKEN"]=csrf);let formData=new FormData;return Q.$forEachProperty(data,(value,key)=>{appendMultiFiles(formData,key,value)}),new Promise(function(resolve,reject){$.ajax({url:getCleanURL(url),type:type,data:formData,async:async,cache:cache,enctype:encType,contentType:contentType,dataType:dataType,processData:processData,accept:accept,headers:headers,xhr:function(){let myXhr=$.ajaxSettings.xhr();return myXhr.upload&&myXhr.upload.addEventListener("progress",function(event){if(Q.$functionExist(progress))try{progress(event)}catch(e){$errorOut("badUploadProgressListener",[{key:"errMsg",value:e}])}},!1),myXhr},success:function(res){resolve(res)},error:function(res){reject(res)}})})}(opts)},BasicHttpClient.prototype.$request=function(opts){return promiseCall(opts)},serverCall=new BasicHttpClient,awr.serverCall=serverCall,$export("object:awr.serverCall",serverCall,{takeEasy:!1}),$export("service:serverCall",function(){return $import("object:awr.serverCall")}),$export("service:httpClient",function(){return $import("object:awr.serverCall")})}function getCleanURL(url){if(!Q.$stringExist(url))return"";let actualPart=url.split("#")[0],spaPart=url.split("#")[1],path=actualPart.split("?")[0],query=actualPart.split("?")[1];return"/"===path?path="":path.endsWith("/")&&(path=path.substring(0,path.length-1)),`${path}${query=Q.$stringExist(query)?`?${query}`:""}${spaPart=Q.$stringExist(spaPart)?`#${spaPart}`:""}`}function getCRSFToken(){let csrfMetaTag=$("head").find('meta[name="csrf-token"]')[0],devCsrfMetaTag=$("head").find('meta[name="dev-csrf-token"]')[0],csrf=csrfMetaTag?$(csrfMetaTag).attr("content"):null,devCsrf=devCsrfMetaTag?$(devCsrfMetaTag).attr("content"):null;return Q.$stringExist(csrf)?csrf:devCsrf}function basicCall({url:url,type:type,data:data,async:async,cache:cache,contentType:contentType,dataType:dataType,processData:processData,accept:accept,onSuccess:onSuccess,onComplete:onComplete,onError:onError,headers:headers,authorization:authorization}){(headers=Q.$objectExist(headers)?headers:{}).accept=Q.$stringExist(headers.accept)?headers.accept:accept,headers.authorization=Q.$stringExist(headers.authorization)?headers.authorization:authorization;let csrf=getCRSFToken(),callbacks=("function"!=typeof(opts={onError:onError,onSuccess:onSuccess,onComplete:onComplete}).onSuccess&&(opts.onSuccess=function(res){"function"==typeof opts.success&&opts.success(res),"function"==typeof opts.onComplete&&opts.onComplete(res)}),"function"!=typeof opts.onError&&(opts.onError=function(err){err=err||{},awr.errorLog("httpCall@serverCall","Error occurred with server call",err.statusText),"function"==typeof opts.error&&opts.error(err),"function"==typeof opts.fail&&opts.fail(err),"function"==typeof opts.onComplete&&opts.onComplete(err)}),"function"!=typeof opts.onComplete&&(opts.onComplete=function(res){"function"==typeof opts.complete&&opts.complete(res)}),opts);var opts;return onError=callbacks.onError,onSuccess=callbacks.onSuccess,onComplete=callbacks.onComplete,Q.$stringExist(csrf)&&(headers["X-CSRF-TOKEN"]=csrf),$.ajax({url:getCleanURL(url),type:type,data:data,async:async,cache:cache,contentType:contentType,dataType:dataType,processData:processData,headers:headers,accept:accept,success:function(res){"function"==typeof onSuccess&&onSuccess(res),"function"==typeof onComplete&&onComplete(res)},error:function(res){let dom;res.getErrorDomText=function(index){if(res&&res.responseText){try{return dom=$(res.responseText),res.errorDomBody=$(dom).find("body"),0===res.errorDomBody.length&&(res.errorDomBody=$(res.errorDomBody.prevObject)),res.errorDomBody[index].innerText}catch(e){res.errorDomBody=res.responseText}return res.responseText}return res||"No error description text"},"function"==typeof onError&&onError(res),"function"==typeof onComplete&&onComplete(res)}})}function promiseCall({url:url,type:type,data:data,async:async=!0,cache:cache,contentType:contentType,dataType:dataType,processData:processData,accept:accept,authorization:authorization,headers:headers,beforePipes:beforePipes=[],afterPipes:afterPipes=[]}){(headers=Q.$objectExist(headers)?headers:{}).accept=Q.$stringExist(headers.accept)?headers.accept:accept,headers.authorization=Q.$stringExist(headers.authorization)?headers.authorization:authorization;let pipedData,csrf=getCRSFToken();return Q.$stringExist(csrf)&&(headers["X-CSRF-TOKEN"]=csrf),beforePipes=Q.$map(beforePipes,nxt=>Q.$stringExist(nxt)?nxt.startsWith("pipe:")?nxt:`pipe:${Q.$firstLetterToLowerCase(nxt)}`:Q.$objectExist(nxt)&&Q.$stringExist(nxt.pipe)&&acceptPipe(type,nxt)?nxt.pipe.startsWith("pipe:")?nxt.pipe:`pipe:${Q.$firstLetterToLowerCase(nxt.pipe)}`:void 0),afterPipes=Q.$map(afterPipes,nxt=>Q.$stringExist(nxt)?nxt.startsWith("pipe:")?nxt:`pipe:${Q.$firstLetterToLowerCase(nxt)}`:Q.$objectExist(nxt)&&Q.$stringExist(nxt.pipe)&&acceptPipe(type,nxt)?nxt.pipe.startsWith("pipe:")?nxt.pipe:`pipe:${Q.$firstLetterToLowerCase(nxt.pipe)}`:void 0),new Promise(function(resolve,reject){if(!Q.$isEmpty(beforePipes)&&"json"===dataType&&Q.$stringExist(data))try{pipedData=JSON.parse(data)}catch(e){pipedData=data}else pipedData=data;Q.$commonWaitAndProceedOperation(beforePipes,_=>{beforePipes.$each(nxt=>{let pipe=$import(nxt);try{pipedData=pipe.transform(pipedData,{method:type.toUpperCase(),url:getCleanURL(url)})}catch(err){$errorOut("errorInPipe",[{key:"pipeName",value:nxt.split("pipe:")[1]},{key:"callPhase",value:"request"},{key:"errMsg",value:err}])}}),Q.$exist(pipedData)||(pipedData={}),"json"===dataType&&pipedData&&(pipedData instanceof Array||"object"==typeof pipedData)&&(pipedData=JSON.stringify(pipedData)),$.ajax({url:getCleanURL(url),type:type,data:pipedData,async:async,cache:cache,contentType:contentType,dataType:dataType,processData:processData,accept:accept,headers:headers,success:function(res){Q.$commonWaitAndProceedOperation(afterPipes,_=>{let pipedRes=res;afterPipes.$each(nxt=>{let pipe=$import(nxt);try{pipedRes=pipe.transform(pipedRes,{method:type.toUpperCase(),url:getCleanURL(url)})}catch(err){$errorOut("errorInPipe",[{key:"pipeName",value:nxt.split("pipe:")[1]},{key:"callPhase",value:"response"},{key:"errMsg",value:err}])}}),resolve(pipedRes)},2e3,"ServerCall: requested pipes for < after > request did not load within a desired wait time")},error:function(res){reject(res)}})},2e3,"ServerCall: pipes for < before > request did not load within a desired wait time")})}function acceptPipe(type,{method:method}={}){return!Q.$stringExist(method)&&!Q.$arrayExist(method)||(Q.$arrayExist(method)?Q.$setContainsString(Q.$map(method,mtd=>mtd.toLowerCase()),type.toLowerCase())||Q.$setContainsString(method,"*"):!Q.$stringExist(method)||("*"===method||method.toLowerCase()===type.toLowerCase()))}function basicFormPOST(opts){return(opts=opts||{}).contentType=!1,opts.processData=!1,opts.cache=!1,opts.async=!0,opts.type="POST",basicCall(opts)}function basicGET(opts){return(opts=opts||{}).contentType="application/json",opts.processData=!0,opts.cache=!1,opts.async=!0,opts.type="GET",basicCall(opts)}function basicPOST(opts){return basicPOSTLike("POST",opts)}function basicPUT(opts){return basicPOSTLike("PUT",opts)}function basicDELETE(opts){return basicPOSTLike("DELETE",opts)}function basicPOSTLike(httpMethodType,opts){return(opts=opts||{}).contentType="application/json",opts.dataType="json",opts.accept="application/json",opts.processData=!0,opts.cache=!1,opts.async=!0,opts.type=httpMethodType,basicCall(opts)}function promisePOSTLike(httpMethodType,opts){return(opts=opts||{}).contentType="application/json",opts.dataType="json",opts.accept="application/json",opts.processData=!0,opts.cache=!1,opts.async=!0,opts.type=httpMethodType,opts.beforePipes=Q.$stringExist(opts.pipes)||Q.$objectExist(opts.pipes)?[opts.pipes]:Q.$isEmpty(opts.pipes)?[]:opts.pipes,promiseCall(opts)}function basicFileUpload(opts){opts=opts||{};let formData=new FormData;if(opts.data){for(let d in opts.data)"file_key"===d?appendMultiFiles(formData,opts.data.file_key,opts.data.file):"file_key"!==d&&"file"!==d&&appendMultiFiles(formData,d,opts.data[d]);return opts.data=formData,opts.contentType=!1,opts.processData=!1,opts.cache=!1,opts.async=!0,opts.type="POST",basicCall(opts)}awr.errorLog("basicFileUpload@serverCall","Failed to upload file. No data passed in for upload!")}function appendMultiFiles(formData,key,value){if(value instanceof FileList)for(let f of value)formData.append(key,f);else formData.append(key,value)}__$require__(__$$requires$$__,["function:awr.registerClass","object:awr.registryManager","function:awr.factory.$registerService"]),__$$errors$$__=__$loadErrors__("$$serverCall@kernel"),__callModuleMainFn__($main,__$$requires$$__)})}(),function(){var __$$requires$$__=[];__pushToBootQueue__(function(){__$require__(__$$requires$$__,["function:awr.registerClass","class:BasicTypeIORegistrar@AwrFactory","class:GenericFactory@AwrFactory","object:awr.factory","object:awr.modelTypeManager"]);window.awr;function $main(){let modelFactory,factoryManager=$import("object:awr.factory"),typeIO=$import("class:BasicTypeIORegistrar@AwrFactory"),GenericFactory=$import("class:GenericFactory@AwrFactory"),modelTypeManager=$import("object:awr.modelTypeManager");(modelFactory=new class extends GenericFactory{constructor(factory,typeRegistrar){super(factory,typeRegistrar,null,"model")}$get(itemName){return itemName=this.$postProcessItemName(this.$processItemName(itemName),this.typeName),modelTypeManager.importModel(itemName)}$register(itemName,modelObj,opts){return itemName=this.$postProcessItemName(this.$processItemName(itemName),this.typeName),modelTypeManager.exportModel(itemName,modelObj,opts)}$exists(itemName){return itemName=this.$postProcessItemName(this.$processItemName(itemName),this.typeName),modelTypeManager.modelAvailable(itemName)}$remove(itemName){return itemName=this.$postProcessItemName(this.$processItemName(itemName),this.typeName),!1}}(factoryManager,typeIO)).$install()}__$loadErrors__("$$factory@kernel"),__callModuleMainFn__($main,__$$requires$$__)})}(),function(){var __$$requires$$__=[],__$$errors$$__=null;__pushToBootQueue__(function(){let awr=window.awr||{};function $main(){let Q=this,Promise=window.Promise;function triggerListener(modelObject,globals,listener,args){if(Q.$arrayExist(args)&&globals&&Q.$stringExist(globals.name)&&args.push(globals.name),Q.$functionExist(globals[listener]))try{globals[listener].apply(modelObject,args)}catch(e){errName="badModelListenerCall",replaces=[{key:"errMsg",value:e},{key:"listenerName",value:listener},{key:"modelName",value:globals.name?globals.name:"unknown"}],__$errorOut__(__$$errors$$__,errName,replaces)}var errName,replaces}function getCleanUrl(url,query){let protocol;return url=url||"/",query=query||"",url.endsWith("?")&&(url=url.substring(0,url.length-1)),query.startsWith("?")||(query=`?${query}`),url.startsWith("http://")?(protocol="http://",url=url.replace("http://","")):url.startsWith("https://")&&(protocol="https://",url=url.replace("https://","")),`${protocol}${url=Q.$collect(url.split("/"),(collected,nxt)=>(collected=Q.$stringExist(collected)?collected:"",collected+=Q.$stringExist(nxt)?`${nxt}/`:""))}${query}`}function attachIDToURL(url,id){return url||console.error("AwrModel: attachIDToURL: Fatal no URL detected"),url=Q.$stringExist(url)?url:"",id=Q.$exist(id)?id:"",(url=(url=url.split("?")[0]).endsWith("/")?url:url+"/")+id}function getCleanCallConfig(settings){let newSettings=Object.assign({},settings),config=Q.$functionExist(settings.getGlobalConfig)?settings.getGlobalConfig():null;return Q.$objectExist(config)?(url=newSettings.url,root=config.api,Q.$stringExist(root)&&Q.$stringExist(url)&&!(url.startsWith(root)||url.startsWith("http:")||url.startsWith("https:"))&&((config.api.endsWith("api")||config.api.endsWith("api/"))&&newSettings.url.startsWith("/api")&&(newSettings.url=newSettings.url.substring(4)),config.api.endsWith("/")||(config.api+="/"),settings.url.startsWith("/")&&(newSettings.url=settings.url.substring(1)),newSettings.url=config.api+newSettings.url),Q.$forEachProperty(Q.$objectExist(config.headers)?config.headers:{},(nxt,key)=>{newSettings[key]=nxt}),newSettings):newSettings;var url,root}function ModelObjectMethods(opts,globals){let _self=this;Object.defineProperty(this,"$settings",{value:Q.$objectExist(opts)?opts:{},enumerable:!1}),Object.defineProperty(this,"__$$globals$$__",{value:Q.$objectExist(globals)?globals:{},enumerable:!1,configurable:!1}),Object.defineProperty(this,"id",{get:()=>_self.$id,set:value=>{_self.$id!==value&&(_self.$id=value)},enumerable:!0,configurable:!1}),this.$settings.url.endsWith("/")||(this.$settings.url+="/"),opts.data&&this.$setData(opts.data),Q.$stringExist(this.$id)||Q.$numberExist(this.$id)||!Q.$numberExist(opts.$id)&&!Q.$stringExist(opts.$id)||(this.$id=opts.$id),Q.$stringExist(this.$id)||Q.$numberExist(this.$id)||!Q.$numberExist(opts.id)&&!Q.$stringExist(opts.id)||(this.$id=opts.id)}ModelObjectMethods.prototype.$setData=function(data){data&&data instanceof Array&&data.length>0&&(data=data[0]),data&&"object"===$.type(data)&&Q.$forEachProperty(data,(val,key)=>{Q.$setContainsString(["$settings","__$$globals$$__"],key)||(this[key]=val)})},ModelObjectMethods.prototype.$getId=function(){return this.id},ModelObjectMethods.prototype.$getData=function(){let data={};return Q.$forEachProperty(this,(val,key)=>{Q.$setContainsString(["$settings","__$$globals$$__"],key)||(data[key]=val)}),data},ModelObjectMethods.prototype.$clone=function(additionalData,query,{triggerEventOnCall:triggerEventOnCall=!0,triggerEventOnSuccess:triggerEventOnSuccess=!0,triggerEventOnError:triggerEventOnError=!0,triggerEventOnCallComplete:triggerEventOnCallComplete=!0,silent:silent=!1}={triggerEventOnCall:!0,triggerEventOnSuccess:!0,triggerEventOnError:!0,triggerEventOnCallComplete:!0,silent:!1}){silent&&(triggerEventOnError=triggerEventOnSuccess=triggerEventOnCall=triggerEventOnCallComplete=!1),additionalData=additionalData||{};let currentInstance=this,globals=this.__$$globals$$__,data=this.$getData(),settings=getCleanCallConfig(this.$settings);return settings.data=null,settings.url=getCleanUrl(this.$settings.url,query),Q.$forEachProperty(additionalData,(val,key)=>{data[key]=val}),settings.data=JSON.stringify(data),triggerEventOnCall&&triggerListener(this,globals,"onCall",[this,query,"create"]),new Promise((resolve,reject)=>{(async function({settings:settings,currentInstance:currentInstance,globals:globals}){let newId,nextSettings,fetched_data,server=$import("object:awr.serverCall"),$post=server.$post,$get=server.$get,res=await $post(settings),ModelObjCLass=$import("class:RemoteModelObject");return newId=res.id?res.id:res.newId?res.newId:res.new_id?res.new_id:"",settings.url=attachIDToURL(settings.url,newId),settings.data=null,fetched_data=await $get(settings),(nextSettings=getCleanCallConfig(currentInstance.$settings)).data=fetched_data,new ModelObjCLass(nextSettings,globals)})({settings:settings,currentInstance:currentInstance,globals:globals}).then(newModel=>{resolve(newModel),triggerEventOnSuccess&&triggerListener(currentInstance,globals,"onCreate",[newModel,query,"create"])},err=>{err=err&&err.responseJSON?err.responseJSON:err,reject(err),triggerEventOnError&&triggerListener(currentInstance,globals,"onError",[currentInstance,query,"create",err]),triggerEventOnCallComplete&&triggerListener(currentInstance,globals,"onCallComplete",[currentInstance,query,"create","error",err])})})},ModelObjectMethods.prototype.$create=function(data,query,{triggerEventOnCall:triggerEventOnCall=!0,triggerEventOnSuccess:triggerEventOnSuccess=!0,triggerEventOnError:triggerEventOnError=!0,triggerEventOnCallComplete:triggerEventOnCallComplete=!0,silent:silent=!1}={triggerEventOnCall:!0,triggerEventOnSuccess:!0,triggerEventOnError:!0,triggerEventOnCallComplete:!0,silent:!1}){return silent&&(triggerEventOnError=triggerEventOnSuccess=triggerEventOnCall=triggerEventOnCallComplete=!1),console.warn("model@remote@AWR The model.$create is departed and will be removed from the API in near future. Use model.$clone instead!"),this.$clone(data,query,{triggerEventOnCall:triggerEventOnCall,triggerEventOnSuccess:triggerEventOnSuccess,triggerEventOnError:triggerEventOnError,triggerEventOnCallComplete:triggerEventOnCallComplete})},ModelObjectMethods.prototype.$save=function(query,{triggerEventOnCall:triggerEventOnCall=!0,triggerEventOnSuccess:triggerEventOnSuccess=!0,triggerEventOnError:triggerEventOnError=!0,triggerEventOnCallComplete:triggerEventOnCallComplete=!0,silent:silent=!1}={triggerEventOnCall:!0,triggerEventOnSuccess:!0,triggerEventOnError:!0,triggerEventOnCallComplete:!0,silent:!1}){silent&&(triggerEventOnError=triggerEventOnSuccess=triggerEventOnCall=triggerEventOnCallComplete=!1);let url,_self=this,globals=this.__$$globals$$__,$put=awr.serverCall.$put,settings=getCleanCallConfig(this.$settings),complete=(status,message)=>{triggerEventOnCallComplete&&triggerListener(_self,globals,"onCallComplete",[_self,query,"save",status,message])};return settings.data=null,url=attachIDToURL(_self.$settings.url,_self.id),settings.url=getCleanUrl(url,query),settings.data=JSON.stringify(_self.$getData()),triggerEventOnCall&&triggerListener(_self,globals,"onCall",[_self,query,"save"]),new Promise(function(resolve,reject){$put(settings).then(res=>{_self.$setData(res),resolve(res),triggerEventOnSuccess&&triggerListener(_self,globals,"onSave",[_self,query,"save"]),complete("success")},err=>{err=err&&err.responseJSON?err.responseJSON:err,reject(err),triggerEventOnError&&triggerListener(_self,globals,"onError",[_self,query,"save"]),complete("error",err)})})},ModelObjectMethods.prototype.$get=function(query,{triggerEventOnCall:triggerEventOnCall=!0,triggerEventOnSuccess:triggerEventOnSuccess=!0,triggerEventOnError:triggerEventOnError=!0,triggerEventOnCallComplete:triggerEventOnCallComplete=!0,silent:silent=!1}={triggerEventOnCall:!0,triggerEventOnSuccess:!0,triggerEventOnError:!0,triggerEventOnCallComplete:!0,silent:!1}){silent&&(triggerEventOnError=triggerEventOnSuccess=triggerEventOnCall=triggerEventOnCallComplete=!1);let url,_self=this,globals=this.__$$globals$$__,$get=awr.serverCall.$get,settings=getCleanCallConfig(this.$settings),complete=(status,message)=>{triggerEventOnCallComplete&&triggerListener(_self,globals,"onCallComplete",[_self,query,"get",status,message])};return settings.data=null,url=attachIDToURL(_self.$settings.url,_self.id),settings.url=getCleanUrl(url,query),triggerEventOnCall&&triggerListener(_self,globals,"onCall",[_self,query,"get"]),new Promise(function(resolve,reject){$get(settings).then(res=>{_self.$setData(res),resolve(_self),triggerEventOnSuccess&&triggerListener(_self,globals,"onGet",[_self,query,"get"]),complete("success")},err=>{err=err&&err.responseJSON?err.responseJSON:err,reject(err),triggerEventOnError&&triggerListener(_self,globals,"onError",[_self,query,"get"]),complete("error",err)})})},ModelObjectMethods.prototype.$remove=function(query,{triggerEventOnCall:triggerEventOnCall=!0,triggerEventOnSuccess:triggerEventOnSuccess=!0,triggerEventOnError:triggerEventOnError=!0,triggerEventOnCallComplete:triggerEventOnCallComplete=!0,silent:silent=!1,submitDataWithRequest:submitDataWithRequest=!1}={triggerEventOnCall:!0,triggerEventOnSuccess:!0,triggerEventOnError:!0,triggerEventOnCallComplete:!0,silent:!1,submitDataWithRequest:!1}){silent&&(triggerEventOnError=triggerEventOnSuccess=triggerEventOnCall=triggerEventOnCallComplete=!1);let url,_self=this,globals=this.__$$globals$$__,$delete=awr.serverCall.$delete,settings=getCleanCallConfig(this.$settings),complete=(status,message)=>{triggerEventOnCallComplete&&triggerListener(_self,globals,"onCallComplete",[_self,query,"remove",status,message])};return settings.data=submitDataWithRequest?_self.$getData():null,url=attachIDToURL(_self.$settings.url,_self.id),settings.url=getCleanUrl(url,query),triggerEventOnCall&&triggerListener(_self,globals,"onCall",[_self,query,"remove"]),new Promise(function(resolve,reject){$delete(settings).then(res=>{resolve(res),triggerEventOnSuccess&&triggerListener(_self,globals,"onRemove",[_self,query,"remove"]),complete("success")},err=>{err=err&&err.responseJSON?err.responseJSON:err,reject(err),triggerEventOnError&&triggerListener(_self,globals,"onError",[_self,query,"remove"]),complete("error",err)})})},$export("class:ModelObjectMethods@basics@AWRModel",ModelObjectMethods)}__$require__(__$$requires$$__,["object:awr.$$core","function:awr.registerClass","service:serverCall"]),__$$errors$$__=__$loadErrors__("$$model@kernel"),__callModuleMainFn__($main,__$$requires$$__)})}(),function(){var __$$requires$$__=[];__pushToBootQueue__(function(){window.awr;function $main(){let Q=this,ModelObjectMethods=$import("class:ModelObjectMethods@basics@AWRModel");class BasicRemoteModelObject extends ModelObjectMethods{constructor(opts,globals){super(opts,globals),this.$settings.isModelInstance=!0,Object.defineProperty(this.$settings,"isModelInstance",{value:!0,enumerable:!0}),this.$settings.getInstance=(data=>{let newOpts=Object.assign({},opts);return newOpts.data=Q.$objectExist(data)?data:{},new BasicRemoteModelObject(newOpts,globals)})}}$export("class:RemoteModelObject",BasicRemoteModelObject)}__$require__(__$$requires$$__,["object:awr.$$core","function:awr.registerClass","service:serverCall","class:ModelObjectMethods@basics@AWRModel"]),__$loadErrors__("$$model@kernel"),__callModuleMainFn__($main,__$$requires$$__)})}()}(window,jQuery);