!function(window,$){"use strict";window.awr=window.awr||{},window.awr.bootQueue=window.awr.bootQueue||[],window.awr.$errorRegistry=[{$$name$$:"$$Q@kernel",badBundleArgs:{moduleName:"$qBundle@Q",errMsg:"Bad bundle args for $create@$qBundle",hintMsg:'Bundle [name] must be a "string", and [requires] should be a "set" and not empty.'},badReduceFnCall:{moduleName:"$reduce@Q",errMsg:"Bad reduce callback function call when invoking with [ {item} ]",hintMsg:"Error occurred in the body of reduce callback function. The item at index wil be considered as a falsy value.",afterHintLines:[" + Details: {errMsg}"]},badMapFnCall:{moduleName:"$map@Q",errMsg:"Bad map callback function call when invoking with [ {item} ]",hintMsg:"Error occurred in the body of map callback function. The item at index wil be skipped.",afterHintLines:[" + Details: {errMsg}"]},badMapObjectFnCall:{moduleName:"$mapObject@Q",errMsg:"Bad mapObject callback function call when invoking with [ {item} ]",hintMsg:"Error occurred in the body of map callback function. The item at index wil be skipped.",afterHintLines:[" + Details: {errMsg}"]},badBundleAttempt:{moduleName:"$qBundle@Q",errMsg:"Bad bundle for $create@$qBundle",hintMsg:"Bundle [{bundle}] is already registered and reinstall is not allowed here."},badImportTypeExtend:{moduleName:"$extendImportType@Q",errMsg:"Bad attempt for extend type interface with [{typeName}]@$import@Q",hintMsg:'Extend requires that the "type" is not already extended. New type also should not be part of the native type interface.'},badExtendedImportCall:{moduleName:"$import@Q",errMsg:"Failed to import an extended type [{typeName}]",hintMsg:"Import failed with an error.",afterHintLines:[" + Details: {errMsg}"]},badExportTypeExtend:{moduleName:"$extendExportType@Q",errMsg:"Bad attempt for extend type interface with [{typeName}]@$export@Q",hintMsg:'Extend requires that the "type" is not already extended. New type also should not be part of the native type interface.'},badExtendedExportCall:{moduleName:"$export@Q",errMsg:"Failed to export an extended type [{typeName}]",hintMsg:"Export failed with an error.",afterHintLines:[" + Details: {errMsg}"]},badAvailableTypeExtend:{moduleName:"$extendAvailableType@Q",errMsg:"Bad attempt for extend type interface with [{typeName}]@$available@Q",hintMsg:'Extend requires that the "type" is not already extended. New type also should not be part of the native type interface.'},badExtendedAvailableCall:{moduleName:"$available@Q",errMsg:"Failed to check availability of an extended type [{typeName}]",hintMsg:"Check failed with an error.",afterHintLines:[" + Details: {errMsg}"]},badGeneralExtendAction:{moduleName:"$extendedAction@Q",errMsg:"Bad attempt to use the interface of general extended action. Aborting.",hintMsg:"Arguments [errorName<string>] && [typeRegistry<object>] are required."},badGeneralTypeExtend:{moduleName:"$extendType@Q",errMsg:"Bad attempt to use general type extend interface. Aborting.",hintMsg:"Arguments [errorName<string>] && [typeRegistry<object>] are required."},badSortFunction:{moduleName:"$orderBy@$iterator@Q",errMsg:"Sort failed in orderBy@$iterator.",hintMsg:"CompareFunction caused an error.",afterHintLines:[" + Details: {errMsg}"]},badGetClassInstance:{moduleName:"$getClassInstance@special@Q",errMsg:"Bad getClassInstance call.",hintMsg:"Failed to get instance of class [{className}].",afterHintLines:[" + Details: {errMsg}"]},fatalErrorLoadingModule:{moduleName:"$$boot@Q",errMsg:"Fatal error while loading module [ {moduleName} ].",hintMsg:"Module compile terminated by this error.",afterHintLines:[" + Module dependencies: {allRequires}"]},noInitFnWarning:{moduleName:"$$boot@Q",errMsg:"Module [ {moduleName} ] did not introduce any init request.",hintMsg:"Nothing to bbe invoked in boot.",afterHintLines:[" + Module dependencies: {allRequires}"]},badOnFailCallbackInBoot:{moduleName:"$$boot@Q",errMsg:"Bad onFail callback for module [ {moduleName} ].",hintMsg:"This [onFail] callback called to notice about the boot timeout, but callback itself failed with an error",afterHintLines:[" + Details: {errMsg}"]},slowBootWarning:{type:"warn",moduleName:"$$boot@Q",errMsg:"Slow module boot warning for module [ {moduleName} ] with warning tag @LongBootTime.",hintMsg:"There is a risk that the module boot will fail if the dependencies are not getting loaded soon.",afterHintLines:[" + Details: One or more module dependencies did not load."," + Module dependencies: {allRequires}"," + Missing dependencies: {missingRequires}"]},bootTimeoutError:{type:"error",moduleName:"$$boot@Q",errMsg:"Timeout error for module  [ {moduleName} ] with error tag @LongBootTime.",hintMsg:"Required dependencies did not load within maximum allowed boot time. Module cannot stay in pending mode longer than this",afterHintLines:[" + Details: Rejecting module."," + Module dependencies: {allRequires}"," + Missing dependencies: {missingRequires}"]},nonBlockingCallError:{type:"error",moduleName:"$$nonBlocking@Q",errMsg:"Error in a non-blocking code execution.",hintMsg:"Calling proceed on for a non-blocking request ended with an error",afterHintLines:[" + Info: {infoMsg}"," + Details: {errMsg}"]},qTryError:{type:"error",moduleName:"$$qTry@Q",errMsg:"Error in qTry callback execution.",hintMsg:"Calling < fn > in qTry ended with an error",afterHintLines:[" + Info: {infoMsg}}"," + Details: {errMsg}"]}},{$$name$$:"$$QDom@kernel",badFnForEachAttr:{moduleName:"$eachAttrInDom@QDom",errMsg:"Bad execution of callback function in $eachAttrInDom@QDom ",hintMsg:"Callback run failed with an error.",afterHintLines:[" + Details: {errMsg}"]}},{$$name$$:"$$core@kernel",moduleBadGetArg:{moduleName:"$getModule@AWRModule",errMsg:"Module name does not exist. Aborting. ",hintMsg:"Please check the name argument."},badNewModuleArgs:{moduleName:"$newModule@AWRModule",errMsg:"Bad instance init call for @AWRModule. Aborting.",hintMsg:"newModule@AWRModule requires a name argument and the instance should not be null"},moduleAlreadyInReg:{moduleName:"$newModule@AWRModule",errMsg:"Forbidden call. Bad instance init call for @AWRModule. Aborting.",hintMsg:"A Module with the same name is already registered.l"},badGetModuleNotName:{moduleName:"$getModule@AWRModule",errMsg:"Bad call for get@AWRModule. Aborting.",hintMsg:"Module name is not specified"},registryNoExist:{moduleName:"registryAccessCall@$$CORE",errMsg:"Registry does not exit and was required.",hintMsg:"Check the arguments."},alreadyInReg:{moduleName:"registryAccessCall@$$CORE",errMsg:"Already registered error raised by an forbidden attempt pf overriding an existing member",hintMsg:"Check the arguments."}},{$$name$$:"$$registry@kernel",illegalCreateReg:{moduleName:"registry@core",errMsg:"An illegal attempt to create a registry ignored.",hintMsg:"Check your create arguments.",afterHintLines:[" + Details: {errMsg}"]},illegalRegAccess:{moduleName:"registry@core",errMsg:"An illegal attempt to access a registry ignored.",hintMsg:"Check your arguments.",afterHintLines:[" + Details: {errMsg}"]},flushFnMissing:{moduleName:"registry@core",errMsg:"Ignoring bad flushing attempt for {regName}@registry.",hintMsg:"Flush requires a function as the second argument, but missing."},badFlushFn:{moduleName:"registry@core",errMsg:"An error occurred in the flush function for {regName}@registry.",hintMsg:"Check your flush function.",afterHintLines:[" + Details: {errMsg}"]},badGetAllFn:{moduleName:"registry@core",errMsg:"An error occurred in the getAll callback function for {regName}@registry.",hintMsg:"Check your callback function.",afterHintLines:[" + Details: {errMsg}"]}},{$$name$$:"$$scriptRequest@kernel",failedToLoadLazyModule:{moduleName:"$requestLazyModule@AWRAgent",errMsg:"Failed to load script from path {path}.",hintMsg:"No additional information available."}},{$$name$$:"$$appView@kernel",errorInRootCompile:{moduleName:"appStart@AWR",errMsg:"Error in appStart@compile stopped the app start process.",hintMsg:"Check your app controller code.",afterHintLines:[" + Details: {errMsg}"]},errorInAppViewCompile:{moduleName:"appView@AWR",errMsg:"Error in appView@compile stopped the app app view init process.",hintMsg:"Check the controller code for the view component.",afterHintLines:[" + Details: {errMsg}"]}},{$$name$$:"$$comp@kernel",badNaming:{moduleName:"component@AWR",errMsg:"Bad naming detected for comp attributes in [{compName}@Component@AWR]",hintMsg:"Component name and scope key attributes should not contain empty space or '-' symbol.",afterHintLines:[" + Details: {errMsg}"]},badUX3TypeCompConstructor:{moduleName:"component@AWR",errMsg:"Failed to init a new component instance [{compName}@Component@UX3Type@AWR]",hintMsg:"The component constructor call ended by an error. ",afterHintLines:[" + Error: {errMsg}"]},badController:{moduleName:"component@AWR",errMsg:"Bad controller for [{compName}@Component@AWR]",hintMsg:"New Component requires a controller but missing from configuration. "},errorInController:{moduleName:"component@AWR",errMsg:"Bad controller for [{compName}@Component@AWR]",hintMsg:"Controller run ended by en error.",afterHintLines:[" + Controller: {controllerName}"," + Details: {errMsg}"]},badControllerInject:{moduleName:"component@AWR",errMsg:"Bad controller for [{compName}@Component@AWR]",hintMsg:"Controller <{ctrlName}> is not registered but required by component configuration. "},badTemplate:{moduleName:"component@AWR",errMsg:"Bad template for [{compName}]@Component",hintMsg:"New Component requires a template but missing from configuration. "},failedToRegister:{moduleName:"compManager@AWR",errMsg:"Attempt for registering a new component failed for [{compName}@Component@AWR]",hintMsg:"Configuration was not accepted by the new Component instance. Rejecting the register request. "},alreadyRegistered:{moduleName:"compManager@AWR",errMsg:"Attempt for registering a new component failed for [{compName}@Component@AWR]",hintMsg:"Component is already registered and override is not allowed."},badContext:{moduleName:"compManager@AWR",errMsg:"Bad context detected. Aborting the compile@component.",hintMsg:"No proper structure for component detected to initialize environment for compile@component."},badInjectedScope:{moduleName:"compManager@AWR",errMsg:"Bad injected scope detected. Aborting the compile@component.",hintMsg:"Injected scopes also are required to be a proper scope instances they should be registered through scopeManager@AWRCore."},compilePrepareFailed:{moduleName:"compManager@AWR",errMsg:"Component perpetration failed for $compile@component. Aborting",hintMsg:"Something went wrong during the prepare@component phase."},recompileFailed:{moduleName:"$recompile@compManager@AWR",errMsg:"Failed to recompile component.",hintMsg:"The registered scope recompile action exited with an error.",afterHintLines:[" + Details: {errMsg}"]},subCompileFailed:{moduleName:"$subCompile@compileTemplate@compManager@AWR",errMsg:"Failed to compile sub components.",hintMsg:"The compile action exited with an error.",afterHintLines:[" + Details: {errMsg}"]},rootCompileReloadStateFailed:{moduleName:"$after@compile@compManager@AWR",errMsg:"Failed to reload current state after compiling the rootComp.",hintMsg:"The router service was not able to perform < reload@currentState >.",afterHintLines:[" + Details: {errMsg}"]},badCompForGetId:{moduleName:"$instance@component@AWR",errMsg:"Failed to get instance for component.",hintMsg:"Unique id can not be generated for a null@component."},controllerConstructorDependencyTimeout:{moduleName:"constructor@Controller",errMsg:"Calling the constructor of controllor@component failed due to timeout error.",hintMsg:"failed to load dependencies for controller required by {compName} within a allowed wait time.",afterHintLines:[" + Details: {errMsg}"]}},{$$name$$:"$$event@kernel",badEventName:{moduleName:"$event@AWREvent",errMsg:"Bad event name detected by {opName}@eventManager@AWR.",hintMsg:"Please check the eventString argument!"},badEventPublisherName:{moduleName:"$event@AWREvent",errMsg:"Bad event name detected by {opName}@eventManager@AWR.",hintMsg:"The name of event publisher is missing from arguments, but required!"},badEventCallback:{moduleName:"$event@AWREvent",errMsg:"Invalid event callback in {opName}@eventManager@AWR.",hintMsg:"Please check the event callback argument!"},errorInEventCallback:{moduleName:"$event@AWREvent",errMsg:"Error occurred during {opName}@eventManager@AWR.",hintMsg:"Bad callback for event < {eventName} >.",afterHintLines:[" + Details: {errMsg}"]},badObservableReg:{moduleName:"registry@Observable",errMsg:"Bad observable registration attempt.",hintMsg:"Observable name is required."},badObservableInstance:{moduleName:"registry@Observable",errMsg:"Bad or missing observable instance detected during registration.",hintMsg:"Export requires that the observable is a valid instance of AwrObservable."},observableAlreadyInReg:{moduleName:"registry@Observable",errMsg:"Bad observable registration attempt.",hintMsg:"Observable [ {observableName} ] is already registered."},badImportObservableName:{moduleName:"registry@Observable",errMsg:"Bad observable import attempt.",hintMsg:"Observable name is required."},badImportObservable:{moduleName:"registry@Observable",errMsg:"Bad observable import attempt.",hintMsg:"Observable [ {observableName} ] does not exist in observable registry."},badAvailableObservableName:{moduleName:"registry@Observable",errMsg:"Bad observable availability check.",hintMsg:"Observable name is required."},observableConstructorDependencyTimeout:{moduleName:"constructor@Observable",errMsg:"The  constructor@{observableName} failed due to timeout error.",hintMsg:"failed to load dependencies for {observableName} within a allowed wait time.",afterHintLines:[" + Details: {errMsg}"]},badUX3TypeObservableConstructor:{moduleName:"$register@AWRFactory",errMsg:"Error in observable construction process with export@Observable@AwrEvent for [ {observableName} ].",hintMsg:"Check the function < makeSubscriber > for [ {observableName} ]",afterHintLines:[" + Info: {observableName}@AwrEvent is not going to be registered!"," + Details: {errMsg}"]},errorInGeneratorSubscriber:{moduleName:"$generateBySubscriber@observable@AWRFactory",errMsg:"Error in subscriber function for export@Observable@AwrEvent for [{observableName}].",hintMsg:"{observableName}@AwrEvent is not going to be registered!",afterHintLines:[" + Info: {infoMsg}"," + Details: {errMsg}"]},errorInGeneratorTransform:{moduleName:"$generateByTransfrom@observable@AWRFactory",errMsg:"Error in transform function for export@Observable@AwrEvent for [{observableName}].",hintMsg:"{observableName}@AwrEvent is not going to be registered!",afterHintLines:[" + Info: {infoMsg}"," + Details: {errMsg}"]}},{$$name$$:"$$class@kernel",badClassReg:{moduleName:"$registerClass@AWRClass",errMsg:"Bad attempt to register a class@AWR. Aborting.",hintMsg:"NewClass@AWRClass requires a name argument and the class should not be null"},classAlreadyInReg:{moduleName:"$registerClass@AWRClass",errMsg:"An error raised by AWRClass registrar",hintMsg:"Bad register class call. Another Class with the same name is already registered."},extendSuperAlreadyDefined:{moduleName:"$extendClass@AWRClass",errMsg:"Fatal error $$super@AWRClass already defined for class. Aborting.",hintMsg:"Class is already extending another class"},extendBadArgs:{moduleName:"$extendClass@AWRClass",errMsg:"Bad args for @extend. Aborting. ",hintMsg:"Two objects [Child,Parent] should exist."},extendSuperNotFound:{moduleName:"$extendClass@AWRClass",errMsg:"Bad attempt for extend@AWRClass. Parent not found in classRegistry@AWR. ",hintMsg:"Parent must be an instance of @AWRClass and already registered."},extendChildNotFound:{moduleName:"$extendClass@AWRClass",errMsg:"Bad attempt for $extendClass@AWRClass. Child class not found in classRegistry@AWR. ",hintMsg:"Child class must be an instance of @AWRClass and already registered."},importBadClassName:{moduleName:"$importClass@AWRClass",errMsg:"Bad class name for import call. Aborting ",hintMsg:"Class name is required"},importBadClass:{moduleName:"$importClass@AWRClass",errMsg:"Bad class name  for import call. Aborting ",hintMsg:"Class does not exist"},nameSpaceReserved:{moduleName:"$registerClass@AWRClass",errMsg:"Namespace [ {nameSpace} ] is reserved and cannot be used with direct class export. Aborting.",hintMsg:"Class [ {className} ] is not going to be registered."},legacyExtendClassOnUX3Type:{moduleName:"$extend@AWRClass",errMsg:"Operation < extend > is considered as a legacy behaviour and not supported for UX3Type classes ",hintMsg:"Use native < extend > instead",afterHintLines:[" + Info: The request was about extending {parentClass} by {childClass}"]},classFactoryRequiresTimeout:{moduleName:"$register@AWRFactory as Class",errMsg:"Timeout for loading dependencies with register@{factoryType}@factory as class for [{factoryName}].",hintMsg:"{factoryName}@factory is not going to be registered as a new class!",afterHintLines:[" + Details: Booting dependencies failed due to a timeout error"," + Original error message: {errMsg}"," + Note: the {factoryName}@{factoryType} was meant to be registered as a class but class manager prevented this action due to missing dependencies"]}},{$$name$$:"$$config@kernel",badArgs:{moduleName:"config@core",errMsg:"Bad arguments for new config. Aborting config registration.",hintMsg:"Config should have a name and a function."},alreadyExist:{moduleName:"config@core",errMsg:"Illegal attempt to override an existing configuration object. Aborting new config registration.",hintMsg:"Configuration [{confName}] is already registered check your name argument.",afterHintLines:[" + Details: Duplicates are not allowed.."]},errorInCnf:{moduleName:"config@core",errMsg:"Failed to run configuration due to an error that occurred in the config body.",hintMsg:"Configuration [{confName}] will be ignored and any module requiring this can not be booted.",afterHintLines:[" + Details: {errMsg}."]}},{$$name$$:"$$factory@kernel",badRegFactoryArgs:{moduleName:"$register@AWRFactory",errMsg:"Invalid arguments for register@{factoryType}@factory [{factoryName}].",hintMsg:"Please check your arguments."},factoryAlreadyRegistered:{moduleName:"$register@AWRFactory",errMsg:"Forbidden attempt for register@{factoryType}@factory [{factoryName}].",hintMsg:"Service {svcName} is already registered!"},factoryRequiresTimeout:{moduleName:"$register@AWRFactory",errMsg:"Timeout for loading dependencies with register@{factoryType}@factory for [{factoryName}].",hintMsg:"{factoryName}@factory is not going to be registered!",afterHintLines:[" + Details: Booting dependencies failed due to a timeout error"," + Original error message: {errMsg}"]},badFactoryBuildFunction:{moduleName:"$register@AWRFactory",errMsg:"Error in factory build constructor with register@{factoryType}@factory for [{factoryName}].",hintMsg:"{factoryName}@factory is not going to be registered!",afterHintLines:[" + Details: {errMsg}"]},badPipeInstance:{moduleName:"$register@AWRFactory",errMsg:"Bad pipe interface detected with register@{factoryType}@factory for [{factoryName}].",hintMsg:"{factoryName}@factory is not going to be registered!",afterHintLines:[" + Note: Pipe must have a [ transform ] function"]},badValidatorInstance:{moduleName:"$register@AWRFactory",errMsg:"Bad validator interface detected with register@{factoryType}@factory for [{factoryName}].",hintMsg:"{factoryName}@factory is not going to be registered!",afterHintLines:[" + Note: Validator must have a [ isValid ] function"]},errorInInterfaceCheck:{moduleName:"$register@AWRFactory",errMsg:"Bad interface check function with register@{factoryType}@factory for [{factoryName}].",hintMsg:"Check the interface check routine for this custom factory",afterHintLines:[" + Details: {errMsg}"]},badCustomFactoryInterface:{moduleName:"$register@AWRFactory",errMsg:"Bad interface detected with register@instance@{factoryType}@factory for [{factoryName}].",hintMsg:"{factoryName}@factory is not going to be registered!",afterHintLines:[" + Info: {extraMsg}"]},badChildClassType:{moduleName:"extend@superType@AWRFactory",errMsg:"Child class < {childName} > must extend superType < {superName} >.",hintMsg:"Bad child class for {superName}@superType@AWRFactory detected."},noImplForAbstractFunction:{moduleName:"extend@superType@AWRFactory",errMsg:"Child class < {childName} > must implement abstract function [ {abstractName} ] required by < {superName} >.",hintMsg:"Child prototype must include implementation for all abstract functions defined by its superType."},emptyFactoryTypeName:{moduleName:"$define@AWRFactory",errMsg:"Illegal empty string name with define@factory.",hintMsg:"name is required for creating factoryName@factory"},illegalFactoryTypeName:{moduleName:"$define@AWRFactory",errMsg:"Illegal name string {factoryName} with define@factory.",hintMsg:"{factoryName}@factory is already a factory type or the name is otherwise reserved"},illegalFactoryTypeRemoveAttempt:{moduleName:"factoryType@AWRFactory",errMsg:"Illegal attempt to remove custom factory type [{itemName}] prevented.",hintMsg:"Factory types, including custom ones, cannot be removed!",afterHintLines:[" + Note: Operation < Remove > is allowed with factory type instances, but not on their superType definers."]},illegalAppTypeRemoveAttempt:{moduleName:"app@AWRFactory",errMsg:"Illegal attempt to remove an app instance [{appName}] prevented.",hintMsg:"App instances cannot be removed!"},badAppControllerName:{moduleName:"start@AppAWRFactory",errMsg:"Bad controller name for app [{appName}].",hintMsg:"Please provide a controller name for the app before calling < start >"},appAlreadyHasInstance:{moduleName:"init@AppAWRFactory",errMsg:"Cannot init a new app [{appName}]. App has already a running instance.",hintMsg:"Only one running instance is allowed per defined App instance."},badFactoryImportImplementor:{moduleName:"import@AWRFactory",errMsg:"Bad implementor for  [ import@{factoryType}@AWrFactory ].",hintMsg:"Request < Import > ended by an error in < @import > handler.",afterHintLines:[" + Details: {errMsg}"]},badFactoryExportImplementor:{moduleName:"export@AWRFactory",errMsg:"Bad implementor for  [ export@{factoryType}@AWrFactory ].",hintMsg:"Request  < Export > ended by an error in < @export > handler.",afterHintLines:[" + Details: {errMsg}"]},badFactoryAvailableImplementor:{moduleName:"available@AWRFactory",errMsg:"Bad implementor for  [ available@{factoryType}@AWrFactory ].",hintMsg:"Request < Available > ended by an error in < @available > handler.",afterHintLines:[" + Details: {errMsg}"]},badFactoryInterfaceCheckClass:{moduleName:"typeCheck@AWRFactory",errMsg:"Bad class < {className} > for  [ makeInterfaceCheck@GenericFactory@AWrFactory ].",hintMsg:"No type check function can be generated if the class is not a UX3Type implementor.",afterHintLines:[" + Note: Until the problem is fixed the placeholder type checker will always return false for < {itemName} >"," + Details: {errMsg}"]},badCustomFactoryTypeInit:{moduleName:"init@custom@factoryTypee@AWRFactory",errMsg:"Bad init function for  [ init@{factoryTypeName}@custom@factoryType@AWrFactory ].",hintMsg:"An error occurred when calling the init function for a custom factoryType < {factoryTypeName} >.",afterHintLines:[" + Details: {errMsg}"]}},{$$name$$:"$$model@kernel",badModelReg:{moduleName:"registry@Model",errMsg:"Bad model registration attempt.",hintMsg:"Model name is required."},badModelUrlReg:{moduleName:"registry@Model",errMsg:"Bad model registration attempt.",hintMsg:"Model URL is not acceptable for model [ {modelName} ]."},modelAlreadyInReg:{moduleName:"registry@Model",errMsg:"Bad model registration attempt.",hintMsg:"Model [ {modelName} ] is already registered."},badImportModelName:{moduleName:"registry@Model",errMsg:"Bad model import attempt.",hintMsg:"Model name is required."},badImportModel:{moduleName:"registry@Model",errMsg:"Bad model import attempt.",hintMsg:"Model [ {modelName} ] does not exist in model registry."},badAvailableModelName:{moduleName:"registry@Model",errMsg:"Bad model availability check.",hintMsg:"Model name is required."},badModelListenerCall:{moduleName:"listenerCall@Model",errMsg:"Bad listener call for model {listenerName}@{modelName}.",hintMsg:"Listener {listenerName}@{modelName} caused an error.",afterHintLines:[" + Details: {errMsg}"]},modelConstructorDependencyTimeout:{moduleName:"constructor@Model",errMsg:"The  constructor@{modelName} failed due to timeout error.",hintMsg:"failed to load dependencies for {modelName} within a allowed wait time.",afterHintLines:[" + Details: {errMsg}"]},badUX3TypeModelConstructor:{moduleName:"$register@AWRFactory",errMsg:"Error in model constructor with export@modle@AwrModel for [{modelName}].",hintMsg:"{modelName}@AwrModel is not going to be registered!",afterHintLines:[" + Details: {errMsg}"]}},{$$name$$:"$$route@kernel",badRouteConfig:{moduleName:"router@core",errMsg:"Failed to create new route.",hintMsg:"Check the link and other route setting for route < {routeName} > .",afterHintLines:[" + Error: {errMsg}"]},noAnonymousCallback:{moduleName:"router@core",errMsg:"The use of anonymous functions are not allowed here.",hintMsg:"Name your function before passing it to $onRouteEvent@routeManager."},badUX3TypeRouteConstructor:{moduleName:"router@AWR",errMsg:"Failed to init a new route instance [{routeName}@Route@UX3Type@AWR]",hintMsg:"The route constructor call ended by an error. ",afterHintLines:[" + Error: {errMsg}"]},badLaterCallback:{moduleName:"router@core",errMsg:"Exception in later block at $laterInSameState@routeManager",hintMsg:"Later callback failed with an exception.",afterHintLines:[" + Error: {errMsg}"]},badStateMain:{moduleName:"router@core",errMsg:"Bad state runner instance for [{routeName}]@route.",hintMsg:"The main@route failed with an error.",afterHintLines:[" + From: {fromName}"," + To: {toName}"," + Details: {errMsg}"]},rejectedResolve:{moduleName:"router@core",errMsg:"Attempt for resolving [{resolveName}] failed in [{routeName}]@route.",hintMsg:"Request rejected by the Promise.",afterHintLines:[" + Details: {errMsg}"]},errorDuringResolve:{moduleName:"router@core",errMsg:"Attempt for resolving [{resolveName}] failed in [{routeName}]@route.",hintMsg:"Error occured in try@promise.",afterHintLines:[" + Details: {errMsg}"]},timeoutForResolve:{moduleName:"router@core",errMsg:"Attempt for resolving [{resolveName}] failed in [{routeName}]@route.",hintMsg:"Timeout for requires@promise.",afterHintLines:[" + Details: {errMsg}"]},routeAlreadyExist:{moduleName:"router@core",errMsg:"Rejecting forbidden attempt for registering new route [{routeName}]@route.",hintMsg:"Route or path is already registered!",afterHintLines:[" + Details: {errMsg}"]},stateChangePrevented:{moduleName:"router@core",errMsg:"Rejecting transition to the new state [{stateName}].",hintMsg:"An app module prevented the state transition!"},stateNotFound:{moduleName:"router@core",errMsg:"Rejecting transition request to the new state.",hintMsg:"State not found!"},stateApplyError:{moduleName:"applyState@router@core",errMsg:"The state apply attempt ended by an error.",hintMsg:"The apply@state is rejected.",afterHintLines:[" + From: {fromName}"," + To: {toName}"," + Details: {errMsg}"]},badOnNewRouteCallback:{moduleName:"router@core",errMsg:"Calling app defined [ onNewRouteCreated ]@callback ended by an error.",hintMsg:"This error might have negatively affected the route settings.",afterHintLines:[" + Details: {errMsg}"]}},{$$name$$:"$$domFilters@kernel",badFilterFunction:{moduleName:"domFilters@core",errMsg:"Error occurred while trying to filter scope data. Keeping the original data.",hintMsg:"An attempt to filter set@context@scope failed due to bad filter function.",afterHintLines:[" + Details:{errMsg}"]},badIfFunction:{moduleName:"domFilters@core",errMsg:"Error occurred while trying to exclude scope content by an if@Function. Marking the result as <false>.",hintMsg:"All remaining functions for the group will be ignored.",afterHintLines:[" + Details:{errMsg}"]},errorInPipeTransform:{moduleName:"domFilters@core",errMsg:"Error occurred during transforming data through the pipes.",hintMsg:"This pipe transform error was caused by a pipe called [ {pipeName} ].",afterHintLines:[" + Details:{errMsg}"]},badSetTransformPipe:{moduleName:"domFilters@core",errMsg:"Bad set transform detected.",afterErrLines:[" + Note: Pipe used in a loop must always return an array as the result."],hintMsg:"Please check the return type for pipe [ {pipeName} ].",afterHintLines:[" + Details: Ignoring the result returned by [ {pipeName} ]"]}},{$$name$$:"$$scope@kernel",scopeBadGetPropArg:{moduleName:"$getProperty@AWRScope",errMsg:"No scope by name found in scopeRegistry. Aborting.",hintMsg:"Bad scopeName for getProperty."},scopeForbiddenSuperSet:{moduleName:"$setID@AWRScope",errMsg:"Forbidden action requested. Aborting.",hintMsg:"SUPER is already registered."},scopeBadIDForReg:{moduleName:"$setID@AWRScope",errMsg:"Bad attempt for setting ID for scope. Aborting.",hintMsg:"Bad SCOPE_ID."},scopeRegBadIDForReg:{moduleName:"$registerScope@AWRScope",errMsg:"Bad attempt for registering a scope. Aborting.",hintMsg:"Bad SCOPE_ID."},scopeAlreadyInReg:{moduleName:"$registerScope@AWRScope",errMsg:"Bad attempt for registering a scope. Aborting.",hintMsg:"Scope already registered."},errorInScopeInitPromise:{moduleName:"$createScope@AWRScope",errMsg:"Failed to create new scope",hintMsg:"An error occurred in scope init promise"},fatalInScopeInit:{moduleName:"$createScope@AWRScope",errMsg:"Fatal error occurred while trying to init a new scope",hintMsg:"Bad scope instance"},badScopeObject:{moduleName:"$getScopeContext@AWRScope",errMsg:"Bad scope. Aborting.",hintMsg:"Please check the scope object."},badDomSet:{moduleName:"$setDom@AWRScope",errMsg:"Bad attempt to set dom for scope. Rejecting.",hintMsg:"Scope dom can be set only once and the dom arg should not be null"},badHandler:{moduleName:"$applyHandler@AWRScope",errMsg:"Bad handler request.",hintMsg:"Scope handler [{ handlerName }] does not exist. "},errorInHandler:{moduleName:"$applyHandler@AWRScope",errMsg:"Error in handler body.",hintMsg:"Scope handler [{handlerName}] run ended with an error.",afterHintLines:[" + Error: {errMsg}"]},errorInRecompileAction:{moduleName:"$recompile@AWRScope",errMsg:"Error occurred in the action@$recompile@scope.",hintMsg:"The run for scope recompile action exited with an error.",afterHintLines:[" + Error: {errMsg}"]},earlyRecompileRequest:{moduleName:"$recompile@AWRScope",errMsg:"An early $recompile@scope tried to run action@$recompile@scope.",hintMsg:"The scope $recompile handler is not yet registered. Your should wait until the compile process is complete."},badValidator:{moduleName:"$validation@AWRScope",errMsg:"No Validator[ {validatorName} ] could be found.",hintMsg:"Bad attempt to add a validation for scope. Register the validator first."},badValidatorFunction:{moduleName:"$validation@AWRScope",errMsg:"Bad Validator function for [ {validatorName} ].",hintMsg:"The validation attempt ended by an error. Check the validator logic.",afterHintLines:[" + Error: {errMsg}"]},badValidationCallback:{moduleName:"$validation@AWRScope",errMsg:"Bad callback for $validate@scope.",hintMsg:"An error occurred during the run of callback set for validation.",afterHintLines:[" + Error: {errMsg}"]},scopeFunctionError:{moduleName:"functionCall@AWRScope",errMsg:"Bad scope function  [{fnName}]",hintMsg:"The scope function call ended by an error.",afterHintLines:[" + ID: {scopeId}"," + Error: {errMsg}"]},scopeBindCallbackError:{moduleName:"onEventCall@Bind@AWRScope",errMsg:"Bad scope bind callback function  [ onEvent ]",hintMsg:"The scope bind onEvent function call ended by an error.",afterHintLines:[" + ID: {scopeId}"," + Error: {errMsg}"]},badBindQueryAcceptor:{moduleName:"queryAcceptorCall@Bind@AWRScope",errMsg:"Bad query acceptor for scope bind.",hintMsg:"The queryAcceptor call ended by an error.",afterHintLines:[" + ID: {scopeId}"," + Error: {errMsg}"]},failedUnsubscribeAttempt:{moduleName:"unsubscribe@Bind@AWRScope",errMsg:"Bad unsubscribe call for scope bind.",hintMsg:"The unsubscribe@Observable call ended by an error.",afterHintLines:[" + ID: {scopeId}"," + Error: {errMsg}"]},badSubscriptionObject:{moduleName:"subscription@Bind@AWRScope",errMsg:"Bad subscription object detected by scope bind.",hintMsg:"The subscription object is not an instance of subscription@Observable.",afterHintLines:[" + ID: {scopeId}"]},badObservableObject:{moduleName:"observable@Bind@AWRScope",errMsg:"Bad observable object detected by scope bind.",hintMsg:"The subscription object is not an instance of @Observable.",afterHintLines:[" + ID: {scopeId}"]},badBeforeRecompileListenerID:{moduleName:"before@recompile@AWRScope",errMsg:"Bad ID for registering  <before recompile listener> for scope.",hintMsg:"The listener cannot be registered without an ID.",afterHintLines:[" + ID: {scopeId}"]},badBeforeRecompileCallback:{moduleName:"before@recompile@AWRScope",errMsg:"Bad before recompile listener callback for scope.",hintMsg:"The callback call ended by an error.",afterHintLines:[" + ID: {scopeId}"," + Error: {errMsg}"]},badAppendSelector:{moduleName:"append@AWRScope",errMsg:"Bad container selector for append@scope.",hintMsg:"The append call ended by an error.",afterHintLines:[" + ID: {scopeId}"]},badAppendComp:{moduleName:"append@AWRScope",errMsg:"Bad component selector for append@scope.",hintMsg:"The append call ended by an error.",afterHintLines:[" + ID: {scopeId}"]},errorInAppendCompile:{moduleName:"append@AWRScope",errMsg:"Bad component compile for append@scope.",hintMsg:"The append call ended by error in compile@component.",afterHintLines:[" + ID: {scopeId}"," + Error: {errMsg}"]},badPrependSelector:{moduleName:"prepend@AWRScope",errMsg:"Bad container selector for prepend@scope.",hintMsg:"The prepend call ended by an error.",afterHintLines:[" + ID: {scopeId}"]},badPrependComp:{moduleName:"prepend@AWRScope",errMsg:"Bad component for prepend@scope.",hintMsg:"The prepend call ended by an error.",afterHintLines:[" + ID: {scopeId}"]},errorInPrependCompile:{moduleName:"prepend@AWRScope",errMsg:"Bad component compile for prepend@scope.",hintMsg:"The prepend call ended by error in compile@component.",afterHintLines:[" + ID: {scopeId}"," + Error: {errMsg}"]},badReplaceSelector:{moduleName:"replace@AWRScope",errMsg:"Bad container selector for replace@scope.",hintMsg:"The replace call ended by an error.",afterHintLines:[" + ID: {scopeId}"]},badReplaceComp:{moduleName:"replace@AWRScope",errMsg:"Bad component for replace@scope.",hintMsg:"The replace call ended by an error.",afterHintLines:[" + ID: {scopeId}"]},errorInReplaceCompile:{moduleName:"replace@AWRScope",errMsg:"Bad component compile for replace@scope.",hintMsg:"The replace call ended by error in compile@component.",afterHintLines:[" + ID: {scopeId}"," + Error: {errMsg}"]},illegalReplaceContainer:{moduleName:"replace@AWRScope",errMsg:"Illegal attempt for replace@scope.",hintMsg:"The replace cannot be used for replacing the scope's main container.",afterHintLines:[" + ID: {scopeId}"]},errorInWatchableUnsubscribe:{moduleName:"$unsubscribe@AWRScope",errMsg:"Bad $unsubscribe function for observable@Watchable",hintMsg:"Error occurred when calling $unsubscribe of a subscription associated with a watchable instance.",afterHintLines:[" + ID: {scopeId}"," + Subscription ID: {subscriptionId}"," + Error: {errMsg}"]}},{$$name$$:"$$scopeDom@kernel",badScopeObject:{moduleName:"scopeDom@core",errMsg:"Bad scope object for compile. Aborting.",hintMsg:"Compile require a scope object which is instance of AWRScope"},prematureDom:{moduleName:"scopeDom@core",errMsg:"Premature dom for the scope detected. Aborting action $compileAwrLoops@scopeDom.",hintMsg:"Compile@Loops requires that scope dom gets pre rendered first.",afterHintLines:[" (  This looks like a too early request! )"]},badAppendSelector:{moduleName:"append@AWRScope",errMsg:"Bad container selector for append@scope.",hintMsg:"The append call ended by an error.",afterHintLines:[" + ID: {scopeId}"]},badAppendSegment:{moduleName:"append@AWRScope",errMsg:"Bad segment selector for append@scope.",hintMsg:"The append call ended by an error",afterHintLines:[" + ID: {scopeId}"]},errorInAppendCompile:{moduleName:"append@AWRScope",errMsg:"Bad segment compile for append@scope.",hintMsg:"The append call ended by error in compile@segment.",afterHintLines:[" + ID: {scopeId}"," + Error: {errMsg}"]},badPrependSelector:{moduleName:"prepend@AWRScope",errMsg:"Bad container selector for prepend@scope.",hintMsg:"The prepend call ended by an error.",afterHintLines:[" + ID: {scopeId}"]},badPrependSegment:{moduleName:"prepend@AWRScope",errMsg:"Bad segment for prepend@scope.",hintMsg:"The prepend call ended by an error.",afterHintLines:[" + ID: {scopeId}"]},errorInPrependCompile:{moduleName:"prepend@AWRScope",errMsg:"Bad segment compile for prepend@scope.",hintMsg:"The prepend call ended by error in compile@segment .",afterHintLines:[" + ID: {scopeId}"," + Error: {errMsg}"]},badReplaceSelector:{moduleName:"replace@AWRScope",errMsg:"Bad container selector for replace@scope.",hintMsg:"The replace call ended by an error.",afterHintLines:[" + ID: {scopeId}"]},badReplaceSegment:{moduleName:"replace@AWRScope",errMsg:"Bad segment for replace@scope.",hintMsg:"The replace call ended by an error.",afterHintLines:[" + ID: {scopeId}"]},errorInReplaceCompile:{moduleName:"replace@AWRScope",errMsg:"Bad segment compile for replace@scope.",hintMsg:"The replace call ended by error in compile@segment .",afterHintLines:[" + ID: {scopeId}"," + Error: {errMsg}"]},illegalReplaceContainer:{moduleName:"replace@AWRScope",errMsg:"Illegal attempt for replace@scope.",hintMsg:"The replace cannot be used for replacing the scope's main container .",afterHintLines:[" + ID: {scopeId}"]},scopeFunctionError:{moduleName:"functionCall@AWRScope",errMsg:"Bad scope function  [{fnName}]",hintMsg:"The scope function call ended by an error.",afterHintLines:[" + ID: {scopeId}"," + Error: {errMsg}"]},errorInHandler:{moduleName:"$applyHandler@AWRScope",errMsg:"Error in handler body.",hintMsg:"Scope handler [{handlerName}] run ended with an error.",afterHintLines:[" + Error: {errMsg}"]}},{$$name$$:"$$segment@AwrScope@kernel",badTemplate:{moduleName:"segment@AWRScope",errMsg:"Bad template path for compile@segment@scope.",hintMsg:"No template found in the path.",afterHintLines:[" + Path: {templatePath}"]},segmentSetupError:{moduleName:"segment@AWRScope",errMsg:"Bad setup function for compile@segment@scope.",hintMsg:"Calling segment setup function ended by an error.",afterHintLines:[" + Details: {errMsg}"]},badSegmentCompilerFn:{moduleName:"segment@AWRScope",errMsg:"Bad compiler function for segment@scope.",hintMsg:"Calling segment compiler function ended by an error.",afterHintLines:[" + Details: {errMsg}"]},illegalReplaceContainer:{moduleName:"replace@AWRScope",errMsg:"Illegal attempt for replace@scope.",hintMsg:"The replace cannot be used for replacing the scope's main container .",afterHintLines:[" + Selector: {selector}"," + ID: {scopeId}"]}},{$$name$$:"$$serial@kernel",example:{moduleName:"$registerClass@AWRClass",errMsg:"Bad attempt to register a class@AWR. Aborting.",hintMsg:"NewClass@AWRClass requires a name argument and the class should not be null"}},{$$name$$:"$$serverCall@kernel",badUploadProgressListener:{moduleName:"$upload@AWRServerCall",errMsg:"Bad upload progress listener.",hintMsg:"Calling progress listener ended by an error.",afterHintLines:[" + Details: {errMsg}"]},errorInPipe:{moduleName:"$promiseCall@AWRServerCall",errMsg:"Bad pipe transform call.",hintMsg:"Calling pipe < {pipeName} > for transforming {callPhase} data ended by an error.",afterHintLines:[" + Details: {errMsg}"]}},{$$name$$:"$$specManager@kernel",example:{moduleName:"$something@AWRSpec",errMsg:"Failed to load script from path {path}.",hintMsg:"No additional information available."}},{$$name$$:"$$template@kernel",noScopeInCompileTemp:{moduleName:"$compile@AWRUITemplate",errMsg:"Bad scope. Aborting template compile.",hintMsg:"Please check the scope object."},noPreparedStringCompileTemp:{moduleName:"$compile@AWRUITemplate",errMsg:"No prepared string detected. Aborting compile template.",hintMsg:"Compile needs a pre rendered html string for compile, but missing."},invalidTempBase:{moduleName:"$render@AWRUITemplate",errMsg:"Invalid base config for templates.",hintMsg:"No template base is registered and templates can not be retrieved."},invalidTemplate:{moduleName:"$render@AWRUITemplate",errMsg:"Invalid template call.",hintMsg:"No template found in the configured template registry"},invalidTempContext:{moduleName:"$render@AWRUITemplate",errMsg:"Invalid context for template.",hintMsg:"The context must be an object."},invalidScopeIdForTemp:{moduleName:"$render@AWRUITemplate",errMsg:"Invalid scope id. Aborting template initialization.",hintMsg:"A valid AWRUIScope[id] is required, but missing."},forbiddenScopePropertyName:{moduleName:"$compile@AWRUITemplate",errMsg:"Bad property name. Ignoring property value.",hintMsg:'Check the property name in scope data. It is safer to not use "$" prefix with property names.'},badRegisterArgs:{moduleName:"$register@AWRUITemplate",errMsg:"Bad arguments for $register@Template",hintMsg:"Registering new template requires arguments path<string> and fn<function>"},badRegisterPath:{moduleName:"$register@AWRUITemplate",errMsg:"Bad path for $register@Template. Registering new template requires an available path.",hintMsg:"Path and its sub paths should not lead to an already registered template<function>."},failedToRegisterPath:{moduleName:"$register@AWRUITemplate",errMsg:"Path registration failed for an unknown reason.",hintMsg:"New template was not available after registration in the global namespace as a <function>."}},{$$name$$:"demoAuthorizer@extensions",missingAuthorizer:{moduleName:"$authorize@DemoAuthorizer",errMsg:"Missing dependency appDemoAuthorizer.",hintMsg:"App should implement appDemoAuthorizer as service."},badAuthorizer:{moduleName:"$authorize@DemoAuthorizer",errMsg:"Bad function authorize@appDemoAuthorizer.",hintMsg:"Authorizer failed to authorize a and b tokens. \n\t + Details: {errMsg}"}},{$$name$$:"$$null$$"}]}(window,jQuery);