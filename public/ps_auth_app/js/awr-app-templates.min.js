this.awr=this.awr||{},this.awr.core=this.awr.core||{},this.awr.core.templates=this.awr.core.templates||{},this.awr.core.templates.app=this.awr.core.templates.app||{},this.awr.core.templates.app.app=Handlebars.template({1:function(container,depth0,helpers,partials,data){return'<div awr-app="{{appName}}" >\n\n    <modal></modal>\n    <cookie-banner></cookie-banner>\n    <ps-header></ps-header>\n    \n\x3c!-- START: awr-app-main --\x3e\n<div id="awrViewMain" class="main">\n\n        \x3c!--@important: Do not remove this tag! --\x3e\n        \x3c!--@important: Do not put any value between the main tag directly, or it will be overridden by the viewManager --\x3e\n        \x3c!--@hint: Configure a default route to get a default view for here!  --\x3e\n    </div>\n\x3c!-- END: awr-app-main --\x3e\n</div>'},compiler:[7,">= 4.0.0"],main:function(container,depth0,helpers,partials,data){var stack1,helper,options,buffer="\n\x3c!-- START: awr-app --\x3e";return helper=null!=(helper=helpers["raw-helper"]||(null!=depth0?depth0["raw-helper"]:depth0))?helper:helpers.helperMissing,options={name:"raw-helper",hash:{},fn:container.program(1,data,0),inverse:container.noop,data:data},stack1="function"==typeof helper?helper.call(null!=depth0?depth0:container.nullContext||{},options):helper,helpers["raw-helper"]||(stack1=helpers.blockHelperMissing.call(depth0,stack1,options)),null!=stack1&&(buffer+=stack1),buffer+"\n\x3c!-- END: awr-app --\x3e\n"},useData:!0}),this.awr.core.templates.app.components=this.awr.core.templates.app.components||{},this.awr.core.templates.app.components["pass-strength"]=this.awr.core.templates.app.components["pass-strength"]||{},this.awr.core.templates.app.components["pass-strength"]["pass-strength"]=Handlebars.template({compiler:[7,">= 4.0.0"],main:function(container,depth0,helpers,partials,data){return'<div class="form-member pass-strength">\n    <label>Password strength\n        <strong awr-click="showPasswordTip"\n                class="link-element no-underline fa fa-question"></strong>\n    </label>\n    <div class="pass-strength-main">\n        <span>weak</span>\n        <div class="deg-back">\n            <div class="deg"></div>\n            <div class="deg"></div>\n            <div class="deg"></div>\n            <div class="deg"></div>\n            <div class="deg"></div>\n            <div class="deg"></div>\n        </div>\n        <span>strong</span>\n    </div>\n</div>'},useData:!0}),this.awr.core.templates.app.components["password-info"]=this.awr.core.templates.app.components["password-info"]||{},this.awr.core.templates.app.components["password-info"]["password-info"]=Handlebars.template({compiler:[7,">= 4.0.0"],main:function(container,depth0,helpers,partials,data){return'<div class="password-info">\n    <h4><span class="fa fa-question-circle"></span>&nbsp;Choose a strong enough password</h4>\n    <p>For making a strong password string construct your password based\n        on the following requirements</p>\n    <ul>\n        <li>The string must contain at least 1 lowercase alphabetical character</li>\n        <li>The string must contain at least 1 uppercase alphabetical character</li>\n        <li>The string must contain at least 1 numeric character</li>\n        <li>The string must contain at least one special character\n            <strong class="text-primary">!@#$%^&*.</strong>\n        </li>\n        <li>The string must be 8 characters or longer, and very strong\n            password strings requires at least 16 characters.</li>\n    </ul>\n</div>'},useData:!0}),this.awr.core.templates.app.forms=this.awr.core.templates.app.forms||{},this.awr.core.templates.app.forms["change-password-form"]=this.awr.core.templates.app.forms["change-password-form"]||{},this.awr.core.templates.app.forms["change-password-form"]["change-password-form"]=Handlebars.template({1:function(container,depth0,helpers,partials,data){return"\n\n"},compiler:[7,">= 4.0.0"],main:function(container,depth0,helpers,partials,data){var stack1,helper,options,alias1=null!=depth0?depth0:container.nullContext||{},alias2=helpers.helperMissing,alias4=helpers.blockHelperMissing,buffer='\x3c!-- Note: This is only an example change to look like what you need!--\x3e\n<div class="change-password-form">\n    \x3c!-- Lets define a view per each possible form mode and control them using awr-if --\x3e\n    <awr-if ?="inWorkingMode">\n\n        <div class="working-mode-view">\n            <h4>\n                <span class="fas fa-circle-notch fa-spin"></span>\n                <span>Changing password...</span>\n            </h4>\n            <p>Please be patient. This might take a moment!</p>\n        </div>\n    </awr-if>\n\n    <awr-if ?="inFailMode">\n        <div class="fail-mode-view">\n            <span class="fas fa-exclamation-triangle text-danger"></span>\n            <span >The password reset link is expired or not valid!</span>\n            </h4>\n            <strong class="link-element no-underline" awr-click="forgotPassword"> Send another link</strong>\n        </div>\n    </awr-if>\n\n    <awr-if ?="inSuccessMode">\n        <div class="success-mode-view">\n\n            <h4 class="text-success">\n                <span class="fas fa-check"></span>&nbsp;Password changed successfully\n            </h4>\n            <div class="sign-in-link">\n                <span class="fas fa-lock"></span>\n                <span class="link-element no-underline" awr-click="redirectToAuth:\'signIn\'">Sign in</span>\n            </div>\n        </div>\n    </awr-if>\n\n    <awr-if ?="inDefaultMode">\n        <div class="default-mode-view">\n            \x3c!--Here we use a function \'fieldInCurrentStep\' with the native pipe \'reduce\' --\x3e\n            \x3c!--The function is provided by the extension and helps selecting proper fields per step--\x3e\n            \n\x3c!-- START: awr-each nested scope zone --\x3e\n<awr-each data="changePasswordFormFields | reduce:fieldInCurrentStep | take:1" controller="FormMemberController"\n                      template="ux/extensions/formEssentials/form-member/form-member.hbs">';return helper=null!=(helper=helpers["raw-helper"]||(null!=depth0?depth0["raw-helper"]:depth0))?helper:alias2,options={name:"raw-helper",hash:{},fn:container.program(1,data,0),inverse:container.noop,data:data},stack1="function"==typeof helper?helper.call(alias1,options):helper,helpers["raw-helper"]||(stack1=alias4.call(depth0,stack1,options)),null!=stack1&&(buffer+=stack1),buffer+='</awr-each>\n\x3c!-- END: awr-each nested scope zone --\x3e\n\n            <pass-strength></pass-strength>\n\n            \n\x3c!-- START: awr-each nested scope zone --\x3e\n<awr-each data="changePasswordFormFields | reduce:fieldInCurrentStep | skip:1" controller="FormMemberController"\n                      template="ux/extensions/formEssentials/form-member/form-member.hbs">',helper=null!=(helper=helpers["raw-helper"]||(null!=depth0?depth0["raw-helper"]:depth0))?helper:alias2,options={name:"raw-helper",hash:{},fn:container.program(1,data,0),inverse:container.noop,data:data},stack1="function"==typeof helper?helper.call(alias1,options):helper,helpers["raw-helper"]||(stack1=alias4.call(depth0,stack1,options)),null!=stack1&&(buffer+=stack1),buffer+'</awr-each>\n\x3c!-- END: awr-each nested scope zone --\x3e\n\n            <br>\n            <br>\n            <div class="form-actions">\n                \x3c!-- Note that all functions and helpers variables used here are all provided by the extension --\x3e\n                <button class="on" awr-click="restart">Cancel</button>\n                <button class="on" awr-click="submit">Save</button>\n            </div>\n\n        </div>\n    </awr-if>\n\n</div>'},useData:!0}),this.awr.core.templates.app.forms["sign-in-form"]=this.awr.core.templates.app.forms["sign-in-form"]||{},this.awr.core.templates.app.forms["sign-in-form"]["sign-in-form"]=Handlebars.template({1:function(container,depth0,helpers,partials,data){return"\n\n\n"},compiler:[7,">= 4.0.0"],main:function(container,depth0,helpers,partials,data){var stack1,helper,options,buffer='\x3c!-- Note: This is only an example change to look like what you need!--\x3e\n<div class="sign-in-form">\n    \x3c!-- Lets define a view per each possible form mode and control them using awr-if --\x3e\n    <awr-if ?="inWorkingMode">\n\n        <div class="working-mode-view">\n            <h4>\n                <span class="fas fa-circle-notch fa-spin"></span>\n                <span>Signing in...</span>\n            </h4>\n            <p>Please be patient. This might take a moment!</p>\n        </div>\n    </awr-if>\n\n\n\n    <awr-if !?="inWorkingMode">\n        <div class=success-mode-view" awr-class="hidden[!?:inSuccessMode]">\n            <h4>\n                <span class="fas fa-circle-notch fa-spin"></span>\n                <span>Signed in successfully...</span>\n            </h4>\n        </div>\n        <div class="default-mode-view" awr-class="hidden[?:inSuccessMode]">\n            <div class="top-actions">\n                <span class="link-element no-underline" awr-click="forgotPassword">\n                    Forgot your password?\n\n                </span>\n            </div>\n\n            \x3c!--Here we use a function \'fieldInCurrentStep\' with the native pipe \'reduce\' --\x3e\n            \x3c!--The function is provided by the extension and helps selecting proper fields per step--\x3e\n            \n\x3c!-- START: awr-each nested scope zone --\x3e\n<awr-each data="signInFormFields | reduce:fieldInCurrentStep" controller="FormMemberController"\n                      template="ux/extensions/formEssentials/form-member/form-member.hbs">';return helper=null!=(helper=helpers["raw-helper"]||(null!=depth0?depth0["raw-helper"]:depth0))?helper:helpers.helperMissing,options={name:"raw-helper",hash:{},fn:container.program(1,data,0),inverse:container.noop,data:data},stack1="function"==typeof helper?helper.call(null!=depth0?depth0:container.nullContext||{},options):helper,helpers["raw-helper"]||(stack1=helpers.blockHelperMissing.call(depth0,stack1,options)),null!=stack1&&(buffer+=stack1),buffer+'</awr-each>\n\x3c!-- END: awr-each nested scope zone --\x3e\n            <br>\n            <div class="" awr-class="hidden[!?:inFailMode]">\n                <span class="text-danger failed-sign-in-msg">\n                    Sign in failed! ${signInError}\n                </span>\n            </div>\n            <br>\n\n            <div class="form-actions">\n                <button class="on" awr-click="submit">Sign in</button>\n            </div>\n        </div>\n\n        <div class="tabs-actions" awr-class="hidden[?:inSuccessMode]">\n            <p>\n                Not registered yet?\n                <br>\n                <span class="link-element no-underline" awr-click="changeView:\'signup\'">\n                 Sign up\n                </span>\n            </p>\n\n        </div>\n    </awr-if>\n\n</div>'},useData:!0}),this.awr.core.templates.app.forms["sign-up-form"]=this.awr.core.templates.app.forms["sign-up-form"]||{},this.awr.core.templates.app.forms["sign-up-form"]["sign-up-form"]=Handlebars.template({1:function(container,depth0,helpers,partials,data){return"\n\n"},compiler:[7,">= 4.0.0"],main:function(container,depth0,helpers,partials,data){var stack1,helper,options,alias1=null!=depth0?depth0:container.nullContext||{},alias2=helpers.helperMissing,alias4=helpers.blockHelperMissing,buffer='\x3c!-- Note: This is only an example change to look like what you need!--\x3e\n<div class="sign-up-form">\n    \x3c!-- Lets define a view per each possible form mode and control them using awr-if --\x3e\n    <awr-if ?="inWorkingMode">\n\n        <div class="working-mode-view">\n            <h4>\n                <span class="fas fa-circle-notch fa-spin"></span>\n                <span>Creating account...</span>\n            </h4>\n            <p>Please be patient. This might take a moment!</p>\n        </div>\n    </awr-if>\n\n    <awr-if ?="inFailMode">\n        <div class="fail-mode-view">\n            <h4>\n                <span class="far fa-meh text-danger"></span>\n                <span>Something went wrong!</span>\n            </h4>\n            <p>We are sorry but something went wrong! Please, try gain later.</p>\n            \x3c!-- setting arg keepData to true form keeping the current data in the form--\x3e\n            \x3c!--Note that beside the data all other variables will get reset to default--\x3e\n            <button class="ps-button" awr-click="restart:true">Try again</button>\n        </div>\n    </awr-if>\n\n    <awr-if ?="inSuccessMode">\n        <div class="success-mode-view">\n            <h4>\n                <span class="fas fa-check-circle text-success"></span>\n                <span>Account created successfully!</span>\n            </h4>\n            <small><span class="fas fa-circle-notch fa-spin"></span>&nbsp;Redirecting...</small>\n        </div>\n    </awr-if>\n\n    <awr-if ?="inDefaultMode">\n        <div class="default-mode-view">\n\n            \x3c!--Here we use a function \'fieldInCurrentStep\' with the native pipe \'reduce\' --\x3e\n            \x3c!--The function is provided by the extension and helps selecting proper fields per step--\x3e\n            \n\x3c!-- START: awr-each nested scope zone --\x3e\n<awr-each data="signUpFormFields | reduce:fieldInCurrentStep | take:4" controller="FormMemberController"\n                      template="ux/extensions/formEssentials/form-member/form-member.hbs">';return helper=null!=(helper=helpers["raw-helper"]||(null!=depth0?depth0["raw-helper"]:depth0))?helper:alias2,options={name:"raw-helper",hash:{},fn:container.program(1,data,0),inverse:container.noop,data:data},stack1="function"==typeof helper?helper.call(alias1,options):helper,helpers["raw-helper"]||(stack1=alias4.call(depth0,stack1,options)),null!=stack1&&(buffer+=stack1),buffer+='</awr-each>\n\x3c!-- END: awr-each nested scope zone --\x3e\n\n            <pass-strength></pass-strength>\n            <br>\n            \n\x3c!-- START: awr-each nested scope zone --\x3e\n<awr-each data="signUpFormFields | reduce:fieldInCurrentStep | skip:4" controller="FormMemberController"\n                      template="ux/extensions/formEssentials/form-member/form-member.hbs">',helper=null!=(helper=helpers["raw-helper"]||(null!=depth0?depth0["raw-helper"]:depth0))?helper:alias2,options={name:"raw-helper",hash:{},fn:container.program(1,data,0),inverse:container.noop,data:data},stack1="function"==typeof helper?helper.call(alias1,options):helper,helpers["raw-helper"]||(stack1=alias4.call(depth0,stack1,options)),null!=stack1&&(buffer+=stack1),buffer+'</awr-each>\n\x3c!-- END: awr-each nested scope zone --\x3e\n\n            <div class="terms-notice hidden">\n                <span class="fas fa-exclamation-triangle text-warning"></span>\n                In order to proceed, terms of services must be accepted.\n            </div>\n\n            <div class="form-actions">\n                <button awr-click="submit" awr-class="on[?:hasSubmit]">Sign up</button>\n            </div>\n\n        </div>\n\n        <div class="tabs-actions">\n            <p>\n                Already have an account?\n                <br>\n                <span class="link-element no-underline"\n                      awr-click="changeView:\'signin\'">\n                    Sign in instead\n                </span>\n            </p>\n\n        </div>\n    </awr-if>\n\n</div>'},useData:!0}),this.awr.core.templates.app.views=this.awr.core.templates.app.views||{},this.awr.core.templates.app.views["auth-view"]=this.awr.core.templates.app.views["auth-view"]||{},this.awr.core.templates.app.views["auth-view"]["auth-view-index"]=Handlebars.template({compiler:[7,">= 4.0.0"],main:function(container,depth0,helpers,partials,data){return'<div class="auth-view app-view">\n\n    <awr-if ?="isRedirect">\n        <div class="redirect-ntf">\n            <h3 class="">\n                <span class="fas fa-circle-notch fa-spin"></span>\n                &nbsp;Redirecting...\n            </h3>\n        </div>\n    </awr-if>\n    <awr-if ?="isSignIn">\n        <sign-in-form></sign-in-form>\n\n    </awr-if>\n\n    <awr-if ?="isSignUp">\n        <sign-up-form></sign-up-form>\n\n\n    </awr-if>\n\n</div>'},useData:!0}),this.awr.core.templates.app.views["email-confirm-view"]=this.awr.core.templates.app.views["email-confirm-view"]||{},this.awr.core.templates.app.views["email-confirm-view"]["email-confirm-view-index"]=Handlebars.template({compiler:[7,">= 4.0.0"],main:function(container,depth0,helpers,partials,data){return'<div class="email-confirm-view app-view">\n    <h1 class="view-title">\n        <span class="fa fa-envelope"></span>&nbsp;\n        Please complete your registration by confirming your email.\n    </h1>\n    <p>\n        For this you should use the confirmation link which is sent to your email.\n    </p>\n    <div class="just-confirmed">\n        <div class="content">\n            <span>Did you just confirmed? </span>\n            <strong class="link-element" awr-click="continueToNext">Continue</strong>\n        </div>\n\n        <div class="checking">\n            <span class="fa fa-circle-o-notch fa-spin"></span>&nbsp;\n            <span>Checking with server...</span>\n        </div>\n        <div class="note">\n            <small> <span class="fa fa-exclamation-triangle text-warning"></span>&nbsp;\n                <span class="msg"></span>\n            </small>\n        </div>\n    </div>\n    <div class="send-again">\n        <div class="content">\n            <span>You can\'t find the email? </span>\n            <strong class="link-element" awr-click="sendConfirmLink">Send another confirmation link</strong>\n        </div>\n        <div class="sending">\n            <span class="fa fa-circle-o-notch fa-spin"></span>&nbsp;\n            <span>Sending email...</span>\n        </div>\n        <div class="note">\n            <small>Please be patient the email might arrive at your inbox after few minutes!</small>\n        </div>\n    </div>\n</div>'},useData:!0}),this.awr.core.templates.app.views["forgot-password-view"]=this.awr.core.templates.app.views["forgot-password-view"]||{},this.awr.core.templates.app.views["forgot-password-view"]["forgot-password-view-index"]=Handlebars.template({1:function(container,depth0,helpers,partials,data){return"\n\n"},compiler:[7,">= 4.0.0"],main:function(container,depth0,helpers,partials,data){var stack1,helper,options,buffer='<div class="forgot-password-view app-view">\n    <div class="content" awr-class="on[stringEqual:mode,\'fail\']">\n        <h3 class="reg-mode-notif  view-title" awr-class="hidden[!stringEqual:mode,\'fail\']">\n            <span class="far fa-meh"></span>\n            <span class="" awr-class="hidden[?:badEmail]">Something went wrong. Please try again later!</span>\n            <span class="" awr-class="hidden[!?:badEmail]">The email address cannot be found!</span>\n        </h3>\n        <p awr-class="hidden[!?:badEmail]">\n            We are sorry, but the email address you provided is not associated with any existing account.\n        </p>\n        <span class="link-element no-underline" awr-click="restart">Try again!</span>\n        <div class="sign-in-link">\n            <span class="fa fa-lock"></span>\n            <span class="link-element no-underline" awr-click="signIn">Sign in</span>\n        </div>\n    </div>\n    <div class="content" awr-class="on[stringEqual:mode,\'success\']">\n        <h3 class=" view-title">\n            <span class="fa fa-check text-success"></span>\n            <span>Password reset link sent!</span>\n        </h3>\n        <p>\n            Please be patient, it might take few minutes before the email gets to your inbox.\n        </p>\n        <span class="link-element no-underline" awr-click="restart">Try again!</span>\n        <div class="sign-in-link">\n            <span class="fa fa-lock"></span>\n            <span class="link-element no-underline" awr-click="signIn">Sign in</span>\n        </div>\n    </div>\n    <div class="content" awr-class="on[stringEqual:mode,\'working\']">\n        <h3 class="view-title"><span class="fa fa-circle-o-notch fa-spin"></span>&nbsp;Sending email...</h3>\n    </div>\n    <div class="content" awr-class="on[stringEqual:mode,\'default\']">\n        <h2 class="view-title">Forgot your password?</h2>\n        <p>\n            Specify your email address and we will send you a password reset link. Please note that you should\n            specify the same email address which you used when creating your account.\n        </p>\n\n        \n\x3c!-- START: awr-each nested scope zone --\x3e\n<awr-each data="forgotPassFields" controller="FormMemberController"\n                  template="ux/extensions/formEssentials/form-member/form-member.hbs">';return helper=null!=(helper=helpers["raw-helper"]||(null!=depth0?depth0["raw-helper"]:depth0))?helper:helpers.helperMissing,options={name:"raw-helper",hash:{},fn:container.program(1,data,0),inverse:container.noop,data:data},stack1="function"==typeof helper?helper.call(null!=depth0?depth0:container.nullContext||{},options):helper,helpers["raw-helper"]||(stack1=helpers.blockHelperMissing.call(depth0,stack1,options)),null!=stack1&&(buffer+=stack1),buffer+'</awr-each>\n\x3c!-- END: awr-each nested scope zone --\x3e\n\n        <div class="actions">\n            <button class="ps-button" awr-click="submit">Send</button>\n        </div>\n    </div>\n</div>'},useData:!0}),this.awr.core.templates.app.views["reset-password-view"]=this.awr.core.templates.app.views["reset-password-view"]||{},this.awr.core.templates.app.views["reset-password-view"]["reset-password-view-index"]=Handlebars.template({compiler:[7,">= 4.0.0"],main:function(container,depth0,helpers,partials,data){return'<div class="reset-password-view app-view">\n\n    <awr-if !?="isResetKeyValid">\n        <h4 class="">\n            <span class="fas fa-exclamation-triangle text-danger"></span>\n            <span >The password reset link is expired or not valid!</span>\n        </h4>\n        <strong class="link-element no-underline" awr-click="forgotPassword"> Send another link</strong>\n    </awr-if>\n\n    <awr-if ?="isResetKeyValid">\n        <change-password-form></change-password-form>\n    </awr-if>\n</div>'},useData:!0}),this.awr.core.templates.app.shared=this.awr.core.templates.app.shared||{},this.awr.core.templates.app.shared.components=this.awr.core.templates.app.shared.components||{},this.awr.core.templates.app.shared.components["confirm-modal"]=this.awr.core.templates.app.shared.components["confirm-modal"]||{},this.awr.core.templates.app.shared.components["confirm-modal"]["confirm-modal"]=Handlebars.template({compiler:[7,">= 4.0.0"],main:function(container,depth0,helpers,partials,data){return'<div class="confirm-modal">\n    <div class="head">\n        <span class="main-icon ${body.mainIcon}"></span>\n        <h3>\n            <span class="${body.icon}"></span>\n            <span class="title-msg">${body.title}</span>\n        </h3>\n    </div>\n\n    <p>${body.message}</p>\n    <div class="actions">\n        <button class="${body.cancelBtnClass}" awr-click="cancel">${body.cancelText}</button>\n        <button class="${body.confirmBtnClass}" awr-click="confirm">\n            <span class="${body.confirmBeforeIcon}"></span>\n            ${body.confirmText}\n            <span class="${body.confirmAfterIcon}"></span>\n        </button>\n    </div>\n</div>'},useData:!0}),this.awr.core.templates.app.shared.components["cookie-banner"]=this.awr.core.templates.app.shared.components["cookie-banner"]||{},this.awr.core.templates.app.shared.components["cookie-banner"]["cookie-banner"]=Handlebars.template({compiler:[7,">= 4.0.0"],main:function(container,depth0,helpers,partials,data){return'<div class="cookie-banner">\n    <div class="inner">\n        <p>\n            We are using technologies such as cookies <span class="fas fa-cookie-bite"></span> and collecting browsing data in order to give you the best possible\n            online experience. Please agree to this by clicking the accept button. Read more about our\n            <a class="link-element" awr-click="openPrivacyPolicy"><span>Privacy Policy</span>&nbsp;<span class="fas fa-book"></span></a>\n        </p>\n\n        <button class="ps-button" awr-click="accept">\n            Accept <span class="fas fa-check"></span>\n        </button>\n    </div>\n\n</div>'},useData:!0}),this.awr.core.templates.app.shared.components["doc-menu"]=this.awr.core.templates.app.shared.components["doc-menu"]||{},this.awr.core.templates.app.shared.components["doc-menu"]["doc-menu"]=Handlebars.template({compiler:[7,">= 4.0.0"],main:function(container,depth0,helpers,partials,data){return'<div class="doc-menu">\n    <div class="edit-btn" awr-click="editDoc:docId" awr-class="hidden[!?:userCanEditDoc]">\n        <span class="fas fa-pencil-alt"></span>\n        <span class="link-element no-underline">Edit</span>\n    </div>\n    <awr-repeat data="items">\n        <div class="dm-item">\n            <label for=""><span class="icon ${icon}"></span>&nbsp;${label}</label>\n            <div class="values">\n                <awr-repeat data="values">\n                    <span class="dm-value link-element no-underline"\n                          awr-click="handle:group,searchId,value">\n                        ${value}\n                    </span>\n                </awr-repeat>\n            </div>\n        </div>\n    </awr-repeat>\n</div>'},useData:!0}),this.awr.core.templates.app.shared.components["main-menu"]=this.awr.core.templates.app.shared.components["main-menu"]||{},this.awr.core.templates.app.shared.components["main-menu"]["main-menu"]=Handlebars.template({compiler:[7,">= 4.0.0"],main:function(container,depth0,helpers,partials,data){return'\n<div class="main-menu menu-toggle" awr-click="toggleMenu">\n    <span class="fa fa-bars"></span>\n\n</div>\n<div class="main-menu-expand">\n    <awr-repeat data="items">\n        <div class="mv-item-container" awr-class="colls-parent[?:isCollections]">\n            <div class="mv-item ${class}" awr-click="action:id">\n                <span class="name">${name}</span>\n                <span class="mv-icon ${icon}" awr-class="hidden[!stringExist:icon]"></span>\n            </div>\n            <awr-if ?="isCollections">\n                <menu-collections></menu-collections>\n            </awr-if>\n        </div>\n    </awr-repeat>\n</div>'},useData:!0}),this.awr.core.templates.app.shared.components["menu-collections"]=this.awr.core.templates.app.shared.components["menu-collections"]||{},this.awr.core.templates.app.shared.components["menu-collections"]["menu-collections"]=Handlebars.template({compiler:[7,">= 4.0.0"],main:function(container,depth0,helpers,partials,data){return'<div class="menu-collections">\n    \x3c!--<div class="edit-toggle" awr-click="editColls">--\x3e\n        \x3c!--<span class="fa fa-edit"></span>--\x3e\n        \x3c!--<span class="text">Edit</span>--\x3e\n    \x3c!--</div>--\x3e\n    <div class="item-container styled-scroll">\n        <awr-repeat data="colls">\n            <div class="coll-item" awr-class="selected[?:isCurrent]" data-cl-id="${id}" awr-click="openCollection:event,id">\n                <div class="name">\n                    <span>${name}</span>\n                </div>\n            </div>\n        </awr-repeat>\n    </div>\n\n</div>'},useData:!0}),this.awr.core.templates.app.shared.components["privacy-policy-modal"]=this.awr.core.templates.app.shared.components["privacy-policy-modal"]||{},this.awr.core.templates.app.shared.components["privacy-policy-modal"]["privacy-policy-modal"]=Handlebars.template({compiler:[7,">= 4.0.0"],main:function(container,depth0,helpers,partials,data){return'<div class="privacy-policy-modal">\n    <h1>Pageshare Privacy Policy</h1>\n    <hr>\n    <div class="content styled-scroll">\n        <p>We only collect the information you choose to give us, and we process it with your consent, or on another\n            legal basis; we only require the minimum amount of personal information that is necessary to fulfill the\n            purpose\n            of your interaction with us; we don\'t sell it to third parties; and we only use it as this Privacy\n            Statement describes.\n        </p>\n        <h2>What information is being collected?</h2>\n        <p>\n            When you visit the pageshare.fi (the “Site”), we automatically collect certain information about your\n            device,\n            including information about your web browser, IP address, time zone, and some of the cookies that are\n            installed on your device.\n            Additionally, as you browse the Site, we collect information about the individual web pages or products that\n            you view, what websites or search terms referred you to the Site, and information about how you interact\n            with\n            the Site. We refer to this automatically-collected information as “Device Information.”\n        </p>\n\n        <h2>We collect Device Information using the following technologies:</h2>\n        <ul>\n            <li>\n                <strong>Cookies</strong> are files with small amount of data, which may include an anonymous unique\n                identifier. Cookies are sent to your browser from a web site and stored on your computer\'s hard drive.\n                Like many sites, we use "cookies" to collect information. You can instruct your browser to refuse all\n                cookies or to indicate when a cookie is being sent. However, if you do not accept cookies, you may not\n                be able to use some portions of our Site.\n            </li>\n            <li>\n                <strong>\n                    Log files\n                </strong>\n                track actions occurring on the Site, and collect data including your IP address, browser type, Internet\n                service provider, referring/exit pages, and date/time stamps.\n\n            </li>\n            <li><strong>Web beacons, tags, and pixels</strong> are electronic files used to record information about\n                how you browse the Site.\n            </li>\n        </ul>\n        <p>\n            Additionally when you register and create an account at the Site, we collect certain information from you,\n            including your name, email address and phone number. We refer to this information as “User Information.\n        </p>\n        <p>\n            When we talk about “Personal Information” in this Privacy Policy, we are talking both\n            about Device Information and User Information.\n        </p>\n        <h2>Sharing your personal information:</h2>\n        <p>\n            We don’t share your personal information with third parties, but we may share your Personal Information to comply\n            with applicable laws and regulations, to respond to a subpoena, a search warrant or other lawful request for\n            information we receive, or to otherwise protect our rights.\n        </p>\n        <h2>Your rights</h2>\n        <p>\n            If you are a European resident, you have the right to access personal information we hold about you and to ask\n            that your personal information be corrected, updated, or deleted. If you would like to exercise this right,\n            please contact us through <a href="mailto:neoinfoshop@gmail.com">neoinfoshop@gmail.com</a>.\n        </p>\n        <h2>Data retention</h2>\n        <p>\n            When you register on the Site, we will maintain your User Information for our records unless and until you ask us to delete this information.\n        </p>\n        <h2>\n            Changes\n        </h2>\n        <p>\n            We may update this privacy policy from time to time in order to reflect, for example, changes to our practices or for other operational, legal or regulatory reasons.\n\n        </p>\n        <h2>\n            Contact us\n        </h2>\n        <p>\n            For more information about our privacy practices, if you have questions, or if you would like to make a\n            complaint, please contact us by e-mail at <a href="mailto:neoinfoshop@gmail.com">neoinfoshop@gmail.com</a>\n        </p>\n\n    </div>\n    <hr>\n    <div class="policy-footer">\n        <button class="ps-button" awr-click="agree">I agree</button>\n    </div>\n</div>'},useData:!0}),this.awr.core.templates.app.shared.components["ps-header"]=this.awr.core.templates.app.shared.components["ps-header"]||{},this.awr.core.templates.app.shared.components["ps-header"]["ps-header"]=Handlebars.template({compiler:[7,">= 4.0.0"],main:function(container,depth0,helpers,partials,data){return'<div class="ps-header" awr-class="has-doc-menu[?:hasDocMenu]">\n    <header class="">\n        \x3c!--page-on-scroll--\x3e\n        <nav class="navbar">\n            <div class="navbar-brand">\n                <a class="awr-logo" href="#" awr-click="brandClick">\n                    <img src="/assets/ps/img/ps-logo-v2-xsm.png" alt="">\n                </a>\n                <div class="text">\n                    ${brandText}\n\n                </div>\n                <div class="doc-menu-toggle" awr-click="toggleDocMenu">\n                    <span class="up fa fa-chevron-up"></span>\n                    <span class="down fa fa-chevron-down"></span>\n                </div>\n\n            </div>\n            <doc-menu></doc-menu>\n\n            \x3c!-- Collect the nav links, forms, and other content for toggling --\x3e\n\n            <div class="widget-container">\n                <user-menu></user-menu>\n                <main-menu></main-menu>\n            </div>\n            <div class="wide-bottom-border">\n\n            </div>\n        </nav>\n    </header>\n</div>'},useData:!0}),this.awr.core.templates.app.shared.components.shelf=this.awr.core.templates.app.shared.components.shelf||{},this.awr.core.templates.app.shared.components.shelf.shelf=Handlebars.template({compiler:[7,">= 4.0.0"],main:function(container,depth0,helpers,partials,data){return'<div class="shelf" awr-class="with-controls[?:inControls]">\n    <awr-if !?="inControls">\n        <div class="inner">\n            <div class="s-items">\n                <awr-repeat data="stories" awr-segment="shelfItem">\n\n                </awr-repeat>\n            </div>\n            <div class="shelf-item add-doc" awr-click="addDoc:coll.id" awr-class="on[?:canUserCreateDocs]">\n                <span>+</span>\n            </div>\n            <div class="right-push-item">\n\n            </div>\n        </div>\n    </awr-if>\n    <awr-if ?="inControls">\n        <div class="inner">\n            <awr-repeat data="cSections">\n                <div class="shelf-item c-section" awr-click="openCSection:id" awr-class="selected[stringEqual:id,sectionName]">\n                    <span class="icon ${icon}"></span>\n                    <span class="name">${name}</span>\n                </div>\n            </awr-repeat>\n            <div class="right-push-item">\n\n            </div>\n        </div>\n    </awr-if>\n\n</div>'},useData:!0}),this.awr.core.templates.app.shared.components["small-notif-modal"]=this.awr.core.templates.app.shared.components["small-notif-modal"]||{},this.awr.core.templates.app.shared.components["small-notif-modal"]["small-notif-modal"]=Handlebars.template({compiler:[7,">= 4.0.0"],main:function(container,depth0,helpers,partials,data){return'<div class="small-notif-modal" awr-class="alert-box[?:body.isAlertBox]">\n    <awr-if string-exist="body.title">\n        <h3 class="title">\n            <span class="${body.titleIcon}" awr-class="hidden[!stringExist:body.titleIcon]"></span>\n            <span>${body.title}</span>\n        </h3>\n    </awr-if>\n     <p class="msg-p" awr-class="hidden">\n        <span class="${body.icon}" awr-class="hidden[!stringExist:body.icon]"></span>\n         <span>${body.message}</span>\n    </p>\n</div>'},useData:!0}),this.awr.core.templates.app.shared.components["user-menu"]=this.awr.core.templates.app.shared.components["user-menu"]||{},this.awr.core.templates.app.shared.components["user-menu"]["user-menu"]=Handlebars.template({compiler:[7,">= 4.0.0"],main:function(container,depth0,helpers,partials,data){return'<div class="user-menu" awr-click="toggleUserMenu" awr-class="hidden[!objectExist:user]">\n<span class="name">${user.nickname}</span>\n<span class="u-icon far fa-user"></span>\n</div>\n<div class="user-menu-expand" awr-class="hidden[!objectExist:user]">\n    <div class="um-row name">${user.fullName}</div>\n    <div class="um-row email">${user.email}</div>\n    <div class="um-row u-role" awr-class="hidden[!?:user.isAdmin]">Administrator <span class="fa fa-star-o"></span></div>\n    <div class="um-row sign-out" awr-click="signOut">Sign Out <span class="fa fa-sign-out"></span></div>\n</div>'},useData:!0}),this.awr.core.templates.app.shared.segments=this.awr.core.templates.app.shared.segments||{},this.awr.core.templates.app.shared.segments["shelf-item"]=this.awr.core.templates.app.shared.segments["shelf-item"]||{},this.awr.core.templates.app.shared.segments["shelf-item"]["shelf-item"]=Handlebars.template({compiler:[7,">= 4.0.0"],main:function(container,depth0,helpers,partials,data){return'<div class="shelf-item loading" data-doc-id="${item.id}"\n     awr-click="openDoc:item.id,item.title">\n    <div class="cover">\n        <div class="cv-item loading-msg">\n            <span class="fa fa-spin fa-circle-o-notch"></span>\n            <span class="msg">Loading...</span>\n        </div>\n        <div class="cv-item processing-msg">\n            <span class="fa fa-spin fa-circle-o-notch"></span>\n            <span class="msg">Processing...</span>\n        </div>\n    </div>\n    <img awr-src="${item.cover | bookImgSrc}" alt="" awr-load="coverLoaded:item.id">\n</div>'},useData:!0}),this.awr.core.templates.app.shared.views=this.awr.core.templates.app.shared.views||{},this.awr.core.templates.app.shared.views.errors=this.awr.core.templates.app.shared.views.errors||{},this.awr.core.templates.app.shared.views.errors.errors_index=Handlebars.template({compiler:[7,">= 4.0.0"],main:function(container,depth0,helpers,partials,data){return'<div class="errors-view">\n\n    <awr-if string-equal="code,\'404\'">\n\n        <h3>\n            <span class="fa fa-chain-broken"></span>\n            <span class="text-danger">404</span>\n        </h3>\n        <p class="text-info">Sorry, but there\'s nothing to show!</p>\n    </awr-if>\n    <awr-if string-equal="code,\'e1\'">\n\n        <h3>\n            <span class="fa fa-exclamation-triangle text-warning"></span>\n            <span class="text-danger"></span>\n        </h3>\n        <p class="text-info">This collection is empty!</p>\n    </awr-if>\n    <awr-if string-equal="code,\'e2\'">\n\n        <h3>\n            <span class="fas fa-user-lock"></span>\n            <span class="text-danger"></span>\n        </h3>\n        <p class="text-info">You should be logged in for using this feature!</p>\n    </awr-if>\n\n</div>'},useData:!0});